{
  "RECORDS": [
{
    "challengeType": "First2Finish",
    "challengeName": "Cloud Hub - Errors",
    "challengeId": 30055549,
    "projectId": 9430,
    "forumId": "34349",
    "detailedRequirements": "Cloud Hub has implemented Honeybadger for error tracking, but no events are being sent to the service. We would like to track both code related errors and swagger schema errors if possible.",
    "finalSubmissionGuidelines": "1. Any additions or modifications to the code project pass on &quot;npm run lint&quot;. Any modifications to the base project needs to pass the tests, npm run test.<br />\n2. Please include a git patch for easier integration of changes.<br />\n3. The bulk of your documentation should be in the Readme.md and you should assume that this will be open source so make sure you cover all the steps to set up, &nbsp;If you have specific information that should not be included in a public readme (like links to your video) put them in a file called submission.txt and they will be omitted from the project if it is open sourced.",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001600",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-20T13:15:00.000-04:00",
    "registrationEndDate": "2016-11-19T12:15:00.000-05:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-11-19T12:20:00.000-05:00",
    "reviewType": "INTERNAL",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34349",
    "appealsEndDate": "2016-10-24T09:53:00.000-04:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055549",
    "technology": [
        "Node.js"
    ],
    "prize": [
        75
    ],
    "currentPhaseName": "Registration",
    "currentPhaseRemainingTime": -108638930,
    "currentPhaseEndDate": "2016-11-19T12:15:00.000-05:00",
    "platforms": [
        "NodeJS"
    ],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 91,
        "currentTime": 1588211031008
    },
    "requesterInformation": {
        "id": "bdb0221b6d869b3877c12fd142d1dceb63acea97-Vg3H99J79QaqO6lP",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055549",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Cloud Hub - camelCase",
    "challengeId": 30055550,
    "projectId": 9430,
    "forumId": "34350",
    "detailedRequirements": "Cloud Hub has decided to make some changes to how we want to display and accept data from our APIs. Originally we were built on Mongo and everything was by default camelCase. We switched to Postgres recently and updated the data layer to use their standard snake_case naming conventions. This causes some issues on our side where we had both types in the API service layer and had to rename fields because of reserved words. In this challenge we want to consolidate this to a common format on both the API and web application. We want the API to use camelCase, but transform the objects to snake_case before using them in the service level code.<br />\n<br />\n<strong>Requirements</strong><br />\n1. Transform data sent to the API results to use camelCase, likely inside utils.processResponse.<br />\n2. Modify data sent to the API in the body to accept camelCase, but tranform these objects to snake_case before the code is sent to the service layer.<br />\n3. Update Postman file to use new camelCase objects.<br />\n4. Update tests to pass new format.<br />\n5. Update Web project to use camelCase properties.<br />\n<br />\n&nbsp;",
    "finalSubmissionGuidelines": "1. Any additions or modifications to the code project pass on &quot;npm run lint&quot; and &quot;npm run test&quot;.<br />\n2. Provide your code and documentation in a single zip file. Please include a git patch for easier integration of changes.<br />\n3. The bulk of your documentation should be in the Readme.md and you should assume that this will be open source so make sure you cover all the steps to set up, &nbsp;If you have specific information that should not be included in a public readme (like links to your video) put them in a file called submission.txt and they will be omitted from the project if it is open sourced.<br />\n4. Provide a quick video of your solution in action (feel free to annotate your video if you are not comfortable with spoken English or don&rsquo;t like the sound of your own voice). Video may be private on youtube or added to the submission files. Your video can skip the setup of your environment, linting and tests. We are interested to see the new functionality of the app in the video.",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-20T15:28:00.000-04:00",
    "registrationEndDate": "2016-10-24T15:28:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-24T15:28:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34350",
    "appealsEndDate": "2016-10-28T21:02:00.000-04:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055550",
    "technology": [
        "Node.js"
    ],
    "prize": [
        450,
        200
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "NodeJS"
    ],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 99,
        "currentTime": 1588211031633
    },
    "requesterInformation": {
        "id": "a3b6b0fad059580b80c1462f472c10d917eaf2a5-CZXBKWoBOzuvuMiP",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055550",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Assembly Competition",
    "challengeName": "Living Progress - Build - POL - Haven OnDemand Predictive Analytics Implementation",
    "challengeId": 30055551,
    "projectId": 9611,
    "forumId": "34352",
    "detailedRequirements": "",
    "finalSubmissionGuidelines": "",
    "screeningScorecardId": "30000412",
    "reviewScorecardId": "30001470",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-11-11T09:00:00.000-05:00",
    "registrationEndDate": "2016-11-13T09:00:00.000-05:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-11-16T09:00:00.000-05:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34352",
    "appealsEndDate": "2016-11-20T09:00:00.000-05:00",
    "finalFixEndDate": "2016-11-21T21:00:00.000-05:00",
    "currentStatus": "Deleted",
    "digitalRunPoints": null,
    "reliabilityBonus": 280,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055551",
    "technology": [],
    "prize": [
        1400,
        700
    ],
    "currentPhaseName": "",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 93,
        "currentTime": 1588211032244
    },
    "requesterInformation": {
        "id": "adab14f1adfaed651a61271db93f07e4f6e0f451-V6lQCt9HRf5SFK74",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055551",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Web Design",
    "challengeName": "FAST! - GE Predix Community Microsite Design Challenge",
    "challengeId": 30055552,
    "projectId": 11135,
    "forumId": "607644",
    "introduction": "Welcome to the <strong>FAST! - GE Predix Community Microsite Design Challenge </strong>. We are looking to design a microsite portal for Topcoder designers and developers to learn more about the Predix, Register for Predix and compete on Topcoder/Predix related challenges. Similar to previous Topcoder customer sponsorship programs we are looking to create a simple yet engaging portal for this program.<br />\n<br />\n<strong>This is a fast timeline as we want the site designed, coded and live by November 1st!! This challenge is focused on the design!</strong><br />\n<br />\nLet us know if you have any questions.",
    "round1Introduction": "<strong>Round 1</strong><br />\nWe need you to provide your <strong>Desktop and Mobile designs&nbsp;</strong>or the following screens:<br />\n1) Home<br />\n2) Get Started<br />\n3) About<br />\n<br />\n<em>As part of your checkpoint submission, you must upload your submission to InvisionApp so we can provide direct feedback on your designs.<br />\n- Please request an InvisionApp link from the Copilot through the challenge forum<br />\n- Make sure all pages have correct flow. Please number your files (00, 01, 02, 03).</em>",
    "round2Introduction": "<strong>Round 2</strong><br />\nFor final round please provide all Web &amp; Mobile Designs, plus your Checkpoint Feedback implemented.<br />\nRemember to include your InvisionApp presentation with your updated designs.<br />\n<br />\n<em>As part of your final submission, you must upload your submission to InvisionApp so we can provide direct feedback on your designs.<br />\n- Please request an InvisionApp link from the Copilot through the challenge forum<br />\n- Make sure all pages have correct flow. Please number your files (00, 01, 02, 03).</em>",
    "detailedRequirements": "<strong>Challenge Details</strong><br />\nOur new Topcoder+Predix microsite will be used to inform and recruit Topcoder members to register for the GE Predix Platform! We will be running educational, fun and development challenges focused on Predix! (check it out here: https://www.predix.io/). As Topcoder Designers, we need you to review the content needs, review the Predix brand and pull relevant microsite information from the Predix site. When designing the site make it relevant to you and Topcoder developers. (The user is the Topcoder Community)<br />\n<br />\n<strong>Important: Reference Template</strong><br />\nWe will be using the &quot;Blitz&quot; template for the microsite<br />\n-&nbsp;http://blitz.topcoder.com/hpe/<br />\n- http://blitz.topcoder.com/hpe-lpc_design/<br />\n-&nbsp;http://blitz.topcoder.com/droneseries/<br />\n<br />\nDesign the site keeping this template in mind. The site must be branded Predix (so any links going out to the Predix site keeps the brand consistent).&nbsp;<br />\n<br />\n<strong>Microsite Content</strong><br />\nOld Concepts (incorrect branding)<br />\nhttps://topcoder.invisionapp.com/share/YS8W0L4XZ<br />\n<br />\n<strong>New </strong><strong>Predix</strong><strong> Branding</strong><br />\nhttps://www.predix.io/<br />\nhttps://drive.google.com/drive/folders/0BwfkY6SJxFPiY0hzeVE4S3lNcE0?usp=sharing<br />\nLet us know if you have problems accessing this folder.<br />\n<br />\n<strong>Microsite Navigation</strong><br />\n- Get started<br />\n- About<br />\n- Resources<br />\n- Compete<br />\n<br />\n<strong>General Directions</strong><br />\n- It is fine to copy any text directly from the Predix site (https://www.predix.io/)<br />\n- You can find FAQ&rsquo;s or questions and link to the /docs or /resources pages<br />\n- No &ldquo;&lt;GE monogram&gt; Predix&rdquo;... just use Predix (based on the provided site design/branding)<br />\n- Let us know if you need any images<br />\n<br />\n<strong>1) Home</strong><br />\n- The main goal is for Topcoder Community members to learn about Predix and register for Predix (on the GE site).<br />\n- All call to action items should relate to registering for Predix<br />\n- The main focus should be on the Topcoder Community and Predix<br />\n<br />\n<em>Content</em><br />\n- Marketing graphics/messaging (https://www.predix.io/)<br />\n- - Predix Messaging &amp; Why (You can use this content exactly as it is now on Predix site) (https://www.predix.io)<br />\n- - Predix Platform Tools and Service Catalog. Use the content from Predix Site but remember to update the styles to the match new design.<br />\n<br />\n- Main Action Button: Link to Signup (Predix)<br />\n- Action Button: Link to Signup (Topcoder)<br />\n- Action Button: Sign up for Topcoder Predix Newsletter<br />\nAll the Action Buttons/Links must be easily identifiable, so everyone can see them.<br />\n<br />\n<strong>2) Get Started</strong><br />\n<em>Content</em><br />\n- Welcome message (Dave Messinger)<br />\n- Information on Registering/Signup on Predix<br />\n- Build your first App!<br />\n- Interactive Demo: &nbsp;&ldquo;Get a hands-on sneak peek at the Predix platform&rdquo; - See how to visualize&hellip;. &ldquo;Try Interactive Demo&rdquo; button (could be interesting to add this, too&hellip;.)<br />\n- Information on Learning Challenges<br />\n- Information on Predix (Topcoder) Challenges<br />\n<br />\n- Action Button: Register for Predix<br />\n- Action Button: Sign up for Newsletter<br />\n<br />\n<strong>3) About</strong><br />\nContent<br />\n- Learning Predix, how to become a productive developer in the Predix cloud.<br />\n- Getting Started With Predix.<br />\n- Add a button to &quot;Try an Interactive Demo&quot;.<br />\n- Sponsor content: (Predix, GE Digital, GENIUSLINK) logos<br />\n- Action Button: Register for Predix<br />\n<br />\n<strong>4) Resources</strong><br />\n<em>Content</em><br />\n- Predix Resources (https://www.predix.io/resources)<br />\n- Message Board/Forum Link (Links to Topcoder Forum)<br />\n- Support Link<br />\n- FAQ&#39;s<br />\n- - How do I sign up for Predix? &nbsp;(https://www.predix.io/docs#hRtX6sx6)<br />\n- - How do I install &hellip; (https://www.predix.io/docs#fSrgvYQd)<br />\n- - I have question about Predix in general. Where do I go for answers? &nbsp;Here: https://www.predix.io/docs<br />\n- - More from https://www.predix.io/support/search/FAQ<br />\n- - What is the Industrial Internet: &nbsp;(there is a download here: www.ge.com/digital/predix)<br />\nMake this FAQ&#39;s page clean and easy to use, think Mobile First.<br />\n<br />\n- Action Button: Register for Predix<br />\n- Action Button: Sign up for Newsletter<br />\n<br />\n<strong>5) &quot;Interested in Predix&quot;</strong><br />\nSome countries might not be able to register for Predix so we want Topcoder members to be able to register their interest through another form (as Predix is not available everywhere yet).<br />\n- Think which fields are important to this form: Name? Email? Country? Interests?<br />\n- Look to design/add a simple &quot;interested in Predix&quot; signup or a hyperlink for members located in China and Russia.<br />\n- This could be near the Register button, text below the Register button etc.&nbsp;<br />\n<br />\n<strong>6) Compete</strong><br />\n- This will be a challenge list page (similar to the Blitz page challenge listing)<br />\n- Please use real content from Topcoder challenge list page<br />\n- This page should be part of the new Predix theme<br />\n<br />\n<strong>Required Sizes</strong><br />\n- Desktop (Web): Design for display 1280px and height as required.<br />\n- Mobile: Design for display 750px and height as required.<br />\n<br />\n<strong>Important</strong><br />\n- Keep things consistent. This means all graphic styles should work together.<br />\n- All of the graphics should have a similar feel and general aesthetic appearance.<br />\n<br />\n<strong>Target User</strong><br />\n- Topcoder Members interested in Predix<br />\n<br />\n<strong>Judging Criteria</strong><br />\n- How well you plan the user experience and capture your ideas visually.<br />\n- Cleanliness of your graphics and design<br />\n- Responsive design<br />\n- How is your design ready to go build?<br />\n<br />\n<strong>Submission &amp; Source Files:</strong><br />\n<em>Preview Image</em><br />\nPlease create your preview image as one (1) 1024x1024px JPG or PNG file in RGB color mode at 72dpi and place a screenshot of your submission within it.<br />\n<br />\n<strong>Submission File</strong><br />\nSubmit JPG/PNG for your submission files.<br />\n<br />\n<strong>Source Files</strong><br />\nPlease provide all original source files of the submitted design. Files should be created in Adobe Photoshop (layered PSD file) or Sketch.<br />\n&nbsp;<br />\n<strong>Final Fixes:</strong><br />\nAs part of the final fixes phase, you may be asked to modify your graphics (sizes or colors) or modify overall colors. We may ask you to update your design or graphics based on checkpoint feedback.",
    "screeningScorecardId": "30001363",
    "reviewScorecardId": "30001031",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 5,
    "topCheckPointPrize": 100,
    "postingDate": "2016-10-21T19:30:00.000-04:00",
    "registrationEndDate": "2016-10-27T05:59:00.000-04:00",
    "checkpointSubmissionEndDate": "2016-10-25T06:00:00.000-04:00",
    "submissionEndDate": "2016-10-27T06:04:00.000-04:00",
    "submissionsViewable": "false",
    "reviewType": "INTERNAL",
    "type": "design",
    "allowStockArt": "true",
    "filetypes": [
        "Layered PSD files created in Adobe Photoshop or similar",
        "AI files created in Adobe Illustrator or similar"
    ],
    "forumLink": "http://apps.topcoder.com/forums/?module=ThreadList&forumID=607644",
    "appealsEndDate": "2016-10-27T17:48:00.000-04:00",
    "finalFixEndDate": "2016-10-29T00:57:00.000-04:00",
    "submissionLimit": "5",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "design",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055552",
    "prize": [
        1500,
        750,
        300
    ],
    "winners": [],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 105,
        "currentTime": 1588211032847
    },
    "requesterInformation": {
        "id": "a5ae973293b1fa969ac958e4c372f8d21bca14ef-AwUgTJkYgXB5jFDN",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055552",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Hercules Pixi Receiver - Code Optimisation Challenge",
    "challengeId": 30055553,
    "projectId": 9429,
    "forumId": "33163",
    "detailedRequirements": "We have an existing application that is the client in a client-server application. &nbsp;The client handles input and drawing based on commands sent from a server.<br />\n<br />\nThe client is currently implemented in Javascript, runs in a web browser, and uses http://www.pixijs.com/ for WebGL rendering. &nbsp; The code runs alright, but we want to investigate ways to make it run more smoothly and quickly.<br />\n<br />\nIn the forum is the existing code for the Pixi receiver, as well as a configuration to use locally. &nbsp;This configuration will allow you to load up the Pixi receiver and see a production interface rendered on the screen, with a virtual remote control you can use to control the input.<br />\n<br />\n<strong>Goal</strong><br />\n<br />\nThe goal of this challenge is to optimize the code so that the receiver runs more smoothly and efficiently. &nbsp;You can&nbsp;<strong>only</strong>&nbsp;change the Javascript code - the server cannot be changed and is out of scope.<br />\n<br />\nThe biggest focus right now is the &quot;Guide&quot; tab. &nbsp;That&#39;s the most complex UI in the app and the one that has the most focus by the customer. &nbsp;<br />\n<br />\n<strong>Things to look at</strong><br />\n<br />\nThere are a number of areas to look at in terms of tweaking performance:<br />\n<br />\n* Make sure only visible elements are drawn to the screen<br />\n* When animating complex items, maybe convert them to an image first and then animate the image instead of the individual sprites<br />\n* Investigate the animation implementations and look at optimizations to make things smoother. &nbsp;There are 3rd party libraries that can be used, like&nbsp;http://www.createjs.com/tweenjs<br />\n<br />\n<strong>Reviewing</strong><br />\n<br />\nTo meet the requirements, you must show improvements to performance and you must make at least 2 separate, documented changes to the codebase to help with performance. &nbsp;<br />\n<br />\nEven if you can only find a single area to improve upon, please get in touch with the copilot, as we are happy to pay for smaller fixes or incomplete submissions if they can show performance working better.<br />\n<br />\n<strong>Changes</strong><br />\n<br />\nThe codebase currently works as expected. &nbsp;Do&nbsp;<strong>not</strong>&nbsp;implement any changes that break the functionality.<br />\n<br />\n<strong>Submission</strong><br />\n<br />\nYour submission must include a patch file against the Git repository commit hash&nbsp;90205c1a095b6bcaa861fa42d88202819629a252. &nbsp;Details on getting access to the Git repo can be found in the forum.<br />\n<br />\nYour deployment guide must cover how to properly apply the patch.<br />\n<br />\nYou&nbsp;<strong>MUST</strong>&nbsp;also include a document explaining the changes made to the code and detailing how much of an improvement the changes made.<br />\n&nbsp;",
    "finalSubmissionGuidelines": "Please see above",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-21T03:00:00.000-04:00",
    "registrationEndDate": "2016-10-27T03:01:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-27T03:01:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=33163",
    "appealsEndDate": "2016-10-30T15:01:00.000-04:00",
    "currentStatus": "Cancelled - Zero Submissions",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055553",
    "technology": [
        "JavaScript"
    ],
    "prize": [
        700,
        350
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "NodeJS"
    ],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 130,
        "currentTime": 1588211033463
    },
    "requesterInformation": {
        "id": "8e7ce1fdb5a77011d5e47d36651e9ad93dc9ba5c-TEfCOrm1bWwOF1fa",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055553",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Web Design",
    "challengeName": "GE - TurboConnect - Asset and Model View Editor Design Refinement Challenge",
    "challengeId": 30055554,
    "projectId": 9988,
    "forumId": "607645",
    "introduction": "Welcome back to the &quot;<strong>GE - TurboConnect - Asset and Model View Editor Design Refinement Challenge</strong>&quot;. In the previous challenge, we asked you to design the majority of the main application screens. Now in this Refinement Challenge, we need your creative skills to explore a main function of the site that needs additional design thinking.&nbsp;<br />\n<br />\nWe have a wireframe that explains the overall page structure but specific tasks and functions have not been wireframed. You will need to design the best UI/UX interactions and define a series of screens that show the best way for a user to complete the required sets of actions/features in the application.<br />\n<br />\nIn addition, we will also need you to complete design updates to the existing screens in order to align the design and branding with the latest <a href=\"https://www.predix.io/\">GE Predix platform</a>. The provided designs are a&nbsp;good start but there are inconsistencies that we need you to analyze and fix. This is a&nbsp;lower priority (your focus should be on the model editor) but we will need to see the Predix&nbsp;branding updates if you are to succeed in this challenge!<br />\n<br />\nLooking forward to your design refinements!&nbsp;",
    "round1Introduction": "<strong>Initial design for client review:</strong><br />\n1. Model Editor Details<br />\n-- Tree Model<br />\n-- Flow Model<br />\n<br />\n<span style=\"color:#FF0000\">Important: As part of your Checkpoint Submission, you must upload your submission to InvisionApp so we can provide direct feedback on your designs.<br />\n- Please request Topcoder InvisionApp access from adroc@topcoder.com<br />\n- Make sure all pages have correct flow. Please number your files (00, 01, 02, 03).</span>",
    "round2Introduction": "<strong>All requirements like stated in challenge details with client feedback applied:</strong><br />\n1. Model Editor Details<br />\n-- Tree Model<br />\n-- Flow Model<br />\n2. Predix Updates<br />\n<br />\n<span style=\"color:#FF0000\"><strong>Important: </strong>As part of your Final Submission, you must upload your submission to InvisionApp so we can provide direct feedback on your designs.<br />\n- Please request Topcoder InvisionApp access from adroc@topcoder.com<br />\n- Make sure all pages have correct flow. Please number your files (00, 01, 02, 03).</span>",
    "detailedRequirements": "<span style=\"color:#0000FF\"><strong>Challenge Overview</strong></span><br />\nWe are creating an application that allows users to define domains, build prototypes (high-level abstracts/templates) of assets &amp; to create vendor specific definitions for those templates. The final output from this app will be Predix asset models. In the previous challenge, we asked you to create all the main screens needed for the application and now we need everyone to go deeper and a refine the UI/UX.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Predix UI</strong></span><br />\n<strong>Important: </strong>Review and learn about the <a href=\"http://predixdev.github.io/predix-ui/\"><strong>Predix</strong></a><a href=\"http://predixdev.github.io/predix-ui/\"><strong> UI</strong></a> system. This is the first of many GE challenges that will be using this system! It is critical that you learn the Predix UI best practices. Templates and resource files have been provided.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Task Requirements</strong></span><br />\n<strong>1) Model Editor Details</strong><br />\n- The wireframes show the general functions of this page but do not get into detail.<br />\n- There are two types of layouts that the clients would like to see:<br />\n<br />\n<em><strong>1.a) Tree Model:&nbsp;</strong></em><br />\n- Screen references &quot;Page 31 of Wireframes&quot;<br />\n- This purpose of this page is to find assets and building models. The tree model is a very traditional information organizing structure that displays hierarchy based on displaying which assets fit within or underneath in the file structure.<br />\n<br />\n- There are several reasons that users will come to this page:<br />\n-- Build new asset models: Users will build out new asset models using the model builder.&nbsp;<br />\n-- An alternate way to find assets. Users can often use existing models to find a particular asset or set of assets that they need for a project. For example, a user might know the individual components of a wastewater treatment plant but might be able to find that asset easily in the assets list. If a user knows an asset is contained in a model, it can be easier for the user to find that asset by finding the model.<br />\n<br />\n- Actions users will take on this page:<br />\nNote: these actions are not explained in the wireframe. We are looking for your UI/UX expertise to help develop screens that will explain how a user will perform these actions within this portion of the experience.<br />\n<br />\n<em>a. Add and create new models:&nbsp;<br />\n- Create a new model<br />\n- Search for existing models.<br />\n<br />\nb. Search for Assets / templates<br />\n- Users will search for assets from the panel on the left side of the screen.<br />\n<br />\nc. Drag and drop Assets into asset model panel:<br />\n- Users will drag and drop assets from the left panel onto the model builder panel to build out models.<br />\n- Assume there will be more than 6 assets in the asset panel<br />\n<br />\nd. Remove Assets from model<br />\n- Users will need to be able to remove assets from the model. How will this work?<br />\n<br />\ne. Drag and drop to &quot;re-parent&quot; assets.<br />\n- Eg: how do I move something up or down in the hierarchy of the model.<br />\n- Click and drag to change positions of assets in the models.</em><br />\n<br />\n<em><strong>1.b) Flow Model:&nbsp;</strong></em><br />\n- Screen references &quot;Page 31 of Wireframes&quot;<br />\n- This purpose of this page is for finding assets and building models. The flow model is different from the parent / child model in that it is a more visual approach to showing how one element of a model interacts with the next.&nbsp;<br />\n<br />\n- There are several reasons that users will come to this page:<br />\n-- Build new asset models: Users will build out new asset models using the model builder.&nbsp;<br />\n-- An alternate way to find assets. Users can often use existing models to find a particular asset or set of assets that they need for a project. For example, a user might know the individual components of a wastewater treatment plant but might be able to find that asset easily in the assets list. If a user knows an asset is contained in a model, it can be easier for the user to find that asset by finding the model.<br />\n<br />\n- Actions users will take on this page:<br />\nNote: these actions are not explained in the wireframe. We&rsquo;re looking for your UI/UX expertise to help develop screens that will explain how a user will perform these actions within this portion of the experience.<br />\n<br />\n<em>a. Add and create new models:&nbsp;<br />\n- Create a new model<br />\n- Search for existing models.<br />\n<br />\nb. Search for Assets / templates<br />\n- Users will search for assets from the panel on the lower-left side of the screen.<br />\n<br />\nc. Drag and drop Assets into asset model panel:<br />\n- Users will drag and drop assets from the left panel onto the model builder panel to build out models.<br />\n- Assume there will be more than 6 assets in the asset panel<br />\n<br />\nd. Remove Assets from model<br />\n- Users will need to be able to remove assets from the model. How will this work?<br />\n<br />\ne. Add / Remove Branch:<br />\n- A branch is an area of the model where one or more assets &ldquo;branches&rdquo; off from a previous asset.<br />\n- Users must be able to add and remove branches.<br />\n- Show the changes that occur as a user adds/removes branches.<br />\n<br />\nf. How does the model scale if there are many components or the model is too large to fit on the screen all at once?<br />\n- Can a user zoom in / out? How?<br />\n- Can a user pan using the mouse? Think Google Maps.</em><br />\n<br />\n<strong>2. Predix Updates</strong><br />\n- The design of all screens from the previous challenge must be <strong>updated to meet the exacting specifications of the Predix brand.</strong><br />\n- Predix is GE&#39;s new set of design guidelines. Future GE challenges will require you to know Predix, so use this challenge as an opportunity to become familiar so that you can work better and faster in future GE challenges!<br />\n-&nbsp;<a href=\"http://predixdev.github.io/predix-ui/\">http://predixdev.github.io/predix-ui/</a><br />\n-- Predix contains many pre-defined styles for things like form fields, buttons, check boxes, tabs, etc. These elements exist in code and the designs we are provided are essentially guidelines for which elements to use and how.<br />\n-- You will find these elements in this file: &quot;Px_stencils_v09.ai&quot; which is part of the Predix branding packge.<br />\n-- We need your help to make edits to the previous designs to ensure that we are using Predix brand elements for all instances where they are available.<br />\n--&nbsp;We must make absolutely sure that any common design elements are being sourced from the existing Predix libraries and that we are not creating something new that differs from an existing style.<br />\n-- When we Prototype this application we will be using HTML/CSS standards based on&nbsp;http://predixdev.github.io/predix-ui/<br />\n--- Existing Design: <a href=\"https://topcoder.invisionapp.com/share/UM91TOBB9#/199088733_Tc-01-Add-To-Collection\">https://topcoder.invisionapp.com/share/UM91TOBB9#/199088733_Tc-01-Add-To-Collection</a><br />\n<br />\n<strong>Design Elements</strong><br />\n- In addition to common elements, pay extremely close attention to the following, ensuring that these design elements are on brand:<br />\n-- Grid sizes<br />\n-- Overall page layout<br />\n-- Typography sizes and colors<br />\n-- Overall color usage throughout the design<br />\n-- GE Inspira - This typeface must be used for all typography.<br />\n-- GE Icons. GE uses &quot;font awesome&quot; for icons. All icons should be coming from the Font Awesome typeface. <a href=\"http://fontawesome.io/assets/font-awesome-4.7.0.zip\">http://fontawesome.io/assets/font-awesome-4.7.0.zip</a><br />\n---- Follow this tutorial to learn how to use fontawesome icons in your photoshop or illustrator document. <a href=\"https://woorkup.com/font-awesome-photoshop-illustrator/ http://fontawesome.io/cheatsheet/\">https://woorkup.com/font-awesome-photoshop-illustrator/ http://fontawesome.io/cheatsheet/</a><br />\n---- If you need an icon that you can not find through font awesome, then create your own. But font awesome should be your default resource.&nbsp;<br />\n-- Look at &quot;page samples&quot;: <a href=\"http://predixdev.github.io/predix-ui/\">http://predixdev.github.io/predix-ui/</a>, <a href=\"http://predixdev.github.io/predix-ui/?show=px-alert-message&amp;type=component\">http://predixdev.github.io/predix-ui/?show=px-alert-message&amp;type=component</a><br />\n<br />\n<span style=\"color:#0000FF\"><strong>Design Consideration</strong></span><br />\n- We would like to see your design for the model editor section.<br />\n- Not just the same slide as in the mockup but how the add new item, edit an existing item, and remove items would work.<br />\n- Also how to handle if there are many items in the model (too big to show on one screen).<br />\n- Any new screens must follow the Predix UI styling.&nbsp;<br />\n<br />\n<span style=\"color:#FF0000\"><strong>Important</strong><br />\n- Keep things consistent. This means all graphic styles should work together.<br />\n- All of the graphics should have a similar feel and general aesthetic appearance.</span><br />\n<br />\n<span style=\"color:#0000FF\"><strong>New Predix Branding</strong></span><br />\n- <a href=\"https://www.predix.io/\">https://www.predix.io/</a><br />\n-&nbsp;<a href=\"http://predixdev.github.io/predix-ui/\">http://predixdev.github.io/predix-ui/ </a><br />\n<br />\n<span style=\"color:#0000FF\"><strong>Screen Sizes</strong></span><br />\n- Specific screen sizes: Desktop: min 1280px width and height as required.<br />\n- Make sure you create graphic in &#39;shape&#39; format, so when we resize graphics everything will still look sharp!&nbsp;<br />\n<br />\n<strong><span style=\"color:#0000FF\">Documentation</span><br />\nGoogle Drive:&nbsp;</strong><a href=\"https://drive.google.com/drive/folders/0B8cviJNGmPm5ZDFSTno3UTJXNzg?usp=sharing\">https://drive.google.com/drive/folders/0B8cviJNGmPm5ZDFSTno3UTJXNzg?usp=sharing</a><br />\n- GE Fonts<br />\n- Existing Storyboard<br />\n- Original Wireframes<br />\n- Predix Branding&nbsp;<br />\n- Font awesome icons <a href=\"http://fontawesome.io/assets/font-awesome-4.7.0.zip\">http://fontawesome.io/assets/font-awesome-4.7.0.zip</a>&nbsp;<br />\n- <a href=\"https://woorkup.com/font-awesome-photoshop-illustrator/ http://fontawesome.io/cheatsheet/\">https://woorkup.com/font-awesome-photoshop-illustrator/ http://fontawesome.io/cheatsheet/</a><br />\n<br />\n<span style=\"color:#0000FF\"><strong>Target User</strong></span><br />\nAnyone who can create / edit / maintain asset definitions / asset models in Predix<br />\n- <strong>Author</strong>: The Author will define new domains where their teams will be working. Such as Water, MFG, CPG, Power, Power Gen<br />\n-<strong> Builder</strong>: The Building creates the templates and high level abstractions for the domain. &nbsp;They define what Analytics, base properties and displays will be required for the solution. Such as Turbine, Pump, Diaper Line<br />\n- <strong>Creator</strong>: The Creator extends the builder&rsquo;s templates into specific vendor versions of the templates (if needed). &nbsp;This would be to map to specific properties, analytics and vendor specific displays.<br />\n- <strong>Deployer</strong>: The deployer finishes the development by &ldquo;binding&rdquo; specific data attributes to the model. &nbsp;This can be things like the Asset name, the Historian tag to use for a value. &nbsp;They do not add new properties or new analytics to the model.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Stock Artwork</strong></span><br />\nFor this challenge, you can only use Stock photos (No stock icons allowed except the one we mentioned above)!<br />\n- Stock Artwork policies: <a href=\"https://help.topcoder.com/hc/en-us/articles/217481408-Policy-for-Stock-Artwork-in-Design-Submissions\">https://help.topcoder.com/hc/en-us/articles/217481408-Policy-for-Stock-Artwork-in-Design-Submissions</a><br />\n- Latest Design Policies: <a href=\"http://help.topcoder.com/hc/en-us/categories/202610437-DESIGN\">http://help.topcoder.com/hc/en-us/categories/202610437-DESIGN</a><br />\n<br />\n<span style=\"color:#0000FF\"><strong>Judging Criteria</strong></span><br />\nYour submission will be judged on the following criteria:<br />\n- How well your design align with the objectives of the challenge<br />\n- Consistency of your design with our branding<br />\n- Cleanliness of screen design and user flow<br />\n- Overall design and user experience<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Submission &amp; Source Files</strong></span><br />\n<strong>Preview Image</strong><br />\nPlease create your preview image as one (1) 1024x1024px JPG or PNG file in RGB color mode at 72dpi and place a screenshot of your submission within it.<br />\n<br />\n<strong>Submission File</strong><br />\nSubmit JPG/PNG for your submission files.<br />\n<br />\n<strong>Source Files</strong><br />\nPlease provide all original source files of the submitted design. Files should be created in Adobe Photoshop (layered PSD file).<br />\n&nbsp;<br />\n<span style=\"color:#0000FF\"><strong>Final Fixes</strong></span><br />\nAs part of the final fixes phase, you may be asked to modify your graphics (sizes or colors) or modify overall colors. We may ask you to update your design or graphics based on checkpoint feedback.<br />\n<br />\n<em><strong>Additional GE Challenge Rules</strong><br />\n- Please refer to GE Official Rules attached to this challenge.<br />\n- To the extent there is any conflict between these Official Rules and additional Topcoder Terms and Conditions of Use referenced off the Website, these Official Rules govern.<br />\n- All winners from this challenge need print, sign and send back to us the IP Rights document from GE before eligible for the prizes.</em>",
    "screeningScorecardId": "30001363",
    "reviewScorecardId": "30001031",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 5,
    "topCheckPointPrize": 100,
    "postingDate": "2016-10-26T22:31:00.000-04:00",
    "registrationEndDate": "2016-11-01T07:02:00.000-04:00",
    "checkpointSubmissionEndDate": "2016-11-01T07:02:00.000-04:00",
    "submissionEndDate": "2016-11-07T10:00:00.000-05:00",
    "submissionsViewable": "false",
    "reviewType": "INTERNAL",
    "type": "design",
    "allowStockArt": "true",
    "filetypes": [
        "Layered PSD files created in Adobe Photoshop or similar",
        "AI files created in Adobe Illustrator or similar"
    ],
    "forumLink": "http://apps.topcoder.com/forums/?module=ThreadList&forumID=607645",
    "appealsEndDate": "2016-11-08T19:40:00.000-05:00",
    "finalFixEndDate": "2016-11-20T08:05:00.000-05:00",
    "submissionLimit": "",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "design",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055554",
    "prize": [
        1500,
        750
    ],
    "winners": [],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 151,
        "currentTime": 1588211034100
    },
    "requesterInformation": {
        "id": "d4b92c61139804fbf95334691b63ef982e613bac-5fE6X5dhzaZN5vdd",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055554",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "UI Prototype Competition",
    "challengeName": "Predix - GE TurboConnect - Asset and Model View Editor UI Demo Challenge",
    "challengeId": 30055555,
    "projectId": 9988,
    "forumId": "34354",
    "detailedRequirements": "Welcome to <strong>Predix - GE TurboConnect - Asset and Model View Editor UI Demo Challenge</strong><br />\n<br />\nThe goal of this challenges is to create an HTML/CSS/JavaScript Demo using the <a href=\"https://predixdev.github.io/predix-ui/\">GE Predix UI Catalog</a>. The TurboConnect Asset and Model application allow&#39;s users the ability to define domains, build prototypes (high-level abstracts/templates) of assets &amp; to create vendor specific definitions for those templates.<br />\n<br />\nRead the challenge details and let us know if you have any questions!",
    "finalSubmissionGuidelines": "<strong>General Details and Tasks</strong><br />\n- The focus of this UI Demo Challenge is to create the HTML/CSS/JS of the provided UI Design by using the <a href=\"https://predixdev.github.io/predix-ui/?show=what_is_predix_ui&amp;type=local\">Predix UI Catalog</a> and its pre-existing UI components.<br />\n- You can use <a href=\"https://github.com/PredixDev/predix-seed\">Predix UI Seed</a> that will accelerate web development for this challenge<br />\n- Click around and get familiar with Predix UI CSS and Predix UI Components before you start building this demo.<br />\n- As with the existing Predix UI Seed, this application needs to support Responsive/fluid layout. But for now, you can stick with provided Desktop screen sizes only<br />\n- We will use this Demo on Touch Screen Laptop, make sure your code supports this.<br />\n- For the icons, use the&nbsp;<a href=\"https://predixdev.github.io/predix-ui/?show=px-iconography-design&amp;type=css\">Predix UI Iconography</a>. If the icon not exists, create them as SVG format.<br />\n<br />\n<strong>Challenge Assets</strong><br />\n<a href=\"https://drive.google.com/drive/folders/0B31nrwic_6z0bklRZHljdU9mejA?usp=sharing\">https://drive.google.com/drive/folders/0B31nrwic_6z0bklRZHljdU9mejA?usp=sharing</a><br />\nStoryboard.zip - GE TurboConnect Storyboard Design<br />\n<br />\n<strong>Important:</strong><br />\n<strong>- By default, the Predix UI overrides the designers PSD creation.</strong><br />\n- All elements in your submission should be built using the Predix UI CSS &amp; Predix UI Components.<br />\n- If some elements do not exist within the Predix UI, you should use Google Polymer for this challenge:<br />\n-- <a href=\"https://beta.webcomponents.org/\">https://beta.webcomponents.org/</a><br />\n-- <a href=\"https://elements.polymer-project.org/browse?package=google-web-components\">https://elements.polymer-project.org/browse?package=google-web-components</a><br />\n- We DO NOT want you to customize any of the pre-existing UI components.<br />\n- Let us know if you cannot find related Components and CSS. Or you can use an open source library by linked via <a href=\"http://bower.io/\">Bower Library Manager</a><br />\n- DO NOT just put raw JavaScript library inside your prototype<br />\n- You must use SASS/SCSS for CSS Pre-Processor<br />\n- If you use a custom styling/function it must be based on the existing library and put in a separate file.<br />\n- The data for each page will need to be loaded from JSON files.<br />\n- Create the appropriate documentation so we are able to setup and test your submission.<br />\n<br />\n<strong>TreeView Library</strong><br />\n- This is the main TreeView library we want you to use for this challenge.<br />\n- If in some parts you cannot mimic the storyboard look and feel and need swap with library default functionality, let us know via challenge forum.<br />\n- TreeView Library: <a href=\"https://dhtmlx.com/docs/products/demoApps/dhtmlxXMLEditor/index.html\">https://dhtmlx.com/docs/products/demoApps/dhtmlxXMLEditor/index.html</a><br />\n<br />\n<strong>GE - Turbo Connect Asset and Model View Editor Screen Requirements</strong><br />\n<strong>General Layout</strong><br />\n- Update the page title into Turbo Connect | Asset &amp; Model Editor<br />\n- Keep existing Powered by Predix on the right side of header<br />\n- Keep existing footer like Predix UI Seed<br />\n- Use Predix UI Layout to place all elements in web application<br />\n<br />\n<strong>Left Navigation Menu</strong><br />\n- Hamburger menu<br />\n- Templates Editor<br />\n- Assets Editor<br />\n- Models Editor<br />\n- Models Viewer (Can be dead link)<br />\n- History (Can be dead link)<br />\n- Import (Can be dead link)<br />\n- Help (Can be dead link)<br />\n- User Thumbnail (Can be dead link)<br />\n<br />\n<strong>1). Models Editor Flow and Interactions</strong><br />\nScreenshot: Screenshot: 01_4_Tree-Model-Close-Model-V2.jpg<br />\n- Use this design of Close button that is placed on the right side<br />\n- For this Models screen page layout consists of header and fluid body with two columns<br />\n- Display title for MODELS and Acme Pumping<br />\n<br />\n<strong>Left Column</strong><br />\n- Filter link, Create Model icons and have the total placed on the top<br />\n- Selected row using teal color, white color of edit button show up when selected the row<br />\n- Hover on row styling also needs to show up the edit button and tooltips (Screenshot: 01_5_Tree-Model-List-Hover.jpg)<br />\n<br />\n<strong>Right Column</strong><br />\n- This column displays the Tree View<br />\n- Need able to select each row<br />\n- Cancel and Save button always placed on the bottom of Tree view box<br />\n- Hover on tree view need display edit button and tooltips (Screenshot: 01_6_Tree-Model-Hover.jpg)<br />\n<br />\n<strong>Filter</strong><br />\nScreenshot: 01_7_Tree-Model-Refine.jpg<br />\n- Click Refine link, need load column on the left side (Screenshot: 01_8_Tree-Model.jpg)<br />\n- All columns need use fluid width after Refine column appears. Content needs to be pushed to the right<br />\n- Display all text inputs like storyboard look<br />\n- Notice there are magnify icon for Keyword and Type text inputs<br />\n- Show All Assets check box placed on top of every field&nbsp;(Screenshot: 01_9_Tree-Model.jpg)<br />\n- Keyword and Type need build using autocomplete function (Screenshot: 01_10_Tree-Model.jpg)<br />\n- Type on text input field need display autocomplete (Screenshot: 01_11_Tree-Model.jpg)<br />\n- Set bold text on autocomplete result<br />\n- Autocomplete sample for Type text input (Screenshot: 01_12_Tree-Model.jpg, Screenshot: 01_13_Tree-Model.jpg)<br />\n- For Date created field, you need build the date picker (Screenshot: 01_14_Tree-Model.jpg)<br />\n- Need able to navigate by month when click previous and next navigation (Screenshot: 01_15_Tree-Model.jpg)<br />\n- After some values filled for the Filter panel (Screenshot: 01_16_Tree-Model.jpg)<br />\n<br />\n<strong>Add New Model</strong><br />\nScreenshot: 01_17_Tree-Model.jpg<br />\n- Add New Model triggered from the button on the right column<br />\n- Hover Add Model button need to load the tooltips<br />\n- Modal window show up that allow user to input Model Name and select the Hierarchy or Flow option (Screenshot: 01_18_Tree-Model.jpg)<br />\n- Create button need close modal window and create empty content on the right side (Screenshot: 01_19_Tree-Model.jpg)&nbsp;&nbsp; &nbsp;<br />\n- User need able to drag from left column to the right column (Screenshot: 01_20_Tree-Model.jpg)<br />\n- This styling when row being dragging (Screenshot: 01_21_Tree-Model.jpg)<br />\n- Drag Placeholder styling when reaching the right column (Screenshot: 01_22_Tree-Model.jpg, Screenshot: 01_23_Tree-Model.jpg)<br />\n- After row dropped need show selected style (Screenshot: 01_24_Tree-Model.jpg)<br />\n- Notice delete button shows up on the right side of selected row<br />\n- Click the arrow needs to expand/collapse each children<br />\n- When dragging row, need able to set the indentation (Screenshot: 01_25_Tree-Model-Hover.jpg, Screenshot: 01_26_Tree-Model-Hover.jpg, Screenshot: 01_27_Tree-Model-Hover.jpg)<br />\n- After dropped the row, need display the New Asset modal window (Screenshot: 01_28_Tree-Model-Clicked.jpg)<br />\n- User-filled text input (Screenshot: 01_29_Tree-Model.jpg, Screenshot: 01_30_Tree-Model.jpg)<br />\n- Create button need add new item on Tree View.<br />\n- Notice there are remove button on the right side (Screenshot: 01_31_Tree-Model.jpg)<br />\n- Select another row also need display remove button (Screenshot: 01_32_Tree-Model.jpg)<br />\n- Click delete button need load the modal windows (Screenshot: 01_33_Tree-Model.jpg)<br />\n- Need remove the selected row from Tree View<br />\n- User need able to change from one row to another (Screenshot: 01_34_Tree-Model.jpg)<br />\n- Drag Placeholder shows up when row dragging to another rows (Screenshot: 01_35_Tree-Model.jpg, Screenshot: 01_36_Tree-Model.jpg, Screenshot: 01_37_Tree-Model.jpg, Screenshot: 01_38_Tree-Model.jpg)<br />\n- After row dropped (Screenshot: 01_39_Tree-Model.jpg)<br />\n- Hover on another row, display the delete button on the right side (Screenshot: 01_40_Tree-Model-Hover.jpg)<br />\n<br />\n<strong>Favorites Column</strong><br />\nScreenshot: 01_41_Tree-Model.jpg<br />\n- Click Favorites button need load the Favorites column (Screenshot: 01_42_Tree-Model.jpg)<br />\n- User need able to drag and drop from model column to Favorites (Screenshot: Screenshot: 01_43_Tree-Model.jpg, Screenshot: 01_44_Tree-Model.jpg, Screenshot: 01_45_Tree-Model.jpg)<br />\n- After added the row, need display the checkbox on the left side (Screenshot: 01_46_Tree-Model.jpg)<br />\n<br />\n<strong>2). Models Editor Flow and Interactions</strong><br />\nScreenshot: 02_1_Flow-Model.jpg<br />\n- This page displays the Flowchart View<br />\n- Diagram Library for this challenge can be image based<br />\n- Hover on the Add model button needs to load the tooltips<br />\n- New Model modal window show up (Screenshot: 02_2_Flow-Model.jpg)<br />\n- Modal window after user selects the option (Screenshot: 02_3_Flow-Model.jpg)<br />\n<br />\n<strong>Refine</strong><br />\nScreenshot: 02_10_Flow-Model.jpg<br />\n- Click Refine needs to load the column on the left side (Screenshot: 02_11_Flow-Model.jpg)<br />\n- Other columns need to be pushed to the right side<br />\n- Need able to checked on/off the checkboxes (Screenshot: 02_12_Flow-Model.jpg)<br />\n<br />\n<strong>Add New Asset</strong><br />\nScreenshot: 02_13_Flow-Model.jpg<br />\n- Hover on Add New Asset need load the modal window<br />\n- Add New Asset Modal Window (Screenshot: 02_14_Flow-Model.jpg)<br />\n- After type some value (Screenshot: 02_15_Flow-Model.jpg)<br />\n- Save button need close the modal<br />\n<br />\n<strong>3) Templates Editor Flow and Interactions</strong><br />\nScreenshot: 03_Predix-Update-01.jpg<br />\n- This is Templates Editor screen that user access from the 1st button on the left menu<br />\n- Templates column on the left and Collection column on the right side<br />\n- Selected row need use grey background<br />\n- Click Filter link need load the Filter column (Screenshot: 03_Predix-Update-02.jpg)<br />\n- Match forms like storyboard (Screenshot: 03_Predix-Update-03.jpg)<br />\n- Clear need empty all values<br />\n- Filter button placed on the right side<br />\n- For Templates screen there are 2 options for Folder View and List View<br />\n- Click List View tab need display templates in list format (Screenshot: 03_Predix-Update-04.jpg)<br />\n- Click Template Name need load the Template Updates<br />\n<br />\n<strong>4). Templates Updates</strong><br />\nScreenshot: 03_Predix-Update-05.jpg<br />\n- User landed to this screen after double click name on Templates page<br />\n- This is Templates Updates look<br />\n- Match input fields like storyboard look<br />\n- Display some boxes with collapsible function<br />\n- User need able to scroll down the page to see whole content<br />\n- Properties content when expand the content (Screenshot: 03_Predix-Update-06.jpg)<br />\n- Match table data like storyboard look<br />\n- Click Save take user back to Templates screen<br />\n- Select some checkboxes need highlighted the rows (Screenshot: 03_Predix-Update-07.jpg)<br />\n- Click Export button need load Export screen (Screenshot: 03_Predix-Update-08.jpg)<br />\n- Only one option able to select for radio buttons<br />\n- But, checkboxes can select more than one<br />\n<br />\n<strong>5). Assets Editor Flow and Interactions</strong><br />\nScreenshot: 03_Predix-Update-09.jpg<br />\n- User access this screen from 2nd menu on the left navigation<br />\n- Page display 2 columns for main content and Collection on the right side<br />\n- Filter link&nbsp;loads the Filter column. Set hidden by default<br />\n- User can drag the collection to the asset area (Screenshot: 03_Predix-Update-10.jpg)<br />\n- Assign Template modal window show up after dropped to some rows (Screenshot: 03_Predix-Update-11.jpg)<br />\n- User can select some options of the checkboxes<br />\n- Click Apply button need load Asset Updates explained below<br />\n<br />\n<strong>Asset Updates</strong><br />\nScreenshot: 03_Predix-Update-12.jpg<br />\n- Follow fields like storyboard look<br />\n- Display some collapsible boxes like storyboard look<br />\n- Click Arrow under Template field or Add Template links need load Templates screen that allow user to add some template<br />\n<br />\n<strong>Templates with Floating Assets</strong><br />\nScreenshot: 03_Predix-Update-13.jpg<br />\n- This templates screen display Floating Assets on the bottom<br />\n- User need able to select some checkboxes and then drag to Contained Templates area (Screenshot: 03_Predix-Update-14.jpg, Screenshot: 03_Predix-Update-15.jpg)<br />\n- Match styling for dragged button<br />\n- After dropped some options need take user back to Assets screens under Contained templates box (Screenshot: 03_Predix-Update-16.jpg)<br />\n<br />\n<strong>Properties Box</strong><br />\nScreenshot: 03_Predix-Update-17.jpg<br />\n- Expand the Properties box need display this table<br />\n- Match data like storyboard<br />\n- Need able to select rows by click the checkboxes<br />\n- Click Add tag selected need load the modal window (Screenshot: 03_Predix-Update-18.jpg)<br />\n- There are 3 columns for Tag Source modal window<br />\n- Add Tags need close the modal window<br />\n- Click Add Tags button need take user back to previous screen (Screenshot: 03_19_Predix-Update-19.jpg)<br />\n- Models Name placed on the left side<br />\n- Notice there are Hierarchy and Flow options<br />\n<br />\n<strong>Keyword Box</strong><br />\nScreenshot: 03_Predix-Update-19.jpg<br />\n- This is content when expand the Keyword<br />\n- Add New Keyword can be dead links<br />\n- Lock icons placed on the right side<br />\n<br />\n<strong>Geolocation Box</strong><br />\nScreenshot: 03_Predix-Update-21.jpg<br />\n- Display geolocation fields like storyboard look<br />\n- Click View Map need display the Google map on Modal Windows<br />\n- Also, on the left side. There&rsquo;s a floating filter<br />\n- Match fields like storyboard look<br />\n<br />\n<strong>Client Priorities (The items that are considered highest demo priorities)</strong><br />\n- Creating quality and efficient Predix UI demo that works in all the requested browsers.<br />\n- Matching the storyboards (as close as possible) across the required browsers.<br />\n- Best Practice Predix UI web application<br />\n- Documentation to set up your submission<br />\n<br />\n<strong>CODE REQUIREMENTS:<br />\nHTML/HTML5</strong><br />\n- Provide comments on the page elements to give clear explanation of the code usage. The goal is to help future developers understand the code.<br />\n- Please use clean INDENTATION for all HTML code so future developers can follow the code.<br />\n- All HTML code naming should not have any conflicts or errors.<br />\nElement and Attribute names should be in lowercase and use a &quot;-&quot; or camel naming to separate multiple word classes (i.e.. &quot;main-content&quot;, or &quot;mainContent)<br />\n- Use semantically correct tags- use H tags for headers, etc. Use strong and em tags instead of bold and italic tags.<br />\n- No inline CSS styles- all styles must be placed in an external stylesheet.<br />\n- Validate your code- reviewers may accept minor validation errors, but please comment your reason for any validation errors. Use the validators listed in the scorecard.<br />\n<br />\n<strong>CSS/SCSS</strong><br />\n- Provide comments on the CSS code. We need CSS comments to give a clear explanation of the code usage. The goal is to help future developers understand the code.<br />\n- Please use clean INDENTATION for all CSS so developers can follow the code.<br />\n- All CSS naming should not have any conflicts.<br />\n- As possible use CSS3 style when creating all styling.<br />\n- Use CSS to space out objects, not clear/transparent images (GIFs or PNGs) and use proper structural CSS to lay out your page. Only use table tags for tables of data/information and not for page layout.<br />\n<br />\n<strong>Javascript</strong><br />\n- Basic Javascript should <span style=\"background-color:rgba(243, 168, 163, 0.941176)\">be provided by the&nbsp;</span>Predix UI components<br />\n- All JavaScript must not have a copyright by a third party.<br />\n- It is fine to use GPL/MIT/Open Source code.<br />\n- You are encouraged to use your own scripts&nbsp;or scripts that are free, publicly available and do not have copyright statements or author recognition requirements anywhere in the code.<br />\n<br />\n<strong>SVG</strong><br />\n- Use SVG for icons that not exists on Predix UI Iconography<br />\n<br />\n<strong>Browsers Requirements</strong><br />\n- IE11<br />\n- Safari Latest Browser<br />\n- Chrome Latest Browser",
    "screeningScorecardId": "30000591",
    "reviewScorecardId": "30001450",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-12-14T04:56:00.000-05:00",
    "registrationEndDate": "2016-12-19T04:57:00.000-05:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-12-30T09:01:00.000-05:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34354",
    "appealsEndDate": "2017-01-02T20:55:00.000-05:00",
    "finalFixEndDate": "2017-01-09T05:06:00.000-05:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "reliabilityBonus": 400,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055555",
    "technology": [
        "CSS",
        "HTML5",
        "JavaScript",
        "Predix"
    ],
    "prize": [
        2000,
        1000
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "HTML"
    ],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 119,
        "currentTime": 1588211034934
    },
    "requesterInformation": {
        "id": "21c316d66ea2af03f92bf9bdd17eebb1b0800cec-wvVOlnwV9QJa7WpE",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055555",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Web Design",
    "challengeName": "Drone Series - Consumer and Provider Marketplace Website Design Challenge",
    "challengeId": 30055556,
    "projectId": 11059,
    "forumId": "607649",
    "introduction": "Welcome to the Drone Series - Consumer and Provider Marketplace Website Design Challenge. The Drone Market will be a web platform where customers can request a drone to provide a service. Examples of the services would be drone delivery, mapping, monitoring and many other tasks. We want you to focus on the workflow and bringing simple (creative) solutions to how these services will be surfaced to the consumers.<br />\n<br />\n<img alt=\"\" src=\"https://scontent.ford1-1.fna.fbcdn.net/v/t1.0-9/14717161_10154488333556101_5487997839680388224_n.png?oh=fd410a07763a52f126ae17433dc85340&amp;oe=58A1F9EB\" style=\"height:378px; width:800px\" /><br />\n<br />\nAt the end of this challenge, we are looking for the Topcoder Design Community to help us plan and design the user experience of our new application",
    "round1Introduction": "Submit your initial designs for Checkpoint Feedback<br />\n<span style=\"color:#0000FF\">01 Homepage<br />\n02 Drone Provider List<br />\n03 Drone Provider Details<br />\n04 Request a Service<br />\n05 Track Requests<br />\n05.1 Results View<br />\n07 My Requests<br />\n07.1 Assign a Drone&nbsp;</span><br />\n<br />\n<span style=\"color:rgb(255, 0, 0)\">You must upload your submission to InvisionApp so we can provide direct feedback on your designs.</span><br />\n<span style=\"color:rgb(255, 0, 0)\">- Please request an InvisionApp link from the Copilot through the challenge forum.</span><br />\n<br />\nFeel free to add any other additional screens which are necessary to explain your concept.<br />\nNotes.jpg: Please note any comments about your design for the Client<br />\nMake sure all pages have correct flow! Use correct file numbering. (00, 01, 02, 03)",
    "round2Introduction": "Your Final designs for all the required designs with all Checkpoint Feedback implemented.<br />\n<span style=\"color:#0000FF\">01 Homepage<br />\n02 Drone Provider List<br />\n03 Drone Provider Details<br />\n04 Request a Service<br />\n05 Track Requests<br />\n05.1 Results View<br />\n06 Dashboard<br />\n07 My Requests<br />\n07.1 Assign a Drone&nbsp;<br />\n08 Request Details<br />\n08.1 Edit Telemetry Data<br />\n09 My Drones<br />\n09.1 Drone Details<br />\n10 Services</span><br />\n<br />\n<span style=\"color:rgb(255, 0, 0)\">You must upload your submission to InvisionApp, for the final submission - you can reuse the prototype that you shared for checkpoint</span><br />\n<span style=\"color:rgb(255, 0, 0)\">- Please request an InvisionApp link from the Copilot through the challenge forum.</span><br />\n<br />\nFeel free to add any other additional screens which are necessary to explain your concept.<br />\nNotes.jpg: Please note any comments about your design for the Client<br />\nMake sure all pages have correct flow! Use correct file numbering. (00, 01, 02, 03)",
    "detailedRequirements": "You are provided with wireframes from the challenge that we just ran, please make sure you don&#39;t just color the wireframes as we are looking your help in designing the user expereince of this new application. Please view/research other marketplaces like dronebase.com or taskrabbit.com for ideas but&nbsp;please do not copy them, if you do all submissions will look the same!<br />\n<br />\n<span style=\"color:#FF0000\"><strong>User Stories:</strong></span><br />\n<strong>Consumer:</strong><br />\n- As a consumer, I will be able to view providers based on geographical location (browser should detect my location or enter a zip code)<br />\n- View providers by category of service, photography, delivery, construction, etc&hellip;<br />\n- One I have selected my provider, I will see detailed list of services, take for an instance drone delivery, I will have 3 options<br />\n- - - Simple Delivery<br />\n- - - Delivery with photo of delivery<br />\n- - - Authenticated delivery via bluetooth<br />\n- Once I have select my service package, I will be able to request my service by choosing a location (entering address or selecting it on map), enter delivery time, my contact information and additional notes field.<br />\n- I drop the package to be delievered at the drone parcel service (Note: this package will be placed in the drone by a drone employee and sends it off to the delivery location).<br />\n- After the delivery, I can view flight telemetry data including, start and end time of the trip, any photos taken of the trip, average altitude, speed of the drone, etc<br />\n- After delivery I can rate the provider based on a star rating and provide some comments.<br />\n<br />\n<strong>Provider:</strong><br />\n- As a provider, I will be able to view requests for my services and the status of each request.<br />\n- - I can click on a request and see all of the request details and&nbsp;be able to accept or reject the request. &nbsp;<br />\n- From an accepted request, I will be able to click a button to deploy the mission parameters to my drone.<br />\n- -&nbsp;- I will need to be able to select the drone to deploy the work to.<br />\n- I will be able to view the status of my drones<br />\n- -&nbsp;- I can see by drone when they are scheduled and what requests are assigned to them.<br />\n- Upload mission results<br />\n- -&nbsp;- As a provider I can preview flight telemetry and photos from a mission and hit a button to publish results back to the platform.<br />\n<br />\n<span style=\"color:#FF0000\"><strong>Design Guidelines:</strong></span><br />\n- Create your designs of size 1280px width and height as required<br />\n<span style=\"color:#008000\"><strong>- UPDATE: Please use the attached color palette in your designs</strong></span>, looking for your help to coming with the initial design direction.<br />\n- Your designs need to be responsive.<br />\n- Make sure all UI elements are scalable vectors, so it helps us resize it as required!<br />\n- Please make sure the design you upload to invision fits properly and doesn&#39;t look too big.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Required Screens:</strong></span><br />\n<span style=\"color:#000000\">We need below screens to be designed..</span><br />\n<br />\n<strong>01 Homepage:</strong><br />\n<span style=\"color:rgb(0, 0, 255)\"><em>Reference:&nbsp;homepage__before_log_in_.html</em></span><br />\n- This page will be common to both consumers and providers, so please think on how best to design this page<br />\n- User visits website, grab user&rsquo;s location either using geo-location or get their zip code.<br />\n- Once the location of the user is captured, we show the list of drone providers.<br />\n- Homepage also need to show some promotional elements that captures the attention of both consumers (people looking for drone services) and providers (people offering drone services)<br />\n- We would like to have a &quot;How it works&quot; section<br />\n- Good to show some &quot;Feedbacks/ratings&quot; of featured drone providers.<br />\n- Show some of the featured services or frequent services that are being bought by consumers.<br />\n<br />\n<strong><span style=\"color:#B22222\">A. Consumer:</span></strong><br />\n<span style=\"color:rgb(178, 34, 34)\">Please find the reference submissions in &quot;Wireframe winners &gt; Consumer Wireframes&quot; Folder<br />\n<em>- Most of the references mentioned below are from the 1st place unless otherwise specified</em></span>\n<div>&nbsp;</div>\n<strong>02 Drone Provider List:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference: drone_provider_list.html</em></span><br />\n- This page shows the list of drone providers based on the user location or zip code<br />\n- Make sure to include a filter, think on how to design them!<br />\n- We like the idea of showing maps and list, think on how to present these in the page, make sure it is not crowded!<br />\n- Like the idea of showing categories in the sidebar but feel free to move it anywhere else you think would help get more space for the maps, etc.<br />\n<br />\n<strong>03 Drone Provider Details:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;drone_provider_detail.html</em></span><br />\n- This page shows the drone provider details, ratings / feedbacks that were received from consumers and also the services (catalogs) done by the drone provider!<br />\n- User will choose the Catalog, assume three types of catalogs in your design &quot;Simple Delivery, Delievery with photo of delivery, Authenticated Delivery via bluetooth&quot;<br />\n- Once they choose the catalog, we show three types of package with appropriate pricing under it...they will be &quot;Gold, Silver and Bronze&quot; package (please see 2nd place submission &quot;drone_provider_details.html&quot; for reference, click on a service &quot;delivery &gt; loged in &gt; you can see sample image and below that available packages (assume the names of the package as gold, silver, bronze)&quot;)<br />\n- Looking forward to your design thoughts on how the catalog and the packages under it can be shown.<br />\n- Once a package is chosen, they move to &quot;Request a Service&quot; page<br />\n- Before a user can request a service they should be logged into the website, wireframe flow doesn&#39;t show that - so please show a modal or prompt that allows them to login (think on how it needs to be shown?)<br />\n- Please provide option for the consumer to Rate/provide feedback to the provider, please see this page&nbsp;providerdetails-rate.html from 3rd place!<br />\n<br />\n<strong>04 Request a Service:</strong><br />\n<em><span style=\"color:#0000FF\">Reference:&nbsp;request_a_service.html</span></em><br />\n- This page allows the user to enter details of the request.<br />\n- User will need to enter all details as shown in the wireframe, think on how to better arrange them.<br />\n- For &quot;Item Dimensions&quot;, we would like you to indicate / provide help information on how it need to be entered (For ex: you can show placeholder text within the textbox as &quot;Length X Width X height&quot;, etc)<br />\n- User will be able to choose the delivery location from the map<br />\n- How will the error page look like if all details entered were not correct?<br />\n- When a request is sent, we would like you to show success screen - something similar to&nbsp;<span style=\"color:#0000FF\">request_sent.html</span>&nbsp;but we would like to improve this page, looking forward to your design thoughts!<br />\n<br />\n<strong>05 Track Requests:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;request_status.html</em></span><br />\n- This page shows the list of requests that were sent to the provider<br />\n- Each of the request need to include their current status (please see if you can work out the color coding for status as shown in 07 My Requests page - please see below).<br />\n- User will select a request and views more details about it<br />\n- If the status of the request is completed, then they will be able to view the results (please see below)<br />\n<br />\n<strong>05.1 Results View:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;requestdetails-completed-publishresults.html from 3rd place submission</em></span><br />\n- We like the results view (requestdetails-completed-publishresults.html)&nbsp;from 3rd place submission.<br />\n- Please include the view from 3rd place and look to arrange / improve it.<br />\n- From the results page, user should be able initiate provide rating/feedback for the drone provider.<br />\n<br />\n<span style=\"color:#B22222\"><strong>B. Provider:</strong><br />\nPlease find the reference submissions in &quot;Wireframe winners &gt; Provider Wireframes&quot; Folder<br />\n<em>- Most of the references mentioned below are from the 1st place unless otherwise specified</em></span><br />\n<br />\n<strong>06 Dashboard:&nbsp;</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;dashboard.html</em></span><br />\n- Dashboard for a provider needs to capture important activities going on with their drones or notifications about the new requests that were received.<br />\n- This page need to show some statistics / charts about the requests that were received (New / Scheduled / In-Progress / Completed)<br />\n- Notifications as mentioned above need to be shown in page, it will have similar information as shown in the pop-up &quot;Alerts&quot; in the header. (even 3rd place has shown this well in&nbsp;<br />\n- How can the alerts pop-up shown at the top / header can be designed?&nbsp;looking for your design thoughts on this<br />\n- What else need to be in the page, looking forward to your design thoughts.<br />\n<br />\n<strong>07 My Requests:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;requests_-_new_pending.html</em></span><br />\n- This page shows the list of requests that were received, think on how we can show the requests based on the status (New / Scheduled / In-Progress / Completed).<br />\n- We like the idea of color coding the staus of the requests as shown in 3rd place submission, please try to incorporate them in your designs (feel free to expand on that idea).<br />\n- Note: Each of status will have different action items..For ex: Pending Requests (requests_-_new_pending.html) will have &quot; Details, Assign Drone and Cancel Job&quot; .<br />\n- - - Clicking on &quot;Details&quot; as a quick view as shown in &quot;New / Pending requests&quot; (in the wireframe clicking on &quot;Details&quot; will push the page down to show the details of the request along with a map), think on how to show this in design.<br />\n- - -&nbsp;Clicking on &quot;Assign drone&quot; shows acceptance of work modal with action buttons as &quot;Cancel and Assign a Drone&quot; (please see below for assign a drone functionality)<br />\n<br />\n<strong>07.1 Assign a Drone:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;assign_drone.html</em></span><br />\n- This page will allow users to assign a drone from the list of available drones.<br />\n- User will be able to view list of drones along with their details, show us how we need to display these drones and allow user to select one?<br />\n- They will select required drone and click on &quot;Set Configuration&quot;, please include this view as well.<br />\n<br />\n<strong>08 Request Details:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;in_progress_job_details.html</em></span><br />\n- This page shows the request details, think on how the information shown in wireframe can be best presented.<br />\n- Please create two request details page, both are almost same just the status is different.<br />\n- Show us how the In-Progress request details page will looks like, clicking on &quot;Mark as Complete&quot; should show a screen that allows them to mark the request as complete..please look to capture this in your designs.<br />\n- We like the idea of creating an estimation as shown in create_estimation-3.html from&nbsp;2nd place, please include the &quot;Estimation&quot; section to the winning submission!<br />\n<br />\n<strong>08.1 Edit Telemetry Data:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;edit_telemetry_data.html</em></span><br />\n- Show us how the Completed request details page will looks like, clicking on &quot;Edit Telemetry Data&quot; will allow users to edit telemetry data as well as remove photos that were&nbsp;<br />\n<br />\n<strong>09 My Drones:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;drones.html</em></span><br />\n- This page shows the list of drones owned by the user, clicking on details will reveal more details about the drone<br />\n- Drones can be categorized as those that are available and those which are in-progress missions.<br />\n- We like the idea from 3rd place to show where their existing drones are in real-time, please see&nbsp;my_drones.html (at the bottom with a map) in 3rd place and look to include them in this view.<br />\n- Clicking on a drone will show details of that drone (please see below)<br />\n<br />\n<strong>09.1 Drone Details:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference: drone_details.html,&nbsp;edit_drone.html</em></span><br />\n- Drone details includes all the technical details about the drone.<br />\n- This page shows the on-going missions by the drone or past missions, show us how these can be shown.<br />\n- They should be able to view the &quot;Scheduled Missions&quot; as shown under tab &quot;Drone Schedule&quot;...like the calendar view in this page - please include them!<br />\n- User should have the ability to edit the drone (use the details from wireframe), please see&nbsp;<span style=\"color:#0000FF\">edit_drone.html</span><br />\n<br />\n<strong>10 Services:</strong><br />\n<span style=\"color:#0000FF\"><em>Reference:&nbsp;services.html,&nbsp;service_details.html</em></span><br />\n- This page shows the list of services they have currently added to their profile.<br />\n- Provider will have the ability to add / edit or delete a service.<br />\n- Users should be able to choose a catalog/service and under each catalog (simple delivery, delivery with photo of delievery, autheticated delivery via bluetooth, etc) they will be able to add packages (gold, silver, bronze), ability to alter the pricing or provide some discounts (this is not captured correctly in the wireframe, so please make sure to include this in your designs)<br />\n- They should also be able to remove any service from their profile.<br />\n<br />\n<span style=\"color:#FF0000\"><strong>Important:</strong></span><br />\n- Keep things consistent. This means all graphic styles should work together.<br />\n- All of the graphics should have a similar feel and general aesthetic appearance<br />\n- Focus on the user experience! Focus on the navigation experience. Keeping consistent visual elements.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Stock Artwork:</strong></span><br />\nWe are allowing stock photos and stock icons for this challenge<br />\n- Stock Artwork policies:&nbsp;<a href=\"https://help.topcoder.com/hc/en-us/articles/217481408-Policy-for-Stock-Artwork-in-Design-Submissions\">https://help.topcoder.com/hc/en-us/articles/217481408-Policy-for-Stock-Artwork-in-Design-Submissions</a>&nbsp; &nbsp;<br />\n- Latest Design Policies:&nbsp;<a href=\"http://help.topcoder.com/hc/en-us/categories/202610437-DESIGN\">http://help.topcoder.com/hc/en-us/categories/202610437-DESIGN</a>&nbsp;<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Target Audience:</strong></span><br />\n- Consumers looking to purchase drone services<br />\n-&nbsp;Providers looking to provide drone services<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Judging Criteria</strong></span><br />\nYour submission will be judged on the following criteria:<br />\n- Cleanliness of screen design and user flow<br />\n- Overall design and user experience<br />\n- Simplicity of design/strong, clear design concept<br />\n- How well your design align with the objectives of the challenge<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Submission &amp; Source Files</strong></span><br />\n<strong>Preview Image</strong><br />\nPlease create your preview image as one (1) 1024x1024px JPG or PNG file in RGB color mode at 72dpi and place a screenshot of your submission within it.<br />\n<br />\n<strong>Submission File</strong><br />\nSubmit JPG/PNG for your submission files.<br />\n<br />\n<strong>Source Files</strong><br />\nAll original source files of the submitted design. Files should be created in Adobe Photoshop and saved as layered PSD file, or Adobe Illustrator as a layered AI file.<br />\n<br />\n<strong>Final Fixes</strong><br />\nAs part of the final fixes phase, you may be asked to modify your graphics (sizes or colors) or modify overall colors. We may ask you to update your design or graphics based on checkpoint feedback.",
    "screeningScorecardId": "30001363",
    "reviewScorecardId": "30001031",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 5,
    "topCheckPointPrize": 100,
    "postingDate": "2016-10-23T09:21:00.000-04:00",
    "registrationEndDate": "2016-11-02T03:59:00.000-04:00",
    "checkpointSubmissionEndDate": "2016-10-27T05:01:00.000-04:00",
    "submissionEndDate": "2016-11-10T07:00:00.000-05:00",
    "submissionsViewable": "false",
    "reviewType": "INTERNAL",
    "type": "design",
    "allowStockArt": "true",
    "filetypes": [
        "Layered PSD files created in Adobe Photoshop or similar",
        "AI files created in Adobe Illustrator or similar",
        "Sketch"
    ],
    "forumLink": "http://apps.topcoder.com/forums/?module=ThreadList&forumID=607649",
    "appealsEndDate": "2016-11-11T01:55:00.000-05:00",
    "submissionLimit": "5",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "design",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055556",
    "prize": [
        2000,
        750,
        300
    ],
    "winners": [],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 147,
        "currentTime": 1588211035794
    },
    "requesterInformation": {
        "id": "d6f684b6b69c3585590f521a17a8f829af7afdcb-ZYqJDD7hA4l1CAKk",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055556",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Living Progress - Build - WWF - Web Services and Web App Setup, Login, Facebook Login, Registration, User Profile Implementation",
    "challengeId": 30055557,
    "projectId": 9610,
    "forumId": "34074",
    "detailedRequirements": "<h2><strong>Project Overview</strong></h2>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">WWF is a web application that allows comparison of reported trade data to identify discrepancies in reports of imports and exports between countries.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">This challenge is part of the </span><a href=\"http://blitz.topcoder.com/hpe-lpc_build/\" style=\"text-decoration:none;\"><u>Living Progress Build Challenge Blitz</u></a><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\"> program.</span></p>\n\n<h2><strong>Competition Task Overview</strong></h2>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">For this challenge, you&#39;ll need to code the back-end services to connect them to the front-end pages. &nbsp;The front-end pages have been coded in AngularJS but there will be some modifications required to implement them completely. &nbsp;More specifically the tasks include the following:</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1. Build backend web services using ASP.NET MVC Web API, the services must be REST and will need to cover the following:</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1.1. Login (including Social Login)</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1.2. Registration</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1.3. User Profile Management (including upload of avatar)</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1.4. Forgot Password (</span><span style=\"font-family:arial; font-size:13.3333px\">Let user enter their email and a password reset link is sent to their email so they can reset their password, the link should auto expire if not visited for a configurable period of time)</span></p>\n&nbsp;\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2. Implement the frontend pages from the provided prototype and wire them with the backend services. The frontend has been built with Angular.js and should cover the following pages:</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.1. Landing Page</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.2. Login Page - You do not need to implement the &quot;Remember Me&quot; feature. &nbsp;Please remove that checkbox.&nbsp;</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.3. Register Page</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.4. Profile Page</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.5. Forgot Password (we don&rsquo;t have a page for this in the prototype, but it&rsquo;s a simple page that will let you to enter your email and submit, then the password reset page will just have two password fields for you to enter new passwords and submit, you can copy styles from other pages). &nbsp;&nbsp;Perhaps we can use the &ldquo;Share Data&rdquo; dialog shown below as a design/prototype model for this type of functionality. &nbsp;That will be consistent with the rest of the site.</span></p>\n&nbsp;\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\"><img src=\"https://lh4.googleusercontent.com/9yuJUZa0fsNtEbx2BMHHf0LxCwEKKNcwP4hEzRgRDgRM0VYteykt53YLGW9-5gCLcRHpLBJSoquZMFYEkQhlUlCE_0IPGwH0PezICeUnttHA7Q0-TZln7cLh5C1Ll5RZLseOu_fV\" style=\"-webkit-transform:rotate(0.00rad); border:none; height:363px; transform:rotate(0.00rad); width:624px\" /></span></p>\n&nbsp;\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3. For registration and profile pages, we only need the following fields:</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.1. Username</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.2. Password</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.3. Confirm Password</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.4. First Name</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.5. Last Name</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.6. Title</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.7. Organization</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.8. Country</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.9. Phone</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.10. Email</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3.11. Twitter</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">On the profile page, we also need to have a checkbox next to each of these fields except for passwords, when user checks such a checkbox, it means that fields will be shown in their public profile that other users can view. </span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">4. This challenge should set up a working web app, which will be used as base for upcoming challenges. Essentially there will be two separate projects that will be deployed independently from each other. The C# based backend project should be developed using Visual Studio, the Angular.js based frontend project can be developed using any text editor since it&rsquo;s basically just CSS, Javascript and HTML.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">5. For the backend services, you must provide unit tests and postman file to test the REST services.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">6. For the frontend, make sure service root endpoint is configurable.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">7. &nbsp;We&#39;ve asked our front-end developers to create some basic unit tests for their AngularJS code. &nbsp;Please make sure that you update the front-end unit tests to ensure they are still functional. &nbsp;Any additional unit tests that you think would be helpful for future developers to understand your updates would be appreciated.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">8. &nbsp;All code must be well documented.</span></p>\n\n<p><strong>Technology Overview</strong></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">C# / .NET 4.5+</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Visual Studio 2015</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">ASP.NET MVC Web API</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">SQL Server Express 2016</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">REST</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Angular.js</span></p>\n<span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">CSS</span>",
    "finalSubmissionGuidelines": "<h2><strong>Submission Deliverables</strong></h2>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1. Complete projects that cover all the mentioned requirements</span><br />\n<span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2. For the backend, we need a word based deployment guide with details on how to configure and deploy the services to IIS, and details on how to test / verify the REST services.</span><br />\n<span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3. For the frontend, please provide a README in markdown format with details on how to deploy and test the pages.</span><br />\n<span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">4. Please keep your frontend and backend code in separate and independent folders, because they will need to be merged into different repos.</span></p>\n\n<h2><strong>Submission Guidelines</strong></h2>\n\n<p>- Please <strong>fork</strong> the following repository:&nbsp;<a href=\"https://github.com/topcoderinc/HP-LP-WWF-Detect-IT\" target=\"_blank\">https://github.com/topcoderinc/HP-LP-WWF-Detect-IT</a>. We are working from the angular-dev branch (which is the default). &nbsp;This contains the existing front-end website code.<br />\n- You will need to request access to the repository by providing your GitHub ID in the GitHub Access thread in the forum.<br />\n- The winner will be asked to provide a pull request to the repository with his or her updates.<br />\n- You will still need to submit a submission.zip with your source code, build scripts, and configuration files via the challenge detail page on&nbsp;<a href=\"http://www.topcoder.com/\">topcoder.com</a>.<br />\n- Check README file to deploy this Angularjs app</p>\n",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-11-01T12:39:00.000-04:00",
    "registrationEndDate": "2016-11-09T11:37:00.000-05:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-11-09T11:37:00.000-05:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34074",
    "appealsEndDate": "2016-11-12T18:45:00.000-05:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055557",
    "technology": [
        ".NET",
        "ASP.NET",
        "Angular.js (1.0)",
        "C#",
        "CSS",
        "HTML5",
        "REST",
        "SQL Server"
    ],
    "prize": [
        1600,
        750
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "Microsoft Azure"
    ],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 117,
        "currentTime": 1588211036612
    },
    "requesterInformation": {
        "id": "3f0bdd1e19f921f410a822acdd5b9b29b30426aa-V427sxHNGaKpXsIe",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055557",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Living Progress - Build - Mentor ME - Services Implementation 3",
    "challengeId": 30055558,
    "projectId": 9615,
    "forumId": "34363",
    "detailedRequirements": "<h2><span style=\"color:#FF0000\"><strong>Project Overview</strong></span></h2>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Mentor ME is a responsive mobile app with the objective at assisting underachieving high school students &ndash; particularly those at risk of becoming school dropouts. Mentor ME enables, empowers and inspires new talent by building networking relationships from a list of mentors that assist you sharing ideas, guidance, learning and connecting with other leaders.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">The propose of Mentor ME is be more effective, efficiency at mentorship programs and to increase the coverage of current programs where younger adults can have access to volunteer mentors to get guidance and motivation to graduate. The core of Mentor ME is the match between the Mentee interests and opportunities to Mentor Skill.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">The whole project consists of two parts:</span></p>\n\n<p>- The mentor and mentee Android application.</p>\n\n<p>- A set of REST-based services to support data access and updates for the mobile applications.</p>\n\n<ol>\n</ol>\n\n<p><span style=\"color:#FF0000\"><strong>Competition Task Overview</strong></span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">The purpose of this challenge is to follow the provided architecture and implement the 1st set of backend services, which should include MenteeMentor Programs, MenteeMentorGoals, MenteeMentorTasks, Role and Responsibilities, Documents.</span></p>\n\n<p><span style=\"color:#FF0000\"><strong>Detailed Requirements:</strong></span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1. Everything from &ldquo;Entities Class Diagram&ldquo; required to implement the services outlined below are in scope.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2. The following from the &ldquo;Services Class Diagram&rdquo; are in scope (both interfaces and implementations):</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.1. MenteeMentorProgramService</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.2. MenteeMentorGoalService</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.3. MenteeTaskService</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2.4. The corresponding specification classes</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3. The corresponding controllers for each service above from the &ldquo;REST API Class Diagram&rdquo; are in scope.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">4. &nbsp;Here is the list of endpoints corresponding to the Services defined above: &nbsp;</span><a href=\"https://docs.google.com/spreadsheets/d/15kThTkOwmXZn3uhmKM3Gb_uPi_KgQdUpXRoP-uEfzJI/edit?usp=sharing\" style=\"text-decoration:none;\"><u>https://docs.google.com/spreadsheets/d/15kThTkOwmXZn3uhmKM3Gb_uPi_KgQdUpXRoP-uEfzJI/edit?usp=sharing</u></a></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">5. &nbsp;There is one additional entity that we needs to include in the data model: a MenteeMentorResponsibility. &nbsp;The table should be called &ldquo;mentee_mentor_responsibility&rdquo; to be consistent with current naming convention in the data model. &nbsp;A collection of responsibilities are associated to each MenteeMentorProgram (just like MenteeMentorGoals and MenteeMentorTasks). &nbsp;We need to designate a &ldquo;description&rdquo; of the responsibility (VARCHAR(256) and whether the responsibility is assigned to the Mentor or Mentee (assignment - VARCHAR(10)).</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"color:#FF0000\"><strong>General Notes:</strong></span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1. Please follow the provided architecture to implement the services, make sure you go through all documents included in the architecture including the ERD and Application Design Specification.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2. Please properly document all code.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3. Please provide sql script to create database, create tables, drop tables, etc&hellip; In addition, you need to provide a separate sql script to populate test data into the database so we can test the api with meaningful data.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">4. Please provide ORM mapping file(s) (not needed if you are using annotations)</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">5. Please provide a new Swagger doc that covers the implemented API, you can use the existing swagger as reference. &nbsp;You&rsquo;ll need to provide greater detail in the Swagger doc (e.g. what search parameters are being supported).</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">6. &nbsp;Please provide Unit Tests for your code.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">7. &nbsp;You need to adhere to 12-Factor Principles (</span><a href=\"https://12factor.net/\" style=\"text-decoration:none;\"><u>https://12factor.net/</u></a><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">), specifically environment-specific information / configuration parameters should be provided to the application as system variables.</span></p>\n\n<p><span style=\"color:#FF0000\"><strong>Technology Overview</strong></span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Java 8</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Jetty (we&rsquo;re going to use an embedded server rather than an Application Container described in the architecture docs)</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">JPA</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">MySQL</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Spring Boot</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Swagger</span></p>\n<span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">REST</span>",
    "finalSubmissionGuidelines": "<h2><span style=\"color:#FF0000\"><strong>Submission Deliverables</strong></span></h2>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1. Code that covers all requirements listed above.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2. Detailed guide explaining how to configure, deploy and test the code. You must provide details on how to verify the REST API.</span></p>\n\n<p><span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">3. Other supporting files like sql script, swagger doc, etc.</span></p>\n\n<h2><span style=\"color:#FF0000\"><strong>Submission Guidelines</strong></span></h2>\n<span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">- For each member, the final submission should be uploaded via the challenge detail page on <a href=\"http://www.topcoder.com/\" style=\"font-size: 13px; text-decoration: none;\"><u>topcoder.com</u></a>.<br />\n-&nbsp;You should use the code in the following GitHub repository as a starting point for your submission: &nbsp;<a href=\"https://github.com/topcoderinc/HPE-LP-MentorMe-Services\" style=\"font-size: 12px; text-decoration: none;\"><u>https://github.com/topcoderinc/HPE-LP-MentorMe-Services</u></a>. &nbsp;&nbsp;You should fork this repository. &nbsp;Winning submissions will be asked to submit a pull request to the repository.<br />\n-&nbsp;Please use the existing build scripts to build and deploy your solutions. &nbsp;You, of course, may make modifications to them as required.</span>",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-11-01T13:51:00.000-04:00",
    "registrationEndDate": "2016-11-06T13:52:00.000-05:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-11-06T13:52:00.000-05:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34363",
    "appealsEndDate": "2016-11-09T20:30:00.000-05:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055558",
    "technology": [
        "JPA",
        "Java",
        "MySQL",
        "REST"
    ],
    "prize": [
        1200,
        600
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "Linux"
    ],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 97,
        "currentTime": 1588211037231
    },
    "requesterInformation": {
        "id": "56e62fd12a677592ff3a65f491cb8f994d1336ee-2PRYa8J5bthw1uex",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055558",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Living Progress - Build - Mentor ME - Remote Services Implementation",
    "challengeId": 30055559,
    "projectId": 9615,
    "forumId": "34364",
    "detailedRequirements": "<h2><span style=\"color:rgb(255, 0, 0)\"><strong>Project Overview</strong></span></h2>\n\n<p>Mentor ME is a responsive mobile app with the objective at assisting underachieving high school students &ndash; particularly those at risk of becoming school dropouts. Mentor ME enables, empowers and inspires new talent by building networking relationships from a list of mentors that assist you sharing ideas, guidance, learning and connecting with other leaders.<br />\n<br />\nThe propose of Mentor ME is be more effective, efficiency at mentorship programs and to increase the coverage of current programs where younger adults can have access to volunteer mentors to get guidance and motivation to graduate. The core of Mentor ME is the match between the Mentee interests and opportunities to Mentor Skill.<br />\n<br />\nThe whole project consists of three parts:<br />\n- The mentor and mentee Android application.<br />\n- A set of REST-based services to support data access and updates for the mobile applications.<br />\n- A batch Java application which will update the Haven OnDemand recommendation model with Professional and Personal Interest weightings and will use the Google Maps Geocoding API convert provided address info into Longitude and Latitude coordinates.</p>\n\n<p><span style=\"color:rgb(255, 0, 0)\"><strong>Competition Task Overview</strong></span></p>\n\n<p>In a previous <a href=\"http://www.topcoder.com/challenge-details/30055306/?type=develop&amp;noncache=true\"><u>service challenge</u></a>, we developed an internal ranking/recommendation algorithm to allow matching between Mentors and Mentees and vice versa based purely on professional and personal interests. &nbsp;&nbsp;In this challenge, we&rsquo;re hoping to enhance this functionality. &nbsp;Some Mentors and Mentee might only want to connect with their mentorship partners on a virtual basis which means that physical location won&rsquo;t be a factor. &nbsp;But for other physical proximity will be relevant.</p>\n\n<p>In this challenge we&rsquo;re also going to develop a service which provides an alternative matching mechanism using HPE&rsquo;s Haven OnDemand and a script which will update the prediction model on daily basis uses the services developed. &nbsp;The API&rsquo;s that we&rsquo;ll be using are the <a href=\"https://dev.havenondemand.com/apis/trainpredictor#overview\"><u>Train Prediction</u></a> API call and the <a href=\"https://dev.havenondemand.com/apis/predict#overview\"><u>Predict</u></a> API call.</p>\n\n<p>Each user of the Mentor Me application will designate a series of personal and professional interests using our mobile application. &nbsp;These are stored in the weighted_personal_interest and weighted_professional_interest tables of our data model. &nbsp;You can find the latest data model in the Github repository in the SQL folder. &nbsp;The initial list of personal and professional interests can be found here:</p>\n\n<p><a href=\"https://www.iab.com/guidelines/iab-quality-assurance-guidelines-qag-taxonomy/\"><u>https://www.iab.com/guidelines/iab-quality-assurance-guidelines-qag-taxonomy/</u></a></p>\n\n<div>SQL files have been provided to load this data - personal_interest.sql and professional_interest.sql in the sqls folder of the repository. &nbsp;The idea here is that common professional interest will be more important than personal interest. &nbsp;The interests are ranked into two levels. &nbsp;Specific interest matches should also be ranked more than highly than the general ones. &nbsp;(e.g. A match on the professional interest of Television should return a higher score than a match on the more general category of Arts and Entertainment.) &nbsp;Also the &ldquo;weighting&rdquo; of the personal and professional interests comes from the user rankings of each personal and professional interest that they select. &nbsp;Each user selects a 1 - 3 ranking of both personal and professional interest - 1 being the more important interest and 3 the least important. &nbsp;There is some simplified test data in the sqls/testdata.sql file which contain a script to load interest and users already.</div>\n\n<p>Each day, all the personal and professional interests and their weightings for all the users in the system will need to be uploaded to the Haven OnDemand training model using the Train Prediction API call.</p>\n\n<p>We&rsquo;re also going to implement some Geocoding functionality as part of our batch processes. &nbsp;We&rsquo;re going to collect address information from our users. &nbsp;You&rsquo;ll need to add the following fields to the User table:</p>\n\n<p>`is_virtual_user` TINYINT(1) NOT NULL,<br />\n`street_address` VARCHAR (512)<br />\n`city` VARCHAR(128)<br />\n`state_id` BIGINT (fk to state)<br />\n`country_id` BIGINT (fk to country)<br />\n`postal_code` VARCHAR(25)<br />\n`longitude` DECIMAL (16, 8)<br />\n`latitude` DECIMAL (16, 8)<br />\n`last_modified_on` DATETIME NOT NULL (this can be initialized with the created_on date to start)</p>\n\n<p>We need to modify our &ldquo;Auditable Interface&rdquo;. &nbsp;Currently we only have a created_on date in our Auditable interface. &nbsp;But I think we need to include a &ldquo;last_modified_on&rdquo; field as well for some of the logic for processing users. &nbsp;&nbsp;Specifically, we need to update the last_modified_on date if there have been changes to a user so the batch process can ensure that the users preference and location have been updated for matching purposes. &nbsp;A country.sql file and state.sql file have been provided in the sqls folder of the services repository.</p>\n\n<p><span style=\"color:#FF0000\"><strong>Java Batch Application Requirements:</strong></span><br />\n1. Create a java command line application that can be executed by shell script on a Linux machine on a nightly basis using cron.<br />\n2. The java application will extract user details and preferences for users that have been newly created or updated in the past 24 hours. &nbsp;Please update our User services/endpoints to include the new information required to extract the appropriate list of users and their info.<br />\n3. The application will use the <a href=\"https://developers.google.com/maps/documentation/geocoding/intro\"><u>Google Maps Geocoding API</u></a> to convert provided address info into Longitude &nbsp;and Latitude Coordinates.<br />\n4. We have a limited number of API calls per night. &nbsp;If we can batch a set of addresses and receive a batch of geocoded responses for the Longitude and Latitude updates this is ideal.<br />\n5. We should <a href=\"https://dev.havenondemand.com/apis/deletepredictionmodel#overview\"><u>delete</u></a> the currently trained model in the system.<br />\n6. Create and Train a model to predict matching mentors based on professional and personal interests using the Haven On Demand <a href=\"https://dev.havenondemand.com/apis/trainpredictor#overview\"><u>Train Prediction</u></a> API. It&rsquo;s going to require a little thought to handle the weightings properly. <a href=\"https://dev.havenondemand.com/docs/HowTo_Prediction.html\"><u>Here</u></a> is an article about how to set up the models. &nbsp;I think we&rsquo;re going to need to send both the parent categories (level 1) and the more specific (level 2) categories to make matching more likely since our list of lower level personal interest is 361 individual categories. &nbsp;If another API call is more likely to fulfill the matching requirements, alternative solutions can be discussed in the forums.<br />\n7. You should also load whether a User is a Mentor or Mentee to the model or perhaps we create two separate models for matching purposes.<br />\n8. When the application has trained the model it should execute asynchronous job status calls to validate that the model has been trained. &nbsp;It should output a success or failure message to a log file.<br />\n9. It would be helpful as well to execute a <a href=\"https://dev.havenondemand.com/apis/getpredictionmodeldetails#overview\"><u>Get Prediction Model Details</u></a> after training and logs results to provide some details about the training process.<br />\n10. The batch java command line application should be in a separate directory. &nbsp;We&rsquo;ll probably load this code to a separate repository.<br />\n11. Please use Maven to build a jar file for the application.<br />\n12. Environment specific variable like the IP addresses for the endpoints should be designated in system variables.</p>\n\n<p><span style=\"color:#FF0000\"><strong>Services Update Requirements</strong></span><br />\n1. Add the User field defined above to the User table and the User Service output.<br />\n2. Update the Auditable interface so that we can report on a Last Modified Timestamp as well as the Created Date Timestamp<br />\n3. Create a services endpoint on each of the Mentor and Mentee Services which executes a <a href=\"https://dev.havenondemand.com/apis/predict#overview\"><u>Predict</u></a> call to the model you&rsquo;ve trained with Haven OnDemand. &nbsp;This can be synchronous API call. &nbsp;The idea here is to retrieve a list of Mentors or Mentee with compatible interests.</p>\n\n<p><span style=\"color:rgb(255, 0, 0)\"><strong>Technology Overview</strong></span><br />\nJava 8<br />\nHaven OnDemand<br />\nREST<br />\nMySQL</p>\n",
    "finalSubmissionGuidelines": "<h2><span style=\"color:rgb(255, 0, 0)\"><strong>Submission Deliverables</strong></span></h2>\n\n<p>- For each member, the final submission should be uploaded via the challenge detail page on <a href=\"http://www.topcoder.com/\"><u>topcoder.com</u></a>.<br />\n- You should use the code in the following GitHub repository as a starting point for your submission: <a href=\"https://github.com/topcoderinc/HPE-LP-MentorMe-Services\"><u>https://github.com/topcoderinc/HPE-LP-MentorMe-Services</u></a>. You should fork this repository. &nbsp;Winning submissions will be asked to submit a pull request to the repository.<br />\n- Please use the existing build scripts to build and deploy your solutions. &nbsp;You, of course, may make modifications to them as required.</p>\n",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-11-06T23:00:00.000-05:00",
    "registrationEndDate": "2016-11-12T23:01:00.000-05:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-11-12T23:01:00.000-05:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34364",
    "appealsEndDate": "2016-11-16T10:39:00.000-05:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055559",
    "technology": [
        "Java",
        "MySQL",
        "REST"
    ],
    "prize": [
        1500,
        750
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "HPE Haven OnDemand"
    ],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 106,
        "currentTime": 1588211037819
    },
    "requesterInformation": {
        "id": "571069314a9a0957c8f03111d258eedc69d7b19f-Oa1dZHhm2bWAsFxC",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055559",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Hercules Fog Recorder - Build branch code for Yocto",
    "challengeId": 30055560,
    "projectId": 9391,
    "forumId": "34365",
    "detailedRequirements": "<p><strong>Describe what you want to accomplish.&nbsp;</strong><br />\n&nbsp;</p>\n\n<div>\n<p>The Fog recorder application is a C++ application that allows a user to schedule recordings for TV shows and record live TV. We use this project to test certain functionality of client applications, which are external to just the recorder.</p>\n\n<p>The recorder is a Mac application that can be opened and run in XCode, and it includes Makefiles that can be used on Linux, and there are also ways to build for Windows.<br />\n<br />\nThe Fog application exposes a set of REST API calls that can be found here:<br />\n<br />\n<a href=\"http://docs.fogrecorder.apiary.io/\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word; background: 0px 0px;\">http://docs.fogrecorder.apiary.io</a><br />\n<br />\nThe final code will be deployed into an embedded device running a Yocto base: &nbsp;https://www.yoctoproject.org/<br />\n<br />\nThis challenge will build out the necessary documentation and build instructions to build the Fog recorder version 2.0 (new_build) for Yocto.<br />\n<br />\n<strong>VERSION</strong><br />\n<br />\nThe code version we are going to use is *different* than what&#39;s in the master branch. &nbsp;In the &quot;new_build&quot; branch is a &quot;version 2.0&quot; of the app. &nbsp;This is the target for the Yocto build setup.</p>\n\n<h3><strong>CODE</strong></h3>\n\n<p>The existing code is here:</p>\n\n<p><a href=\"https://gitlab.com/hercules-fog/Fog-CLI\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word; background: 0px 0px;\">https://gitlab.com/hercules-fog/Fog-CLI/</a></p>\n\n<p>A link will be provided in the forum where you will be able to get access.<br />\n<br />\n<strong>Make sure to use the &quot;new_build&quot; branch, NOT the master branch!</strong></p>\n\n<h3>Submission</h3>\n\n<p>Your submission to OR should be a Git patch file that can be applied to see the fixes. Here is documentation on how to generate a Git patch file:</p>\n\n<p><a href=\"https://ariejan.net/2009/10/26/how-to-create-and-apply-a-patch-with-git/\" style=\"padding: 0px; margin: 0px; color: rgb(102, 102, 102); text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word; background: 0px 0px;\">https://ariejan.net/2009/10/26/how-to-create-and-apply-a-patch-with-git/<br />\n<br />\nYour patch file should include a document for Yocto building (in Markdown format), as well as a Makefile that we can use for the Yocto build environment.</a></p>\n\n<h3>Requirements</h3>\nYocto is the base we are targeting, specifically Yocto Daisy (version 1.6). &nbsp;This version is older, but that&#39;s what we currently run the existing 1.0 Fog on.<br />\n<br />\nYou can install meta-qt5 for QT compatibility (https://github.com/meta-qt5/meta-qt5/), and these repos can be used for the dependencies:<br />\n<br />\nURI: git://github.com/openembedded/oe-core.git<br />\nbranch: daisy<br />\nrevision: HEAD<br />\n<br />\nURI: git://github.com/openembedded/meta-oe.git<br />\nlayers: meta-ruby<br />\nbranch: daisy<br />\nrevision: HEAD<br />\n<br />\nHelpful links:<br />\n<br />\nhttps://www.yoctoproject.org/<br />\nhttps://blog.qt.io/blog/2016/07/01/aligning-with-the-yocto-project/<br />\nhttps://wiki.yoctoproject.org/wiki/Creating_a_recipe_for_a_Qt_application<br />\nhttp://wiki.hioproject.org/index.php?title=HIO_Wiki:Set_Up_Qt_Creator_for_Yocto_Device<br />\n<br />\n<strong>Bitbake</strong><br />\n<br />\nThe Fog build must be done using bitbake. &nbsp;This is the current way we build Fog on the customer&#39;s heavily modified Yocto setup:<br />\n<br />\nbitbake -c clean -f fog<br />\nbitbake -c compile -f fog&nbsp;<br />\n<br />\nThe current Makefile for version 1.0 will be provided in the forum for you to base your changes off of, but note that the new_build branch has more dependencies than the version 1.0, so it will likely need modifications\n<ul>\n</ul>\n<strong>Code</strong><br />\n<br />\nPlease keep code changes to a minimum - we&#39;re more focused on the build, so only change the code if you have to to support the Yocto build.\n<ul><br />\n\t&nbsp;\n</ul>\n<br />\n&nbsp;</div>\n\n<div>&nbsp;</div>\n",
    "finalSubmissionGuidelines": "Please see above.",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-21T19:15:00.000-04:00",
    "registrationEndDate": "2016-10-26T19:15:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-26T19:16:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34365",
    "appealsEndDate": "2016-11-01T16:28:00.000-04:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055560",
    "technology": [
        "C",
        "C++"
    ],
    "prize": [
        800,
        400
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "Other"
    ],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 116,
        "currentTime": 1588211038415
    },
    "requesterInformation": {
        "id": "5bd8301d485ee14174d533f0e8dc4829d83fd094-yvsPCzTbQyiOXHSy",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055560",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "test",
    "challengeId": 30055561,
    "projectId": 9462,
    "forumId": "34366",
    "detailedRequirements": "",
    "finalSubmissionGuidelines": "",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-22T09:00:00.000-04:00",
    "registrationEndDate": "2016-10-27T09:00:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-27T09:00:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34366",
    "appealsEndDate": "2016-10-30T21:00:00.000-04:00",
    "currentStatus": "Draft",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055561",
    "technology": [],
    "prize": [
        350,
        150
    ],
    "currentPhaseName": "",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 94,
        "currentTime": 1588211039004
    },
    "requesterInformation": {
        "id": "d544c24a261d824e4dd0591fd9e400b6883c9c89-5BuQIBEdpZtORYPa",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055561",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Drone Series - Maps React and  REST",
    "challengeId": 30055562,
    "projectId": 11059,
    "forumId": "34368",
    "detailedRequirements": "<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"><img alt=\"\" src=\"https://scontent.ford1-1.fna.fbcdn.net/v/t1.0-9/14717161_10154488333556101_5487997839680388224_n.png?oh=fd410a07763a52f126ae17433dc85340&amp;oe=58A1F9EB\" style=\"height:378px; width:800px\" /><br />\n<br />\nAll things in this world are better with Maps and this challenge is no exception. &nbsp;&nbsp;This is our 4th challenge in our Drone Series and we are going to jump right in the middle and do some fun stuff with Maps. We are leaving the requirements fairly open so we get a wide variety of solutions. &nbsp;&nbsp;The main goal of this challenge is to show drones and their present location on a google map. &nbsp;&nbsp;To keep things simple, all drones will have one of only three states: &nbsp;&nbsp;in-motions, idle-ready, or idle-busy but you are free to embellish this list all you want.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Your goal is to display up to 10,000 drone on the map and color code the markers based on the status. &nbsp;The Map should be in React and you are free to choose any library you want. Please explain your choice and let us know what libraries you eliminated, and why. &nbsp;&nbsp;A drone should be able to make a REST call (in the future a message protocol) &nbsp;and update or insert &nbsp;the drones: &nbsp;ID, make, Operator name, &nbsp;&nbsp;GPS position, Altitude, Velocity, Heading, (maybe some meta data). &nbsp;&nbsp;&nbsp;The idea would be that a drone sends its position and status every 30 minute when it is not moving every 30 seconds when it is moving. An ideal solution will also store previous positions but only one position should ever be active (current position) per drone. &nbsp;&nbsp;&nbsp;&nbsp;The data should be persisted; Postgres, Kafka, Cassandra, and Mongo are all good choices but you are totally open to select outside of this list just explain why. &nbsp;&nbsp;The goal of this challenge select the map technology and display a drone moving without refreshing the page. &nbsp;&nbsp;Although the backend is needed to achieve this challenge, it is not about the backend stack (that will come later). &nbsp;&nbsp;That being said we still want to hear your opinion on the back end from both a short term and long term perspective. &nbsp;For example saying something like &ldquo;... long term you should use Kafka and Cassandra and here is why &hellip; but I choose mongo because it was quicker&rdquo; is totally acceptable statement. &nbsp;&nbsp;We want to see some submissions quickly and we understand we might be make some sacrifices on the backend to do that.</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Thanks and good Luck</span></p>\n<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">kbowerma</span>",
    "finalSubmissionGuidelines": "1. &nbsp;All submissions should be in a single zip file. &nbsp;&nbsp;<br />\n2. &nbsp;Please include very detailed documentation which includes how to make the REST calls.<br />\n3. &nbsp;You documentation should also include a discussion on your choices.<br />\n4. &nbsp;Please include a video(s) of your solution in action. &nbsp; If you are not comfortable with spoke english you may annotate your video.<br />\n5. &nbsp;Since this is a compressed timeline you may substitute most of your documentation for video.<br />\n6. &nbsp;A prefered solution would be deployed to Heroku but this is optional.",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-22T11:22:00.000-04:00",
    "registrationEndDate": "2016-10-27T12:21:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-27T12:21:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34368",
    "appealsEndDate": "2016-10-31T08:28:00.000-04:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055562",
    "technology": [
        "Node.js",
        "ReactJS"
    ],
    "prize": [
        950,
        800,
        500
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "Heroku"
    ],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 101,
        "currentTime": 1588211039601
    },
    "requesterInformation": {
        "id": "b7978122b533a8c6fd0119bfef26bd23f7efda8b-BQFsg7UwWmV4O0lg",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055562",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Wireframes",
    "challengeName": "Drone Series - Admin Wireframe Challenge",
    "challengeId": 30055563,
    "projectId": 11059,
    "forumId": "607669",
    "introduction": "<p>Welcome to the Drone Series - Marketplace Admin Wireframe Challenge! In this challenge, we are looking for your concepts, ideas and wireframe solutions to help plan out our new marketplace for administering the drone platform for connecting consumers to drone providers to provide a variety of tasks.<br />\n<br />\nThe Drone Market will be a web platform where customers can request a drone to provide a service. &nbsp;Examples of the services would be drone delivery, mapping, monitoring and many other tasks. We want you to focus on the workflow and bringing simple (creative) solutions to how these a user may administer these services. &nbsp;At the end of this wireframe challenge, we are looking to have a solution that allows us to understand the administrator experience. &nbsp;This is a follow up of the other two wireframe challenges <a href=\"https://www.topcoder.com/challenge-details/30055472/?type=design\">Drone Consumer Wireframe</a> and <a href=\"https://www.topcoder.com/challenge-details/30055473/?type=design&amp;noncache=true\" target=\"_blank\">Drone Provider Wireframe</a>.</p>\n",
    "round1Introduction": "Submit your initial wireframe solution for checkpoint feedback<br />\n<br />\nNotes.jpg: Any comments about your design for the Client.",
    "round2Introduction": "Submit final wireframe solution plus checkpoint feedback.<br />\n<br />\nNotes.jpg: Any comments about your design for the Client.",
    "detailedRequirements": "<p>This is a wireframe challenge. We are looking for your wireframe concepts to help us plan the potential of this application and platform. Key things to think about are how admins can use the platform (access available services). &nbsp;What is the process? What is the user flow?<br />\n<br />\n<span style=\"color:#B22222\"><strong>User Stories</strong></span><br />\n<span style=\"color:#0000FF\"><strong>Administrator</strong></span><br />\n1. As an admin, I will be able to view providers based on geographical location (browser should detect my location or enter a zip code), category, drone type, drone accessories and by their status: approved, rejected, retired, applied<br />\n- As an admin, I will be able to see the detail of the provider. Depending on the state I can move the status of an provider<br />\n- - - Applied --&gt; Can go to Rejected or Approved<br />\n- - - Approved --&gt; Retired, Banned (The admin will also add a reason why)<br />\n- - - Rejected --&gt; Approved (The admin will also add a reason why)<br />\n- - - Retired --&gt; Approved, Banned (The admin will also add a reason why)</p>\n\n<p>2. As an admin, I can view the current state of the marketplace.<br />\n- View a map and see real time all of the drones in the air. &nbsp;<br />\n- Similar to google maps enter and address and see all the drones in the map.<br />\n<br />\n3. As an admin, I can add to the catalog (Delivery, photography, etc) and I can create packages under each catalog (silver, gold, bronze). &nbsp;Each catalog will have a photo, name and description. Each package will have name, long description, short description (140 characters), price and discount price.</p>\n\n<p>4. As an admin, I will view a dashboard of reporting. &nbsp;We will select a reporting package so this is just to show examples.<br />\nMarketplace health reports<br />\n- Market Liquidity: Number of Active Providers, Number of Active Consumers, Number of Providers with a completed or active service request, Number of consumers with an active or completed service request. These can be shown in a graph or also percentage of total number and active.<br />\n- % of searches leading to a click through of a profile<br />\n- % of click through rate of homepage listings<br />\n- Number of transactions, Average Price Per challenge and filter by category<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Wireframe Expectations:</strong></span><br />\n- You should create traditional wireframe call-outs and notes<br />\n- Provide us with your interaction and click-path thoughts and suggestions<br />\n- Produce HTML click-through wireframes that can be used to demonstrate all mentioned functionalities as required in each round.<br />\n- The application must be very easy to use and intuitive. Keep that in mind when create your solution for the layout and flow information.<br />\n- You MUST cover all requirements mentioned in challenge details.<br />\n- You are also allowed to submit as invisionapp for this wireframes<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Wireframe Guidelines:</strong></span><br />\n- Create your wireframe for responsive (desktop focus)<br />\n- Minimum width 1024px with height adjusting accordingly.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Suggested Pages:</strong></span><br />\nWe are looking for the following pages<br />\n- Feel free to adjust/modify based on your planning.<br />\n- You may reuse any pages from the provided winning wireframes as necessary!<br />\n<br />\n<strong>01 Manage Providers</strong><br />\n- User visits website, grab user&rsquo;s location either using geo-location or get their zip code.<br />\n- Once the location of the user is captured, we show the list of drone providers.<br />\n- We show the list of drone providers based in user&#39;s location and should be able to view them by category, drone type, drone accessories and by their status (approved, rejected, retired, applied).<br />\n- Do you think filters or search will be of help here, looking forward to your thoughts.<br />\n- What details about each of the drone providers need to be seen in this list &quot;categories, ratings, and the list of tasks&quot;.<br />\n<br />\n<strong>02 Drone Provider Details:</strong><br />\n- Once the user selects the drone provider from the list of providers, they should be able to view the details of the service (you can reuse the view from the attached consumer wireframes).<br />\n- Show the list of services offered, packages offered, pricing, etc...in this wireframe: assume three types of services being offered in the catalog namely &quot;Simple Delivery, Delivery with photo of delivery, Authenticated delivery via bluetooth&quot;<br />\n- Within each catalog, they should be seeing the package &ldquo;Gold, Silver, Bronze&rdquo;<br />\n- Maybe see sample results (data, images etc) for the each of the service type offered.<br />\n- Provide ability for the admins to edit a provider, they should be able to edit the provider status<br />\n- Depending on the state, user should be able to move the status of an provider<br />\n- - Applied --&gt; Can go to Rejected or Approved<br />\n- - Approved --&gt; Retired, Banned (The admin will also need to add a reason why)<br />\n- - Rejected --&gt; Approved (The admin will also need to add a reason why)<br />\n- - Retired --&gt; Approved, Banned (The admin will also need to add a reason why)<br />\n<br />\n<strong>03 Real Time View of Drones:</strong><br />\n- Admin should have the ability to view a map and see real time all the drones in the air<br />\n- Similar to google maps enter and address and see all the drones in the map<br />\n- Looking forward to your thoughts on how this can be shown.<br />\n<br />\n<strong>04 Reports (Dashboard):</strong><br />\n- It would good to show a dashboard of reporting, this can be shown as a landing page for admins!<br />\n- User will select the type of report they want to view. Few examples:<br />\n<br />\n<em>Marketplace health reports:</em><br />\n- Market Liquidity<br />\n- - - - Number of Active Providers, Number of Active Consumers, Number of Providers with a completed or active service request, Number of consumers with an active or completed service request. &nbsp;These can be shown in a graph or also percentage of total number and active.<br />\n- - - - % of searches leading to a click through of a profile<br />\n- - - - % of click through rate of homepage listings<br />\n- - - - Number of transactions, Average Price Per challenge and filter by category<br />\n<br />\n<strong>05 Edit Catalog and Packages:</strong><br />\n- Admin&rsquo;s should have the ability to add/remove catalog (Delivery, photography, etc)<br />\n- They should be able to create packages under each catalog (silver, gold, bronze). &nbsp;<br />\n- Each catalog will have a photo, name and description. &nbsp;<br />\n- Each package will have name, long description, short description (140 characters), price and discount price.<br />\n<br />\n<span style=\"color:#B22222\">NOTE: You are welcome to add additional screens or combine some of these screens if you feel it will improve the user experience. We are open to your creative ideas around how to plan this platform.</span><br />\n<br />\n<span style=\"color:#0000FF\"><strong>Target Audience</strong></span><br />\n- Administrators<br />\n<br />\n<span style=\"color:#FF0000\"><strong>Learn Axure</strong></span><br />\nNew to Axure? Here are some quick tutorials to help you get started.<br />\n<a href=\"http://www.axure.com/support\" target=\"_blank\">http://www.axure.com/support</a><br />\n<br />\n<span style=\"color:#0000FF\"><strong>Judging Criteria</strong></span><br />\n- User Experience of the application/portal<br />\n- Completeness and accuracy of your wireframes<br />\n- How well your wireframes provide a consistent user flow<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Submission &amp; Source Files</strong></span><br />\n<strong>Preview Image</strong><br />\nPlease create your preview image as one (1) 1024x1024px JPG or PNG file in RGB color mode at 72dpi and place a screenshot of your submission within it.<br />\n<br />\n<strong>Submission File</strong><br />\nWireframes should be built in HTML or Axure or InvisionApp Prototype. The resulting files are not critical in this Challenge. The most important point is that all the content is listed and the pages are linked together to show page flow. Keep your source files out from this submission folder.<br />\n<br />\n<strong>Source Files</strong><br />\nAll original source files of the submitted ideas. If you would like to submit notes please include notes.txt file.<br />\n<br />\n<strong>Final Fixes</strong><br />\nAs part of the final fixes phase you may be asked to modify content or user click paths.</p>\n",
    "screeningScorecardId": "30001363",
    "reviewScorecardId": "30001031",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 5,
    "topCheckPointPrize": 100,
    "postingDate": "2016-10-23T10:11:00.000-04:00",
    "registrationEndDate": "2016-11-01T03:59:00.000-04:00",
    "checkpointSubmissionEndDate": "2016-10-27T04:00:00.000-04:00",
    "submissionEndDate": "2016-11-07T09:00:00.000-05:00",
    "submissionsViewable": "false",
    "reviewType": "INTERNAL",
    "type": "design",
    "allowStockArt": "false",
    "filetypes": [
        "HTML",
        "RP file created with Axure",
        "Invisionapp Prototype"
    ],
    "forumLink": "http://apps.topcoder.com/forums/?module=ThreadList&forumID=607669",
    "appealsEndDate": "2016-11-12T01:23:00.000-05:00",
    "submissionLimit": "5",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "design",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055563",
    "prize": [
        1000,
        500,
        250
    ],
    "winners": [],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 97,
        "currentTime": 1588211040171
    },
    "requesterInformation": {
        "id": "2f5560fbf0ef457c129dc2c681b71953ae2ff5b3-7MvfMr9am08apqhc",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055563",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Hercules TV Web Apps - Swagger API updates",
    "challengeId": 30055564,
    "projectId": 9599,
    "forumId": "34369",
    "detailedRequirements": "<div>A previous challenge has implemented a set of REST APIs for handling video assets, including storing them and managing them (create, retrieve, update, delete). &nbsp;This challenge will implement new calls to manage data in the admin portion of the website, will update the Swagger file accordingly, and will add unit tests for the REST API.<br />\n<br />\n<strong>Existing API</strong><br />\n<br />\nThe existing Node application and deployment details are in Gitlab, and the URL to the repository can be found in the forum.<br />\n&nbsp;</div>\n\n<div>\n<div><strong>API updates</strong><br />\n<br />\nWe are going to add and document API for the following functionality. &nbsp;Note that all of these API callss will require user authentication, similar to what&#39;s already existing in the admin portion of the site. &nbsp;The functionality described below already exists, we just need to formalise it against the endpoints below and make sure that it&#39;s documented via Swagger and tested.<br />\n<br />\n<em>/scraper endpoint</em><br />\n<br />\n1. &nbsp;Adding a scraper (regular or live)<br />\n&nbsp; a. &nbsp;POST to /scraper<br />\n2. &nbsp;Disabling a scraper&nbsp;(regular or live)<br />\n&nbsp;&nbsp;b. &nbsp;POST to /scraper/{id}?disable=true/false<br />\n3. &nbsp;Updating a scraper&nbsp;(regular or live)<br />\n&nbsp;&nbsp;c. &nbsp;PUT to /scraper/{id}<br />\n4. &nbsp;Deleting a scraper&nbsp;(regular or live)<br />\n&nbsp;&nbsp;d. &nbsp;DELETE to /scraper/{id}<br />\n5. &nbsp;Getting all scrapers<br />\n&nbsp;&nbsp;e. &nbsp;GET to /scraper<br />\n6. &nbsp;Getting all scrapers by type (regular or live)<br />\n&nbsp;&nbsp;f. &nbsp;GET to /scraper/?type=regular/live<br />\n7. &nbsp;Get&nbsp;an individual scraper by its ID&nbsp;(regular or live)<br />\n&nbsp;&nbsp;g. &nbsp;GET to /scraper/{id}<br />\n&nbsp;&nbsp;<br />\n<em>/user endpoint</em><br />\n<br />\n1. &nbsp;Adding a user&nbsp;<br />\n&nbsp; a. &nbsp;POST to /user<br />\n2. &nbsp;Change a user&#39;s password<br />\n&nbsp;&nbsp;b. &nbsp;PUT to /user<br />\n4. &nbsp;Deleting a user<br />\n&nbsp;&nbsp;d. &nbsp;DELETE to /user/{id}<br />\n5. &nbsp;Getting all users<br />\n&nbsp;&nbsp;e. &nbsp;GET to /user&nbsp;<br />\n6. &nbsp;Get&nbsp;an individual user by the ID&nbsp;<br />\n&nbsp;&nbsp;g. &nbsp;GET to /user/{id}<br />\n<br />\n<strong>Export and import</strong></div>\n\n<div><br />\nWhen setting up a new server, it takes time to set up all the individual scrapers. &nbsp;This challenge will make that easier by adding a new &quot;Import / Export&quot; section to the admin panel. &nbsp;The &quot;Export&quot; will generate a JSON file that comprises all the information about the scrapers, both live and regular. &nbsp;The &quot;Import&quot; function will accept a file upload of an exported JSON file that will then be parsed and the scrapers will be created based on the import. &nbsp;Any duplicates will just be silently ignored.<br />\n&nbsp;</div>\n<strong>README</strong></div>\n\n<div><br />\nMake sure the README is updated with verification information about the new features and configuration information so they can be easily added.<br />\n<br />\n<strong>Unit tests</strong><br />\n<br />\nUnit tests are&nbsp;<strong>required</strong>&nbsp;for these new changes, <strong>and</strong>&nbsp;to cover the existing API. &nbsp;Your tests&nbsp;<strong>must</strong>&nbsp;cover positive and negative cases and should be reasonably good at covering edge cases and error cases. &nbsp;<br />\n<br />\n<strong>Heroku deploy</strong><br />\n<br />\nMake sure the Heroku deployment information is up-to-date and that you keep the package.json up to date as well. &nbsp;Don&#39;t expect the deployment to be anything other than &quot;npm install&quot; / &quot;npm start&quot; locally and &quot;git push heroku master&quot; for Heroku deployment.</div>\n\n<div><br />\n<strong>Submission format</strong><br />\n<br />\nYour submission should be provided as a Git patch file against the commit hash mentioned in the forum. &nbsp;<strong>MAKE SURE TO TEST YOUR PATCH FILE!</strong></div>\n\n<div>&nbsp;</div>\n",
    "finalSubmissionGuidelines": "Please see above",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-24T09:01:00.000-04:00",
    "registrationEndDate": "2016-10-28T09:01:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-28T09:01:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34369",
    "appealsEndDate": "2016-11-01T22:57:00.000-04:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055564",
    "technology": [
        "Node.js"
    ],
    "prize": [
        400,
        200
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "Heroku"
    ],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 106,
        "currentTime": 1588211040748
    },
    "requesterInformation": {
        "id": "e90364eaa3214dc082ce63c09e1c24bccf53c637-sWONjSiaqeDR9BD6",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055564",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Engage Together (R) - Salesforce Architecture Challenge",
    "challengeId": 30055565,
    "projectId": 10618,
    "forumId": "34370",
    "detailedRequirements": "<p><em>Please note that although this is an Architecture challenge, it is being launched as a Code track challenge for a couple of reasons A) The end deliverables are different than a standard architecture challenge B) To encourage participation among Salesforce developers &amp; architects within the community.</em></p>\n\n<h2><strong>Overview:</strong></h2>\n\n<p><br />\nWelcome to the <strong>Engage Together&reg; - Architecture challenge</strong>, brought to you by Deloitte Pixel&trade;! The objective of this challenge is to propose the underlying architecture for a survey tool based on provided test data and given considerations:<br />\n<br />\n- The client is a non-profit organization helping to fight human trafficking</p>\n\n<p>- During meetings around the country the non-profit team is capturing how different organizations around the region are helping to fight human trafficking. This is currently done in a manual fashion, and later entered into Salesforce. The team is currently working on a mobile friendly survey tool to take away some of the manual work where the data will feed directly into Salesforce. However, the current Salesforce data model and architecture does not have any powerful reporting/dashboard/visualization solution implemented, and the current data model does not support the type of visual report the team wants to generate.<br />\n<br />\nWe want your help in <strong>designing an architecture with Salesforce as the backbone, that will allow the team to store and do analysis on multi dimensional geographic data</strong>. Best of luck on this challenge!</p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">======================================================================================</span></p>\n&nbsp;\n\n<p><strong>Full Description &amp; Project Guide</strong></p>\n&nbsp;\n\n<p><strong>Challenge Description:</strong></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">- The architecture needs to suggest how to leverage Salesforce as a backend while possibly highlighting any dashboard/visualization tools that the team can use to generate multi dimensional geographic data (keeping in mind nonprofit specific offerings) that will be collected from a hybrid mobile app that will be used for collecting survey information.</span></p>\n\n<p><strong>\f</strong></p>\n\n<p><strong>Current state:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">- The data in salesforce will be used in a few different ways:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Vet out organizations that should or should not be part of the partner network</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- It is used to further investigate how different organizations are helping their communities and to find where there are gaps and opportunities to collaborate (this is done based on the programmatic scope, demographic scope, and geographic scope data that is collect in a survey in the mobile app)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">- The hybrid mobile app&rsquo;s current architecture / flow is as follows</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\"><img src=\"https://lh6.googleusercontent.com/8zRUMg6NnxRSPXM9i-o1hFIAoO7ZQeuYk0y8wEo6hBTigAagZ3oDCIy82biIc8svGs5SpvWAVO9AVJ0UaSZO0FGc8Z7bYmJiNgNFFHfxWcw7JlpepxYbMCpFQ8VHjiiFC6KtNsZe\" style=\"-webkit-transform:rotate(0.00rad); border:none; height:322px; transform:rotate(0.00rad); width:416px\" /></span></p>\n&nbsp;\n\n<p><strong>Future vision:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- A salesforce data model that will support collecting all the data needed to do in depth gap analysis on the organization around the country (Please see attached example of visualization we would like to be able to produce)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- A data model and salesforce workflow that will allow the caseworker to do analysis on the data collected in a two part survey as well as other collected in depth / useful data during interviews with organizations leads. &nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- A integrated (or stand alond with ETL connections) reporting and data visualization tool that will allow the team to:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Provide local communities with a report on how they can do better (based on the findings above) - using multi dimensional geographic visual to create a wow effect.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">--- Provide a more aggregated report to state level leadership on what is happening in their state. - using same visualization techniques as above but on a more high level. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Find a subsitute for Parse.com as the &ldquo;Mobile Backend as a Service&rdquo; since this service is expiring. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Recommend how to integrate the current CRM data into the new format.</span></p>\n\n<p><em>The nonprofit already have 1000s of organizations stored in the current data model in SFDC. However, as explained some of the key geographical data and its programmatic scope are not linked in the same way as we explain in the future vision. This means that not only do we need you to propose an new structure and data model based on the new requirements above, but we also need you to come up with a smart way to ETL &amp; integrate what is currently in the system into the new one.</em></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- How would you ETL all the data which has been captured in the old SFCD data model to the new one.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- For the data that has not yet been collected on these organization how should we fill in the gap? In other words, how would you deal with the data that are missing from these records? We believe some it, if not most of the new data points could be collected/re-mapped in the 2nd part of the survey. However, we are looking for you to outline an approach of how to do this and how it would look like in salesforce.</span></p>\n&nbsp;\n\n<p><strong>The data that is collected:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Going forward, a lot of the data that will populate salesforce will come directly from a survey tool. This survey app will be a 2-step survey. Where the first step collects basic organization information, point of contact, programmatic scope (What they do), demographic scope (Whom they serve), geographic scope (Where they serve) and the 2nd part will ask vetted partners to provide more granular details around the programs they provide and where (what geographic area) for each program.</span></p>\n&nbsp;\n\n<p><strong>Basic Organization Details:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Organization Name.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Organization Type. (Drop Down List)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Website.</span></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Primary Point of Contact Details:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Salutation. (Drop Down List)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Last Name.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- First Name.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Title.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- E-Mail.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Telephone.</span></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Programmatic Scope:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Programmatic scope refers to the type of services an organization provides (this could include 1 or more of the following programmatic categories / sub-categories):</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Prevention:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Awareness.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Demand.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Vulnerability.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Identification:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Training.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Outreach.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Rescue:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Intervention.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Temporary Shelter.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Services.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Victim Advocates.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Restoration:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Aftercare.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Reintegration.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Reforms:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Legal.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Policy.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Systems.</span></p>\n&nbsp;\n\n<p><strong>Demographic Scope:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Demographic Scope refers to the demography of the people the organization serves (this could include 1 or more of the following demographic categories):</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Age</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Adults</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Children</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Youth</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Citizenship</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Citizens</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Foreign Nationals</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Sex</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Male</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Female</span></p>\n<br />\n<br />\n<br />\n&nbsp;\n<p><strong>Geographic Scope:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">An organization may provide services in 1 or more geographic areas. They may serve an entire state, or only specific counties within a state. The end goal of this survey is to identify the coverage area for the organization (it will eventually be mapped and compared to coverage areas of similar organizations).</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Country:</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- State 1:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-------- County 1</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---------- City 1 (optional)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">- There should also be the option to add additional geographic areas of coverage (i.e. State 2, State 3, etc).</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">- NOTE: We are looking for your creative ideas and suggestions to store and map geographic coverage areas intuitive and easy for the users to filter and search as well as visualize the output (more examples around this is provided below.</span></p>\n&nbsp;\n\n<p><strong>Other organisation related information stored in salesforce (not collected in survey):</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Please see attached Salesforce data model </span></p>\n&nbsp;\n\n<p><strong>Current Salesforce Data Model</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">The current data model consists of a bunch of standard objects + some custom objects including</span></p>\n&nbsp;\n\n<p><strong>Custom Objects</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Article__c.object</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Partner__c.object</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Partnership_Application__c.object</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">VIA_Application__c.object</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Geo_Concentration__c.object</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">&nbsp;&nbsp; &nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">book__c.object</span></p>\n&nbsp;\n\n<p><strong>Current usage of Parse</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">The Parse framework is currently used for </span></p>\n\n<p><span style=\"background-color:transparent\">User authentication and management</span></p>\n\n<p><span style=\"background-color:transparent\">Logging visits</span></p>\n\n<p><span style=\"background-color:transparent\">Push notification (currently not supported but will be included in future)</span></p>\n\n<ul>\n</ul>\n&nbsp;\n\n<p><strong>Intake process &amp; tool:</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">1st survey - The initial survey will capture the most important information needed on the organizations and groups attending.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Provide program A, B, C</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Provide these services in Area A &amp; B</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- For Demographic A &amp; C</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">2nd Survey will ask the organisation to mapp each of the program to each of the geographic area they cover. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- For Area A, we do program &nbsp;A, B, C for demographic A &amp; C</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- For Area B, we do program A, for Demographic C</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">\f</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- For Area B, we do program C, for Demographic A</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">This survey will also focus on collecting more in-depth information such as more in-depth information around how they specifically serv. This last part is likely to come in the form of free text (unstructured data) since there is so many variations at this point that using multiselect options is simply too cumbersome.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- age of the children supported</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- specific nationalities served</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- program specific information</span></p>\n\n<p><strong>Used cases:</strong></p>\n\n<p><strong>-- Use Case One:</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\"> </span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Organization 1 is a larger non-profit, they provide services in State A and B.</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">In State A they only serve county 1, 2, and 5</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">For county 1 and 2 they provide services X, Y only for Female adults</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">For County 5 they provide services X but for both Male and Female</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">In State B they serve all counties</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">For all counties in state B they provide service X for all demographics</span><br />\n&nbsp;</p>\n\n<p><strong>-- Use Case Two:</strong><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Organization 2 is a small local church, they provide services in county 1 and 2 in state C</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">In county 1 and 2 they serve X, Y, C for all demographic</span><br />\n&nbsp;</p>\n\n<p><strong>-- Use Case three:</strong><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Organization 3 is a group of high schools, they provide services in county 1 and 2 in state C</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">In county 1 they provide service X and Y and only for Female Children</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">In county 2 they provide service X but for men and Female (of all ages)</span><br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">In county 2 they also provide service Y but only for adult Female</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">After the second survey the data could look something like this:</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\"><img src=\"https://lh3.googleusercontent.com/KmtG8vrZSEpqwJYN-sx8c3xLe8DFDOvvqTF16NT33HC1w1aI1WMoU2hj-Zv1rtSSET76PYxHgZ6v0E73LcdUQtIn_vYnYUf8tF4g4Po2QjUoKfKWxLZ6ViQu5TFKXPszIgQbAZLk\" style=\"-webkit-transform:rotate(0.00rad); border:none; height:324px; transform:rotate(0.00rad); width:624px\" /></span><br />\n&nbsp;</p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">\f</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Reporting needs and requirements:</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">With the data captured in the survey we want to be able to generate a &ldquo;wow&rdquo; moment report/data visualisation/, dashboard showing at a county/state or region level what is happening, what is being done and what is not being done. </span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\"><img src=\"https://lh4.googleusercontent.com/otkTYCWh4sTXLGMWwRAghhK56l_5762JLEcZswmgxYpXOOWRcnxNY5URNIope-hdCD2k0st3MgI8qPpe1avXbhotw2Cb9St6SW3P_KOmrPf1ZPTTl8NU615zDtpvhizvDy8VzG4j\" style=\"-webkit-transform:rotate(0.00rad); border:none; height:337px; transform:rotate(0.00rad); width:624px\" /></span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">For example:</span></p>\n\n<p><em>-- State A have x organisations supporting A, B, C effort for male and female</em></p>\n\n<p><em>-- State A have no organisations supporting &nbsp;C effort for foreign nationality in county 1,2,3</em></p>\n\n<p><em>-- In county 1, over X organisations are support A &amp; B but no one is supporting efforts in C</em></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">This can then be distributed directly to the orgs that are filling out the survey, as a first step to action. But more important also shared with state level leadership.</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">Once these Organizations have been further vetted (the team has a process for this that happen in the background) the link to the second survey will be sent out to capture mission critical data on what is happening on very detailed level. </span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">For example:</span></p>\n&nbsp;\n\n<p><em>Organisation X is support A &amp; B in county A and city of B, and for program A they are focused on a,b,c but not e and f</em></p>\n\n<p><em>(although pragmatics scope categories and subcategories are well defined we want to allow organisation to provide further details on each one of them)</em></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">All this data is very sensitive when aggregated. (for example, If it gets in the wrong hands it can tell traffickers where there is no support and where they should set up shop etc.) this data will be used to do further analysis (perhaps via another interactive dashboard) and shared with state level leadership for more larger scale efforts as well with neighboring organisations to highlight collaboration efforts and opportunities for improvements. </span></p>\n&nbsp;\n\n<p><strong>\f</strong></p>\n\n<p><strong>Objectives</strong></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">The updated architecture must meet the following requirements:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Suggest a replacement framework for Parse.com as it&rsquo;s been discontinued</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Use the provided survey data fields and custom objects and online how it must be persisted in Salesforce</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- how would you structure the data collected to make report and management of the data easier and so that the team can visualize the data as explained earlier in the requirements? The team might be interested in a data warehouse in the future, however how can you organize the data today to allow for advanced reporting directly in salesforce today?</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">---- Data model needs to be implementable in salesforce</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- How to create and run reports (again, while leveraging Salesforce capabilities) will drill down capabilities based on chosen data model</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">-- Suggested data visualization tool strategy </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">----- build custom inside salesforce (custom or wave) or outside tools like Tableau or Qlikview etc. , if outside tools how would they be integrated into salesforce (ETL, DW etc.)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">----- Keep in mind that this is an non-profit with limited IT Staff and IT budget so opensource, simple or cheaper solutions are prefered</span></p>\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:12px\">----- Keep in mind that the reporting solutions needs to not only produce regular CRM reports but also multi dimensional geographic heart maps (please see attached examples)<br />\n<br />\n<strong>Provided Artefacts</strong></span><br />\n<br />\n<span style=\"color:rgb(0, 0, 0); font-family:arial; font-size:12px\">----- Existing mobile app code (Gitlab link in forums)<br />\n----- Existing data model dump (availalbe in forums)</span><br />\n&nbsp;",
    "finalSubmissionGuidelines": "<p>You must provide the following:<br />\n<br />\n-- Updated data model in Salesforce<br />\n-- Reporting / Data Visualization Strategy and Structure<br />\n-- Replacement for Parse.com for hybrid app with due justification<br />\n-- Strategy &amp; approach to migrate data from the current data model to the new one</p>\n",
    "screeningScorecardId": null,
    "reviewScorecardId": "30002000",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-25T01:00:00.000-04:00",
    "registrationEndDate": "2016-10-30T00:59:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-11-01T01:00:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34370",
    "appealsEndDate": "2016-11-04T04:30:00.000-04:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055565",
    "technology": [
        "Salesforce"
    ],
    "prize": [
        1600,
        800
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "Salesforce.com",
        "Mobile",
        "Other"
    ],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 131,
        "currentTime": 1588211042340
    },
    "requesterInformation": {
        "id": "9f98e8ea8a1848fa3b52560a7f2df3c5bd1ce76c-mP2B79FFs1o8h6e7",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055565",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Code",
    "challengeName": "Anemoi - Document Management - Angular 2 UI Unit Testing",
    "challengeId": 30055566,
    "projectId": 11090,
    "forumId": "34305",
    "detailedRequirements": "<p><span style=\"color:rgb(255, 0, 0)\"><strong>IMPORTANT NOTE:</strong><br />\n<strong>We found out that members from certain countries are restricted from working on this challenge, due to the client&rsquo;s company policies. Challenge submissions cannot be accepted from members registered in a country with a score of 37 or less according to Transparency International&#39;s Corruption Perception Index 2015.</strong></span></p>\n\n<p><span style=\"color:rgb(255, 0, 0)\"><strong>If your country is highlighted in red in the following sheet your submission WILL NOT be accepted, unfortunately. This is NOT a new Topcoder policy or something that will become a normal part of future challenges. This is an isolated policy and requirement for this specific client and their challenges. Thank you for your understanding.</strong></span><br />\n<u><a href=\"https://docs.google.com/spreadsheets/d/1MFZCGwIqgllzWBJuh2adC_BRCCG4kZwN1m8j4ZgbuLc/edit?usp=sharing\" style=\"background: 0px 0px; text-decoration: none; outline: 0px; cursor: pointer; color: rgb(0, 150, 255); transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word;\">https://drive.google.com/file/d/0B9lpcmurgZ35WlkyWUV2OW9IRjQ/view</a></u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Welcome to the Document Management UI Unit Testing Challenge!</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The goal of this challenge is to improve the unit testing coverage for a desktop rich HTML5 Prototype application using the AngularJS 2 development framework.</span>&nbsp;</p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">As part of this challenge you will need to document all unit testing code. We need clear explanation of the code to help us figure all the code functions and make it easier for future developers and the client to understand what you have built.</span></p>\n\n<p><strong>IMPORTANT!</strong></p>\n\n<p><span style=\"color:#FF0000\"><strong><span style=\"background-color:transparent; font-family:arial; font-size:14.6667px\">-&nbsp;</span>The existing tests are failing, these can be ignored. You are responsible to implement the unit tests for the models layer as outlined below.</strong></span>&nbsp;<br />\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- This application will eventually use a customised version of Bootstrap 3. Exact visual interpretation is less important that a functionally correct and elegant Angular component(s) and other code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Asking questions early and getting Copilot or PM&#39;s feedback is very important for the success of this challenge.</span></p>\n&nbsp;\n\n<p><strong>Source Code</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0)\">The source code&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">is provided in challenge forums.</span></p>\n\n<p><strong>Challenge Overview</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The main task of this competition is to develop the unit test(s) for the AngularJS 2 functions / components provided. Your unit tests must run as part of all existing npm / gulp commands. </span></p>\n\n<p>&nbsp;</p>\n\n<p><strong>UI Prototype Page Requirements</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Below are the requirements for this challenge. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">\f</span></p>\n\n<p><strong>Challenge Description</strong></p>\n&nbsp;\n\n<p><strong>Component / Code Description</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The &lsquo;models layer&rsquo; for the current Document Management user interface is currently only unit tested indirectly in the application. We would like to be able to add unit testing to provide full coverage of all such calls. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The application has a &lsquo;model layer&rsquo; to represent common models and objects used in the application. Most are simple (just constructors) but two in particular have more complex logic. It is these two which we request unit tests to be created for. </span></p>\n&nbsp;\n\n<p><strong>Angular Setup provided</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Custom cut-down AngularJS 2 application with gulp workflow, Karma / Jasmine / Istanbul unit testing and coverage.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Model layer files, and all other dependent components. </span></p>\n&nbsp;\n\n<p><strong>Development Criteria</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Where applicable, meet criteria specified in General Coding Requirements and Coding Standards at the end of this document. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- A corresponding spec file for each of the document-result.model.ts and elastic-query.model.ts files provided:</span></p>\n&nbsp;\n\n<p><strong>&hellip;app/models/</strong></p>\n\n<p><strong>&nbsp;&nbsp; &nbsp;</strong><strong>&nbsp;&nbsp; &nbsp;</strong><strong>document-result.model.ts</strong></p>\n\n<p><strong>&nbsp;&nbsp; &nbsp;</strong><strong>&nbsp;&nbsp; &nbsp;</strong><strong>elastic-query.model.ts</strong></p>\n\n<p style=\"margin-left:72pt\"><strong>document-result.model.spec.ts</strong></p>\n\n<p style=\"margin-left:72pt\"><strong>elastic-query.model.spec.ts</strong></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 112, 192); font-family:arial; font-size:14.6667px\">- Unit testing file for the model for document results returning from ElasticSearch.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(112, 48, 160); font-family:arial; font-size:14.6667px\">- Unit testing file for the model for representing an ElasticSearch query (and population of it). </span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Any required external libraries or assets placed in the assets folder, amending SystemJS, index.html or other relevant files. &nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Istanbul to report 100% coverage of these two files. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Unit tests to execute using the following commands:</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- npm start (where the spec file is included in /testsuite file)</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- npm run testsuite &ndash;s (where the spec file is included in /testsuite file)</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- npm test </span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- npm build</span></p>\n&nbsp;\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">\f</span></p>\n\n<p><strong>General Coding Requirements</strong></p>\n&nbsp;\n\n<p><strong>All components (whether generic or route) will be in their own directory, containing html, ts, styl and spec files (see RULE 3 in Coding Standards). </strong></p>\n&nbsp;\n\n<p><strong>.html file - template</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Provide comments on the page elements to give clear explanation of the code usage. The goal is to help future developers understand the code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Please use clean INDENTATION for all HTML code so future developers can follow the code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- All HTML code naming should not have any conflicts or errors.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Element and Attribute names should be in lowercase and use a &quot;-&quot; to separate multiple-word classes (e.g. &quot;main-content&quot;)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Use semantically correct tags- use H tags for headers, etc. Use strong and em tags instead of bold and italic tags.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- No inline CSS styles- all styles must be placed in the external css (Stylus) stylesheet. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Validate your code - reviewers may accept minor validation errors, but please comment your reason for any validation errors. Use the validators listed in the scorecard.</span></p>\n&nbsp;\n\n<p><strong>.styl file - styling</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- We use Stylus, which is transpiled to CSS within our gulp workflow.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- We also use a modified version of Bootstrap 3 for styling. Do not be too concerned about pixel perfect representation &ndash; this will be done by a separate User Experience team. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Use CSS3 Media Queries to load different styles for each page and don&#39;t build different page for different device/layout.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Provide comments on the CSS code. We need CSS comments to give a clear explanation of the code usage. The goal is to help future developers understand the code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Please use clean INDENTATION for all CSS so developers can follow the code.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- All CSS naming should not have any conflicts.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- As possible use CSS3 style when create all styling.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- You MUST use Stylus &nbsp;to make the CSS code clean, provide source files on your submission.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Use CSS to space out objects, not clear/transparent images (GIFs or PNGs) and use proper structural CSS to lay out your page. Only use table tags for tables of data/information and not for page layout.</span></p>\n&nbsp;\n\n<p><strong>.ts file - Typescript</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- We use TypeScript for our components / coding in AngularJS 2. </span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- A full list of coding standards is shown at the end of this document. </span></p>\n&nbsp;\n\n<p><strong>.spec file &ndash; Unit testing</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- The spec file must provide full (100%) coverage as reported by Istanbul. </span></p>\n&nbsp;\n\n<p><strong>External Files &ndash; including Javascript libraries</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- All external libraries must be loaded according to the instructions set out in DEVNOTES.md.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- All JavaScript, images or other must not have a copyright by a third party. You are encouraged to use your own scripts, or scripts that are free, publicly available and do not have copyright statements or author recognition requirements anywhere in the code.</span></p>\n&nbsp;\n\n<p><strong>Desktop Browsers Requirements</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Windows &amp; Mac OS</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Mandatory:</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- IE11</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Chrome (version 50+)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Optional:</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- IE10</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Safari (version 7)</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Firefox (version 32)</span></p>\n&nbsp;\n\n<p><strong>Development Framework Requirements</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Bootstrap (version 3)</span></p>\n<span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- AngularJS 2.0</span>",
    "finalSubmissionGuidelines": "<p>Below is an overview of the deliverables:</p>\n\n<ul>\n\t<li>- All updated source code and tests that address the requirements.<br />\n\t-&nbsp;A complete and detailed deployment document explaining how to deploy the application including configuration information.</li>\n</ul>\n\n<h2>Final Submission</h2>\n\n<p>For each member, the final submission should be uploaded via the challenge detail page on&nbsp;<a href=\"http://www.topcoder.com\">topcoder.com</a>.<br />\n<br />\n&nbsp;</p>\n\n<p><strong>Coding Standards:</strong></p>\n&nbsp;\n\n<p><u>RULE 1 - Listen to Paps</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Where possible, adhere to&nbsp;</span><a href=\"https://angular.io/docs/ts/latest/guide/style-guide.html\" style=\"text-decoration: none;\"><u>https://angular.io/docs/ts/latest/guide/style-guide.html</u></a></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">If in any doubt of standards to follow, this style guide should provide guidance (unless a rule defined herein overrides it).</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The following rules within this guide are mandatory:</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- STYLE 03-01: Use upper camel case when naming classes;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- STYLE 03-03: Use upper camel case when naming interfaces;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- STYLE 03-04: Use lower camel case to name properties and methods;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- STYLE 05-12: Do use @Input and @Output instead of inputs and outputs properties.</span></p>\n\n<p style=\"margin-left:36pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 2 - Organise imports alphabetically</u></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{addProviders, async, ComponentFixture, inject, TestComponentBuilder} from &#39;@angular/core/testing&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{HTTP_PROVIDERS, Response, ResponseOptions, XHRBackend} from &#39;@angular/http&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{MockBackend, MockConnection} from &#39;@angular/http/testing&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{By} from &#39;@angular/platform-browser&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{ActivatedRoute} from &#39;@angular/router&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{persons} from &#39;../../../data/persons&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{MockActivatedRoute} from &#39;../../../mocks/mock-activated-route&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{Route1DetailComponent} from &#39;./route1-detail.component&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">{PersonService} from &#39;../../../services/person-service&#39;;</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Order imports alphabetically by t</span><span style=\"background-color:transparent; color:rgb(0, 51, 102); font-family:arial; font-size:14.6667px\">he string&nbsp;</span><strong>&#39;@angular/core/testing&#39;</strong><span style=\"background-color:transparent; color:rgb(0, 51, 102); font-family:arial; font-size:14.6667px\">&nbsp;and ignore&nbsp;</span><strong>../</strong><span style=\"background-color:transparent; color:rgb(0, 51, 102); font-family:arial; font-size:14.6667px\">&nbsp;when&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">ordering.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Also order within t</span><span style=\"background-color:transparent; color:rgb(0, 51, 102); font-family:arial; font-size:14.6667px\">he curlies&nbsp;</span><strong>{addProviders, async, ComponentFixture, inject, TestComponentBuilder}</strong></p>\n&nbsp;\n\n<p><u>RULE 3 - Follow our 5 tiered component structure</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Given the following routing ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">export const</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">routes:RouterConfig = [</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;{</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;path: &#39;route1&#39;,</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;component: Route1Component,</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;children: [</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{path: &#39;:id&#39;, component: Route1DetailComponent},</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{path: &#39;&#39;, component: Route1ListComponent}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;]</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;},</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;{path: &#39;route2&#39;, component: Route2Component}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">];</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We require the following component&nbsp;</span><strong>folder</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;structure.</span></p>\n\n<p><strong>- routes</strong></p>\n\n<p style=\"margin-left:36pt\"><strong>- route1</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1.component.ts|html|styl|spec (</span><strong>parent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- detail</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1-detail.component.ts|html|styl|spec (</span><strong>child</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:108pt\"><strong>- partial1</strong></p>\n\n<p style=\"margin-left:144pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1-detail-partial1.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:108pt\"><strong>- partial2</strong></p>\n\n<p style=\"margin-left:144pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1-detail-partial2.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- list</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route1-list.component.ts|html|styl|spec (</span><strong>child</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:36pt\"><strong>- route2</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- route2.component.ts|html|styl|spec (</span><strong>parent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We also employ the following component folder structure in respect of reusable components.</span></p>\n\n<p><strong>- apponents</strong></p>\n\n<p style=\"margin-left:36pt\"><strong>- apponent1</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- apponent1.component.ts|html|styl|spec (</span><strong>apponent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- partial1</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- apponent1-partial1.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- partial2</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- apponent1-partial2.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:36pt\"><strong>- apponent2</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- apponent2.component.ts|html|styl|spec (</span><strong>apponent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p><strong>- components</strong></p>\n\n<p style=\"margin-left:36pt\"><strong>- my-component1</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component1.component.ts|html|styl|spec (</span><strong>reusable</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- partial1</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component1-partial1.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:72pt\"><strong>- partial2</strong></p>\n\n<p style=\"margin-left:108pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component1-partial2.component.ts|html|styl|spec (</span><strong>partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p style=\"margin-left:36pt\"><strong>- my-component2</strong></p>\n\n<p style=\"margin-left:72pt\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component2.component.ts|html|styl|spec (</span><strong>reusable</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">This structure reveals a 5 tiered component approach.</span></p>\n\n<p><strong>- parent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a non-reusable parent routing component.</span></p>\n\n<p><strong>- child</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a non-reusable child routing component. These components are always nested within their parent.</span></p>\n\n<p><strong>- apponent</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a component that offers application level reuse.</span></p>\n\n<p><strong>- reusable</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a component that offers total reuse. Total reuse is defined as the level of reuse which would permit a component to form part of a public library.</span></p>\n\n<p><strong>- partial</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- a component that comprises part of another component. Used for organisational purposes. These components are always nested within their owning component.</span></p>\n&nbsp;\n\n<p><u>RULE 4 - Data requests must be made in child components</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Child components must make ALL data requests (eg HTTP requests) with 3 limited exceptions.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- A parent component may make a data request if it has no children.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- A partial component owned by a child component may make a data request.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- An apponent or reusable component should normally receive data as Angular2&nbsp;</span><strong>@Input</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;- this approach makes the component generic thereby extending reuse cases. There could however be a use case for making data requests here. For instance, consider a weather component. This may make a call to a public weather API and render the results accordingly. The API call here closely maps to the fundamental purpose of the component. A proposal for making a data request from an apponent or reusable component should be referred to project lead. One must consider whether public APIs are accessible in the production environment.</span></p>\n&nbsp;\n\n<p><u>RULE 5 - Use RxJS Observables NOT promises</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">These support streaming and binding. For instance, you can use RxJS Observables to bind to a URL param.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">When the URL param changes, the relevant parts of the view are updated without the need to completely recompile. This affords great speed rewards.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">RxJS Observables are harder to get your head around but are worth the pain. An RxJS Observable can be thought of as a stream of promises. The&nbsp;</span><strong>.subscribe()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;method (equivalent to a promises&nbsp;</span><strong>.then()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;method) is potentially called many times, every time an event trickles down the stream.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">export class</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">Route1DetailComponent implements</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">OnInit {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;private</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">DEFAULT_ID:number = 1;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;private</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">person:Person;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;constructor(public</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">route:ActivatedRoute, private</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">personService:PersonService) {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;ngOnInit() {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;let paramsStream = this.route.params</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.map((params) =&gt; parseInt(params[&#39;id&#39;], 10))</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.map((id) =&gt; !isNaN(id) ? id : this.DEFAULT_ID);</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;// We use flatMap instead of map to prevent this stream being a metastream - i.e. stream of streams</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;let responseStream = paramsStream.flatMap((id) =&gt; {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let personStream = this.personService.getPerson(id);</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">personStream;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;}).publish().refCount();</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;responseStream.subscribe((person:Person) =&gt; {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(person);</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.person = person;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(err) =&gt; console.error(&#39;oops&#39;, err)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;);</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">}</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">RxJS is reactive programming. Reactive programming means reacting to events emitted from streams.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">To understand RxJS you must understand streams. A stream is a sequence just like an array. The one difference is that arrays are stored in memory. Streams are time based.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Please read this&nbsp;</span><a href=\"https://gist.github.com/staltz/868e7e9bc2a7b8c1f754#reactive-programming-is-programming-with-asynchronous-data-streams\" style=\"text-decoration: none;\"><u>RxJS tutorial</u></a></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp; FROM the heading&nbsp;</span><strong>Reactive programming is programming with asynchronous data streams</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;&nbsp;&nbsp; TO the text that says&nbsp;</span><strong>Since this feels so familiar already</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">In particular all developers must be conversant with ASCII stream diagrams from reading this tutorial.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Now discussing the above code ..</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">An RxJS Observable is a stream and has a&nbsp;</span><strong>.subscribe()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;method (just like promises have a&nbsp;</span><strong>.then()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;method)</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Our first stream is&nbsp;</span><strong>paramsStream</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;which is a stream of URL params and looks like ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">` paramsStream ------- {id:10} -------- {id:7} ------ {id:&#39;x&#39;} -------------- {id:20} -------&gt;</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We can&nbsp;</span><strong>.map()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;a stream exactly as we&nbsp;</span><strong>.map()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;an array. Our two&nbsp;</span><strong>.map()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;calls give ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .map() ------- 10</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">------------- 7</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">----------- NaN ------------------- 20</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">------------&gt;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .map() ------- 10</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">------------- 7</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">----------- 1</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">--------------------- 20</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">------------&gt;</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We now want to use the ID numbers being emitted from this stream to make API calls using&nbsp;</span><strong>personService.getPerson(id)</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The problem is that&nbsp;</span><strong>personService.getPerson(id)</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;returns a stream. Do we want&nbsp;</span><strong>responseStream</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;to be a metastream viz a stream of streams? NO</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">If&nbsp;</span><strong>responseStream</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;was a metastream it would emit streams but we want it to emit API responses.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">To overcome this issue we simply use&nbsp;</span><strong>.flatMap()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;instead of&nbsp;</span><strong>.map()</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Assuming that there is no person with ID 7 being served up by our API, we end up with ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">responseStream ------- person10 ------- undefined --- person1 --------------- person20 ------&gt;</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">We can&nbsp;</span><strong>.subscribe()</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;to any of our streams with ..</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">stream.subscribe(successFunc, errorFunc);</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Compare that with promises.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">promise.then(successFunc, errorFunc);</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">No wonder we liken RxJS Observables to streaming promises!</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">As a team we will refer to RxJS Observables as streams.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Please use RxJS wherever possible and try to think with a reactive mindset.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 6 - Skinny controller, phat model</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Controller code should be minimal and high level. A developer should be able to glance at controller code and know what it is doing immediately.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Data requests and heavy data processing should take place in an Angular2 service.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 7 - Model transform</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">A models folder provides classes for converting, for example, API responses to TypeScript objects.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">An overarching class should be used to store JSON responses. That class should then provide methods for returning refined / massaged results.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The preferred TypeScript approach here is use of the&nbsp;</span><a href=\"https://www.typescriptlang.org/play/#src=%2F%2F%20Interface%20Segregation%20Principle%20(ISP)%0D%0A%2F%2F%20http%3A%2F%2Fwww.oodesign.com%2Finterface-segregation-principle.html%0D%0A%0D%0A%2F%2F%20i-aged.ts%0D%0Ainterface%20IAged%20%7B%0D%0A%20%20%20%20id%3Anumber%3B%0D%0A%09name%3Astring%3B\" style=\"text-decoration: none;\"><u>Interface Segregation Principle and Type Casting</u></a></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Don&#39;t forget John Papa and his Rule of One!</span></p>\n&nbsp;\n\n<p><u>RULE 8 - Use&nbsp;trackBy for iterators</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">When using *ngFor if you do not use trackBy then any changes to the list will cause all list DOM items to be reloaded. trackBy introduces intelligence, allowing Angular2 to only update those DOM elements bound to updated list items.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&lt;div *ngFor=&quot;let person of persons; trackBy:myTrackingFunction&quot;&gt; //&nbsp;</span><strong>essential practice</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&lt;div *ngFor=&quot;let person of persons&quot;&gt; //&nbsp;</span><strong>extremely inefficient</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">For more see&nbsp;</span><a href=\"about:blank\" style=\"text-decoration: none;\"><u>https://angular.io/docs/ts/latest/guide/template-syntax.html#!#ngfortrackby</u></a></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 9 - Naming conventions</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">class names use .. PascalCase AKA UpperCamelCase</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">function names use .. camelCase</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">filenames use .. spinal-case AKA kebab-case in conjunction with Papa John&#39;s feature.type.ext</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-component1-partial1.component.ts|html|styl|spec</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- my-http.service.ts</span></p>\n\n<p><strong>These naming conventions can AND WILL BE enforced by the TypeScript compiler!</strong></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 10 - Template and Styles</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Components can have an inline or external template and / or styles.</span></p>\n\n<p><strong>External is preferred</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;but inline may be used where there are&nbsp;</span><strong>3 or less</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;lines of HTML or CSS.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Inline CSS must be pure CSS, inline Stylus is not supported.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">@Component({</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;template: `&lt;section class=&quot;greeting&quot;&gt;hello&lt;/section&gt;`,</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;styles: [`section.greeting { color:red }`]</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">})</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">External is de facto. External stylesheets may be written in Stylus. The styleUrls property must reference the .css extension.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">@Component({</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;templateUrl: &#39;route1-detail.component.html&#39;,</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;styleUrls: [&#39;route1-detail.component.css&#39;]</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">})</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The /templates folder provides two template components, one using an external template, the other uses inline.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Copy and paste these as appropriate when creating a new component.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 11 - Unit testing</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">All components must have a .spec.ts file containing unit tests.</span></p>\n\n<p><u>RULE 13 - NEVER import &#39;rxjs/Rx&#39;</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Importing &#39;rxjs/Rx&#39;&nbsp;imports the entire RxJS library, which is massive, and kills performance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">A developer must never do this. Rather import only the RxJS operators you need with ..</span><u>?</u></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&#39;rxjs/add/operator/catch&#39;;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">import</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&#39;rxjs/add/operator/publish&#39;;</span></p>\n</div>\n&nbsp;\n\n<p><u>RULE 14 - Understand providers and make them available at the right hierarchical level</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">In Angular1 each service provider provides a singleton instance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">In Angular2 each service provider provides a singleton instance BUT there can be numerous service providers at different hierarchical levels for the same service.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">The following diagrams depict this.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"><img src=\"https://lh5.googleusercontent.com/8FCFYIYpXZ3RbrnjMFp3dzvj0Cmm7GUOtarzBwNd4LrqMXK1CEcsmRMb3rwTfZOSBqUPa71-aO6-2xhUMN19tSSa4gDh20GhvYbeJLVH8ObU9RXiMWluKG6G6fNI3VGEDmsZFbFS5g73dXV7rg\" style=\"border:none; height:122px; transform:rotate(0rad); width:624px\" /></span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Here the parent component provides a singleton instance to itself and all descendant components.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">All components share the same singleton instance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\"><img src=\"https://lh6.googleusercontent.com/u1ymixOZ921KgwSaLS27vl56VTt4w93fIG_3JV6dr4Ynglu1DMdXNgyVwHog9yBNkEmC62BSZhbKcoozf4ow0t6VjDp1lBMtu7eE0KJr7sX2R6AlL934uFtGXsDiKFGaJ2u-Y4Hzj6p0JlQvVg\" style=\"border:none; height:122px; transform:rotate(0rad); width:624px\" /></span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Here the parent component, as before, provides a singleton instance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">However, child 2 component provides a different singleton instance to itself and its descendants.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Different components have access to a different singleton instance.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Because of this behavior within Angular2 we require that</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Providers for stateless services be defined at any hierarchical level.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Providers for stateful services be defined in the top level parent component only.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">- Stateful services be avoided wherever possible. Please consult a team lead before developing a stateful service.</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;</span></p>\n\n<p><u>RULE 15 - Minimal constructor logic use ngOnInit</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Angular2 docs advise to put minimal logic in the constructor.</span></p>\n\n<div style=\"margin-left:0pt\">\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">export class</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">MyClass implements</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">OnInit {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;constructor(private</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">myApiService:MyApiService) {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:times new roman; font-size:16px\">&nbsp;</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;ngOnInit() {</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;// Do initialisation here</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;&nbsp;&nbsp;// For example, API calls needed to render the page via MyApiService</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">&nbsp;&nbsp;}</span></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:courier new; font-size:13.3333px\">}</span></p>\n</div>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">This, as well as complying with Angular2 advice, gives us more control when unit testing since we can call ngOnInit() when we want.</span></p>\n\n<p>&nbsp;</p>\n\n<p><u>RULE 16 - Component to component comms</u></p>\n\n<p><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">Where two components exist on the same page they should communicate via a service. The service should expose an&nbsp;</span><a href=\"https://embed.plnkr.co/HWE3sR/preview\" style=\"text-decoration: none;\"><u>Rx.Subject()</u></a><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial; font-size:14.6667px\">&nbsp;to facilitate comms.</span></p>\n\n<div>&nbsp;</div>\n",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001610",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-24T17:08:00.000-04:00",
    "registrationEndDate": "2016-10-28T17:08:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-28T17:08:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34305",
    "appealsEndDate": "2016-10-31T11:25:00.000-04:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055566",
    "technology": [
        "Angular.js (1.0)",
        "CSS",
        "HTML",
        "JavaScript"
    ],
    "prize": [
        1200,
        600
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "Other"
    ],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 195,
        "currentTime": 1588211043221
    },
    "requesterInformation": {
        "id": "3cbe0b08030e48d27c434c9761dab5d9091024c4-GKIJ5GPagR3QgwMy",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055566",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Idea Generation",
    "challengeName": "deleteme5",
    "challengeId": 30055567,
    "projectId": 10254,
    "forumId": "607676",
    "introduction": "",
    "round1Introduction": "",
    "round2Introduction": "",
    "detailedRequirements": "",
    "screeningScorecardId": "30001363",
    "reviewScorecardId": "30001031",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-25T09:00:00.000-04:00",
    "registrationEndDate": "2016-10-28T09:00:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-28T09:00:00.000-04:00",
    "submissionsViewable": "false",
    "reviewType": "INTERNAL",
    "type": "design",
    "allowStockArt": null,
    "filetypes": [],
    "forumLink": "http://apps.topcoder.com/forums/?module=ThreadList&forumID=607676",
    "appealsEndDate": "2016-11-03T13:00:00.000-04:00",
    "submissionLimit": null,
    "currentStatus": "Draft",
    "digitalRunPoints": null,
    "challengeCommunity": "design",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055567",
    "prize": [
        1000,
        250
    ],
    "winners": [],
    "currentPhaseName": "",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 102,
        "currentTime": 1588211044485
    },
    "requesterInformation": {
        "id": "ee8170fcd724baed64c0e3685c445dc551486c4e-YwVQleV2WgSwaHGK",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055567",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Web Design",
    "challengeName": "US Foods - UX Design Concepts Challenge 1",
    "challengeId": 30055568,
    "projectId": 11129,
    "forumId": "607677",
    "introduction": "<p>Welcome to the US Foods - UX Design Concepts Challenge 1!<br />\n<br />\n<strong>Topcoder is cooking something up for US Foods:</strong><br />\nTopcoder has always a fresh approach to tackling design and UX problems and now it&rsquo;s time to sharpen your skills and dish up some serious designs that will improve user experience for US Foods employees. It starts with you, inspiration, exploration, creation. User Experience design reimagined. From Desktop to mobile we&rsquo;re going to transform how the US Foods workforce conducts business. We&rsquo;re talking ideas, applications, and tools that will connect and impact every US Foods employee. It&rsquo;s going to be fun.<br />\n<br />\nAt the end of this challenge, we are looking for the Topcoder Design Community to help us plan and design the user experience of our new application.</p>\n",
    "round1Introduction": "Submit your initial designs for Checkpoint Feedback\n<p><span style=\"color:#0000FF\">01 Territory Manager Dashboard (Desktop)<br />\n03 Calendering and Tasks (Desktop)<br />\n04 Customer Details (Desktop / Mobile)<br />\n05 Customer Workflow (Desktop)</span></p>\n<span style=\"color:#FF0000\">You must upload your submission to InvisionApp so we can provide direct feedback on your designs.<br />\n- Please request an InvisionApp link from the Copilot through the challenge forum.</span><br />\n<br />\nFeel free to add any other additional screens which are necessary to explain your concept.<br />\nNotes.jpg: Please note any comments about your design for the Client<br />\nMake sure all pages have correct flow! Use correct file numbering. (00, 01, 02, 03)",
    "round2Introduction": "Your Final designs for all the required designs with all Checkpoint Feedback implemented.<br />\n<br />\n<span style=\"color:rgb(0, 0, 255)\">01 Territory Manager Dashboard (Desktop)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">02 Manager Dashboard (Desktop)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">03 Calendering and Tasks (Desktop)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">04 Customer Details (Desktop / Mobile)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">05 Customer Workflow (Desktop)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">06 Calendering &amp; Route Finding (Mobile)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">07 Mobile Notifications (Mobile)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">08 Digital Sales Template (Tablet)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">09 During Meeting Activities (Tablet)</span><br />\n<span style=\"color:rgb(0, 0, 255)\">09&nbsp;Post Meeting Activities (Mobile)</span><br />\n<br />\n<span style=\"color:#FF0000\">You must upload your submission to InvisionApp, for the final submission - you can reuse the prototype that you shared for checkpoint<br />\n- Please request an InvisionApp link from the Copilot through the challenge forum.</span><br />\n<br />\nFeel free to add any other additional screens which are necessary to explain your concept.<br />\nNotes.jpg: Please note any comments about your design for the Client<br />\nMake sure all pages have correct flow! Use correct file numbering. (00, 01, 02, 03)",
    "detailedRequirements": "<p><span style=\"color:#0000FF\"><strong>About US Foods:</strong></span><br />\nUS Foods is one of the USA&rsquo;s leading foodservice distributors. From the corner diner to the five-star steakhouse, US Foods has helped shape how people eat in America for more than five generations. With a team of more than 25,000 people spanning 60 locations nationwide, they serve independent and multi-unit foodservice operations including healthcare, hospitality, government and educational institutions. They&rsquo;ve been helping their customers take a fresh approach to food and helping their customers &ldquo;make it&rdquo; for a long time, and now here&rsquo;s your chance to take a fresh approach and help US Foods employees &ldquo;make it&rdquo; for their customers.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Challenge Assets:</strong></span><br />\n- See provided branding guideline (USF-BrandGuidelines-V2.pdf)<br />\n- See provided design direction brief (USF-Brief-1.pdf)<br />\n- See provided stock images (<a href=\"https://drive.google.com/drive/folders/0B5pMhoyHTg-IYV82NXRPa184S1U?usp=sharing\" target=\"_blank\">Google Drive</a>)<br />\n- Also reference their website: &nbsp;<a href=\"https://www.usfoods.com/makeit/index.html\">https://www.usfoods.com/makeit/index.html</a><br />\n- Overall Application Flow and Idea sketches (US Foods-Idea Sketches.pdf, USF-Application-Flow.pdf)<br />\n<br />\n<span style=\"color:rgb(0, 0, 255)\"><strong>Design Guidelines:</strong></span><br />\n- We would like to have designs of size Desktop:&nbsp;1366 &times; 768px<br />\n- For any tablet designs, please use 2048 x 1536px<br />\n- For mobile designs, please use 750 x 1334px<br />\n- Make sure to all UI as scalable vectors, so we can resize it any size as required.<br />\n- Think about responsive solutions.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>User Story:</strong></span><br />\nIn this challenge we will be exploring key screens in a flow that start to address some of the pain points outlined in our user personas and will touch on the different devices that they will interact with throughout their day. For this challenge we will focus in on the day in the life of a Territory Manager and the interactions they have with the application as well as other roles within US Foods. A Territory Manager or (TM) works directly with customers in planning, problem solving, and selling US Foods products. They often work with several roles during their day as US Foods deploys a team based selling model approach.&nbsp;<br />\n<br />\n<strong>Kaleigh - Territory Manager:</strong><br />\nIt&rsquo;s early Monday morning and Kaliegh already knows that it&rsquo;s going to be a long and busy day. After a well deserved relaxing weekend her mind is swimming to remember all that she needs to accomplish this week. With her morning cup of coffee in hand, she cracks open her laptop and starts to prepare for the day/week. Thankfully her Sous Chef (Salesforce) has been doing the work behind the scenes and has everything laid out for Kaliegh to digest in order to get her day going right.<br />\n<br />\nAt a quick glance, Kaliegh reviews her dashboard and is able to see what her day looks like by viewing her tasks, notifications, customers, and day calendar. She is also able to see the status of her customers and any tasks that she has created for her team members, as well as see the status on recent orders.<br />\n<br />\nNext she prepares a quick summary for her Manager by sharing her call plan (list view of her day plan which includes visits to customers), top 10 leads and prospects that she&rsquo;s working on. She adds a few notes to ensure that she and her Manager are on the same page before she heads out for the day. After a quick 10 minute phone call with her manager, she&rsquo;s ready to start her day.<br />\n<br />\nNext she glances over at her notifications and alerts to see what is the most important thing that she should be focussing on for the day. Her dashboard has a list of tasks and objectives that Kaliegh is trying to achieve today. This helps her stay organized and focussed. She can click into any task or notification to get more detailed information about it, or quickly edit, move, or re-order her tasks to get the most efficiency out of her busy day.<br />\n<br />\nLooking at her calendar, she realizes that she is double booked with a customer at lunchtime...the same time she is supposed to take an order from an existing customer. She quickly creates a task for her Sales Coordinator to take that call with her customer to take an order and is instantly feeling better about knowing that the customer won&rsquo;t miss a beat.<br />\n<br />\nShe also remembers that this customer would like a new sample of pretzel rolls, so she creates a new task called a service request for her customer, assigns the task to her Sales Coordinator, and adds some notes to the request for her Sales Coordinator to follow up on.&nbsp;<br />\n<br />\nKaliegh wants to know a little bit more about one of her customers that she will be visiting today. From her calendar she is able to click into an event to navigate to a customer detail screen. Here she is able to view the customer details including customer location, customer information, recent orders, order status, order history, customer status, associated workflows, team members associated with the account, recent activity, tasks and notifications related to the customer.&nbsp;<br />\n<br />\nFrom the customer detail screen Kaliegh is able to navigate to a collaborative work flow screen that follows a &ldquo;Trello-like&rdquo; board that contains steps, tasks, and communications revolving around taking her customer through an established US Foods key routine or &ldquo;work flow&rdquo;.<br />\n<br />\nHere she is able to collaborate, communicate, assign tasks, compete tasks, and work thru an established work flow. Each stage of the work flow has associated tasks to complete before moving on to the next stage in the work flow and this interface allows Kaliegh and her team to work together to complete the work flow for their customer.&nbsp;<br />\n<br />\nAfter finishing up breakfast...it&rsquo;s time to hit the road. Kaliegh is out to visit her first customer of the day. After climbing into her car she wants to do a quick check of her days appointments and see what is the best route to match her priorities. From a calendar view she can navigate to a particular day and see her calendar events that are ranked and ordered for her. She can make any quick adjustments on the fly and then check the route finder to give her the most efficient path to navigate her day. Feeling confident about how her day is stacking up, she starts driving to her first appointment.&nbsp;<br />\n<br />\nLast week Kaliegh worked with her Food Specialist to prepare a custom presentation for her customer to review on this visit. She pulled together some menu ideas and created a presentation that will walk her customer thru her ideas while showcasing some additonal opportunities for her customer to consider that US Foods has to offer.<br />\n<br />\nArriving at her customer, Kaliegh receives a note on her mobile device from the Specialist that she collaborated with on her customer presentation. She reads the note on her mobile phone and is feeling confident about her approach now that she&rsquo;s been able to collaborate w/ her Food specialist. One last look at the agenda, objectives and notes about her meeting and she&rsquo;s ready to get cooking with her customer.<br />\n<br />\nPulling out her iPad, Kaliegh walks her customer thru her custom presentation being sure to touch on the talking points about the products while peppering in mentions of the US Foods value added services. The customer likes what he sees and wants to schedule a follow up with the food specialist to learn more about the suggested products. Kaliegh quickly takes down notes on the customer&rsquo;s thoughts and creates a task for a follow up visit with the customer with the food specialist.&nbsp;<br />\n<br />\nAfter finishing her presentation, Kaliegh captures some notes on what the customer thought and creates some action items/ next steps for her team to follow up on. Her next agenda item for this customer visit is to ask the customer if there is anything else they need. From her ipad she&rsquo;s able to take an order, take a service request, or capture quick additional notes about her customers needs.<br />\n<br />\nEverything is smelling sweet until the customer remembers that her last shipment of heavy whipping cream arrived sour. He&rsquo;d like a replacement. That&rsquo;s no problem for Kaliegh&hellip;.she just takes a picture of the spoiled goods to get a service request going. In a short, guided interaction...the service request has been entered and a task has been createed for the Sales Coordinator to take care of.&nbsp;<br />\n<br />\nLeaving the restaurant, Kaliegh has a few ideas and follow up items to capture. Sitting back in her car she creates some tasks for follow up, assigns them to the appropriate team members, and then quickly logs her call notes on her phone and reviews her objectives, tasks, and notes leading into her next appointment.&nbsp;</p>\n\n<p><span style=\"color:#0000FF\"><strong>Screen Details:</strong></span><br />\n<strong>01 Territory Manager Dashboard (Desktop):</strong><br />\n- This page needs to show the analytics and provide ability to filter by accounts and team performance<br />\n- This page provides a quick glance of how the day looks like for the user<br />\n- They will see a calendar to know things planned for the day.<br />\n- They will see notifications / alerts of the tasks that should be handled in the morning / noon.<br />\n- Should have the ability to search for accounts.<br />\n- Quick Summary of the Today&rsquo;s Calls: They will be able to share their call plan (includes the top 10 leads and prospects) for the day and be able to add some notes about the plan<br />\n- Should be able to send the quick summary to Manager<br />\n<br />\n<strong>02 Manager Dashboard (Desktop):</strong><br />\nA manager is responsible for managing several Territory Managers. Their primary concern is making sure that their team of Territory Managers have what they need in order to be successful.&nbsp;<br />\n- Should be able to view a high level summary of their teams performance<br />\n- They will be able to view the territory managers in their team and click into any team member to view their performance, accounts, leads, calendar, and notes<br />\n- Would it be good to have a search, that allows them to find territory manager they are looking for<br />\n- Should be able to drill-down to view the&nbsp;day to day events of the territory manager<br />\n- - - Should be able to see number of open accounts, leads and prospects the TM is working on.</p>\n\n<p><strong>02 Calendering and Tasks (Desktop):</strong><br />\n- Territory Manager (TM) would be able to view the list of tasks that are planned for the day&rsquo;s activities / appointments in the calendar<br />\n- They will be able to filter the calendar by clients, priority, team, etc..<br />\n- Good to show how their day looks like with all the today&rsquo;s call with the top 10 leads and prospects...think on how the day&#39;s view in a calendar would look like<br />\n- Should have the ability to create a task and within a task have a task type UI element where they can select they type of task. An example of a task type would be &nbsp;a &ldquo;service request&rdquo; . A TM should be able to create a service request for a customer and assign it to a team member (in this user story it is Sales<br />\nCoordinator)...think on how the user will assign it?<br />\n<br />\n<strong>03 Customer Details (Desktop / Mobile): </strong><br />\n- Territory Manger can click on a customer in the calendar and land on this page<br />\n- This page shows the customer details that includes<br />\n- - -&nbsp;customer location,<br />\n- - -&nbsp;customer information,<br />\n- - -&nbsp;recent orders,<br />\n- - -&nbsp;order status,<br />\n- - - order history,<br />\n- - -&nbsp;customer status,<br />\n- - -&nbsp;associated workflows,<br />\n- - -&nbsp;team members associated with the account,<br />\n- - -&nbsp;recent activity,<br />\n- - -&nbsp;tasks and notifications related to the customer.&nbsp;<br />\n- We are looking for your thoughts on how to plan the user experience for this page, make sure it doesn&#39;t look crowded and user finds what they want with ease!</p>\n\n<p><strong>04 Customer Workflow (Desktop):</strong><br />\n- From the customer details screen, user can navigate to this page.<br />\n- This page follows a &ldquo;<a href=\"https://trello.com/\">Trello-like</a>&rdquo; board that contains steps, tasks, and communications.<br />\n- Should allow user to collaborate, communicate, assign tasks, complete tasks (all these activites are based on established workflow)<br />\n- Each stage of workflow will have associated tasks to be completed, think on how the user will mark a task as complete before moving on to the other.<br />\n<br />\n<strong>05 Calendering &amp; Route Finding (Mobile):</strong><br />\n- Territory Manager will be able to view the list of appointments in her calendar<br />\n- They can choose a particular day and see the events ranked / ordered for them<br />\n- Allow them to make adjustments to that events and check the &quot;Route Finder&quot; (show a map?) to find the efficient path.</p>\n\n<p><strong>06 Mobile Notifications (Mobile)<br />\n-&nbsp;</strong>User will receive a notification when their team mate sends a message.<br />\n- This could show the username of the person who sent the message along with date/time<br />\n- Should have options to reply<br />\n- Looking for your thoughts on how these notification messages can be shown<br />\n<br />\n<strong>07 Digital Sales Template (Tablet):</strong><br />\n- Using these sales templates, Territory managers create custom presentations for their customers<br />\n-&nbsp;This is just a small portion of an idea that will allow US Foods sales team to use sales templates to create custom presentations for their customers.<br />\n-&nbsp;Sales team can pull in product information sheets, value added service descriptions, and create presentations that are customized for their customers needs.<br />\n-&nbsp;They are able to share, present and send these presentations to their customers as a follow up from their visits</p>\n\n<p><strong>08 During Meeting Activities (Tablet):</strong><br />\n- Should be able to take&nbsp;notes while the meeting is in progress.<br />\n- Should have the flexibility to create a service request and add images to it from their gallery.and assign it to a team member<br />\n- They will have presentations and assets to share with the customer<br />\n<br />\n<br />\n<strong>09&nbsp;Post Meeting Activities (Mobile):</strong><br />\n- After the meeting, should be able to create a follow up request, assign them to appropriate team members and add some notes for them.<br />\n- Should be able to add list of action items.<br />\n- They should be able to &quot;log a call&quot; which is capturing the notes and next steps coming out of their meeting with their manager<br />\n- They should be able to create a service request and assign it to their Sales Coordinator<br />\n- They should be able to view the next call that&rsquo;s planned.<br />\n<br />\n<strong><span style=\"color:rgb(255, 0, 0)\">Important:</span></strong><br />\n- Keep things consistent. This means all graphic styles should work together.<br />\n- All of the graphics should have a similar feel and general aesthetic appearance<br />\n- Focus on the user experience! Focus on the navigation experience. Keeping consistent visual elements.<br />\n<br />\n<span style=\"color:rgb(0, 0, 255)\"><strong>Stock Artwork:</strong></span><br />\nWe are allowing stock photos and stock icons for this challenge<br />\n- Stock Artwork policies:&nbsp;<a href=\"https://help.topcoder.com/hc/en-us/articles/217481408-Policy-for-Stock-Artwork-in-Design-Submissions\">https://help.topcoder.com/hc/en-us/articles/217481408-Policy-for-Stock-Artwork-in-Design-Submissions</a>&nbsp; &nbsp;<br />\n- Latest Design Policies:&nbsp;<a href=\"http://help.topcoder.com/hc/en-us/categories/202610437-DESIGN\">http://help.topcoder.com/hc/en-us/categories/202610437-DESIGN</a><br />\n<br />\n<span style=\"color:rgb(0, 0, 255)\"><strong>Target Audience:</strong></span><br />\n- Territory Manager, Sales Coordinator, Food Specialist, Manager<br />\n<br />\n<span style=\"color:rgb(0, 0, 255)\"><strong>Judging Criteria</strong></span><br />\nYour submission will be judged on the following criteria:<br />\n- Cleanliness of screen design and user flow<br />\n- Overall design and user experience<br />\n- Simplicity of design/strong, clear design concept<br />\n- How well your design align with the objectives of the challenge<br />\n<br />\n<span style=\"color:rgb(0, 0, 255)\"><strong>Submission &amp; Source Files</strong></span><br />\n<strong>Preview Image</strong><br />\nPlease create your preview image as one (1) 1024x1024px JPG or PNG file in RGB color mode at 72dpi and place a screenshot of your submission within it.<br />\n<br />\n<strong>Submission File</strong><br />\nSubmit JPG/PNG for your submission files.<br />\n<br />\n<strong>Source Files</strong><br />\nAll original source files of the submitted design. Files should be created in Adobe Photoshop and saved as layered PSD file, or Adobe Illustrator as a layered AI file or as Sketch!<br />\n<br />\n<strong>Final Fixes</strong><br />\nAs part of the final fixes phase, you may be asked to modify your graphics (sizes or colors) or modify overall colors. We may ask you to update your design or graphics based on checkpoint feedback.</p>\n",
    "screeningScorecardId": "30001363",
    "reviewScorecardId": "30001031",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 5,
    "topCheckPointPrize": 100,
    "postingDate": "2016-10-27T18:00:00.000-04:00",
    "registrationEndDate": "2016-11-07T09:00:00.000-05:00",
    "checkpointSubmissionEndDate": "2016-11-01T09:01:00.000-04:00",
    "submissionEndDate": "2016-11-08T07:01:00.000-05:00",
    "submissionsViewable": "false",
    "reviewType": "INTERNAL",
    "type": "design",
    "allowStockArt": "true",
    "filetypes": [
        "Layered PSD files created in Adobe Photoshop or similar",
        "AI files created in Adobe Illustrator or similar",
        "Sketch"
    ],
    "forumLink": "http://apps.topcoder.com/forums/?module=ThreadList&forumID=607677",
    "appealsEndDate": "2016-11-11T08:32:00.000-05:00",
    "finalFixEndDate": "2016-11-17T16:21:00.000-05:00",
    "submissionLimit": "5",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "challengeCommunity": "design",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055568",
    "prize": [
        1500,
        750,
        300
    ],
    "winners": [],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "event": {
        "id": 3447,
        "description": "2017 TopCoder(R) Open",
        "shortDescription": "tco17"
    },
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 165,
        "currentTime": 1588211045139
    },
    "requesterInformation": {
        "id": "226accd41d201e0769403b0ecd5838af5d06e6cd-8SclOx292Vgreea9",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055568",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Web Design",
    "challengeName": "Delete this!",
    "challengeId": 30055569,
    "projectId": 11129,
    "forumId": "607678",
    "introduction": "<p>Welcome to the US Foods - UX Design Concepts Challenge 2.<br />\n<br />\n<strong>Topcoder is cooking something up for US Foods:</strong><br />\nTopcoder has always a fresh approach to tackling design and UX problems and now it&rsquo;s time to sharpen your skills and dish up some serious designs that will improve user experience for US Foods employees. It starts with you, inspiration, exploration, creation. User Experience design reimagined. From Desktop to mobile we&rsquo;re going to transform how the US Foods workforce conducts business. We&rsquo;re talking ideas, applications, and tools that will connect and impact every US Foods employee. It&rsquo;s going to be fun.<br />\n<br />\nAt the end of this challenge, we are looking for the Topcoder Design Community to help us plan and design the user experience of our new application</p>\n",
    "round1Introduction": "Submit your initial designs for Checkpoint Feedback<br />\n<br />\n<span style=\"color:rgb(255, 0, 0)\">You must upload your submission to InvisionApp so we can provide direct feedback on your designs.<br />\n- Please request an InvisionApp link from the Copilot through the challenge forum.</span><br />\n<br />\nFeel free to add any other additional screens which are necessary to explain your concept.<br />\nNotes.jpg: Please note any comments about your design for the Client<br />\nMake sure all pages have correct flow! Use correct file numbering. (00, 01, 02, 03)",
    "round2Introduction": "Your Final designs for all the required designs with all Checkpoint Feedback implemented.<br />\n<br />\n<span style=\"color:rgb(255, 0, 0)\">You must upload your submission to InvisionApp, for the final submission - you can reuse the prototype that you shared for checkpoint<br />\n- Please request an InvisionApp link from the Copilot through the challenge forum.</span><br />\n<br />\nFeel free to add any other additional screens which are necessary to explain your concept.<br />\nNotes.jpg: Please note any comments about your design for the Client<br />\nMake sure all pages have correct flow! Use correct file numbering. (00, 01, 02, 03)",
    "detailedRequirements": "<p><span style=\"color:#0000FF\"><strong>About US Foods:</strong></span><br />\nUS Foods is one of the USA&rsquo;s leading foodservice distributors. From the corner diner to the five-star steakhouse, US Foods has helped shape how people eat in America for more than five generations. With a team of more than 25,000 people spanning 60 locations nationwide, they serve independent and multi-unit foodservice operations including healthcare, hospitality, government and educational institutions. They&rsquo;ve been helping their customers take a fresh approach to food and helping their customers &ldquo;make it&rdquo; for a long time, and now here&rsquo;s your chance to take a fresh approach and help US Foods employees &ldquo;make it&rdquo; for their customers.<br />\n<br />\n<strong><span style=\"color:#0000FF\">Challenge Assets:</span></strong><br />\n- See provided branding guideline (USF-BrandGuidelines-V2.pdf)<br />\n- See provided design direction brief (USF-Brief-2.pdf)<br />\n- See provided stock images (<a href=\"https://drive.google.com/drive/folders/0B5pMhoyHTg-IYV82NXRPa184S1U?usp=sharing\" target=\"_blank\">Google Drive</a>)<br />\n- Also reference their website: &nbsp;<a href=\"https://www.usfoods.com/makeit/index.html\">https://www.usfoods.com/makeit/index.html</a><br />\n- Overall Application Flow and Idea sketches (US Foods-Idea Sketches.pdf,&nbsp;USF-Application-Flow.pdf)<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Design Guidelines:</strong></span><br />\n- We would like to have designs of size Desktop:&nbsp;1366 &times; 768px<br />\n- For any tablet designs, please use 2048 x 1536px<br />\n- For mobile designs, please use 750 x 1334px<br />\n<br />\n<span style=\"color:#B22222\"><strong>User Story:</strong></span><br />\nFor this challenge we will be focussing in on the reporting tool that US Foods sales leaders use to manage strategy and their teams. Currently their reporting tools are a mix of different analytics platforms, spread sheets, and manually updated forms that are compiled and shared on different platforms such as email, excel, and powerpoint. Our goal is to improve the user experience for the sales leaders by providing them with a collaborative, intuitive, sales reporting tool where they can build, collaborate, and share the strategic reports that help guide their regions. Using the US Foods branding guidelines to create a custome look and feel, we are looking for you to use user experience guidance from <a href=\"https://www.lightningdesignsystem.com/guidelines/overview/\">Salesforce Lighting</a> to create our new dashboard reporting tool experience.&nbsp;<br />\n<br />\nIt is also important to add that not only will we be improving on how our sales leaders view this data, but how they will create action plans and tasks for their team based off of their data. The value from the tool is more in providing a clear communication channel within the application that helps drive strategy, communication, transparency, and management all the way through the organization.<br />\n<br />\n<strong>James - Leader:</strong><br />\nJames is a leader at US Foods. &nbsp;His days are spent digesting countless reports and data and from that data he needs to find key insights and strategy that will help him manage his team.&nbsp;<br />\n<br />\nBright and early on Monday morning the reports from various different field operations start coming in. From James&rsquo;s dashboard he is easily able to view each report as he filters and drills down into key metrics that he is looking for. Without having to move from screen to screen James is able to view the data in various different arrangements. From Region to market, down to Manager and all the way to a Territory Manager, James can view sales and account performance across different time periods and year over year. This gives him a clear and accurate picture of what his current state is and allows him to take action to help manage his team.<br />\n<br />\nJames has a meeting coming up and he&rsquo;d like to start pulling some reports to illustrate the current state of his market. From his new reporting tool, James creates a new report project from his dashboard and invites several members from his sales leadership staff to collaborate and work on the report project for the upcoming meeting.&nbsp;<br />\n<br />\nFrom the dashboard, James is able to click into a specific reporting project to view that item in more detail. He is taken to a reporting project details screen where he is able to view detailed information about that reporting project, project status, tasks, task status, team communication, as well as data visualizations for multiple reports and artifacts housed within the reporting project. In a &ldquo;tabbed&rdquo; interface, James is able to toggle between reports as well as use intuitive filter UI to start to disect, view, and gain insight from the reports. He is able to note, comment, and collaborate with team members on these reports with the goal of gaining valuable insight that he will use to help manage customer strategy and create action plans for his team.&nbsp;<br />\n<br />\nOnce the team has been invited, they get to work on collecting and analyzing the data. As they digest the data from within Salesforce, they also have to import other data sources to build their report project story. James needs some data from another system, and decides to import that data into his report project. By clicking on the &ldquo;add report&rdquo; button from his report project detail page, James is able to upload a new data source. James selects from a drop down tab to import data from System ONE to add to the overall story for his meeting. The result of this guided action is the creation of another data visualization within the project. James has a few questions for his a team member about what the data is showing him. Within the collaborative reporting tool, James comments on a data item asking his teammate for clarification on the data. The comment triggers a push notification for the his team member. The team member adds a coment to the comment thread within the reporting application clarifying and resolving the issue for James. This takes all of the communication out of email and consolidates it into a single collaborative space.<br />\n<br />\nThere can be several reports and assets associated within a report project. From a simple tabbed interface, James is quickly able to jump into another report view from with the reporting project detail screen where he can gain meaningful insights from the data visualization.&nbsp;<br />\n<br />\nThe report project is shaping up nicely now that all of the key team members are able to collaborate, and build in one space. Now it&rsquo;s time to share it out with other key leaders for review leading up to the meeting. James is able to save, export, and share out the report with anyone in his leadership team.&nbsp;<br />\n<br />\nAfter the meeting it is clear that there are several initiatives, tasks, and plans that need to be created in order to address the findings from the meeting. From the reporting tool, James can easily start assigning tasks, building plans, and share them out with his team. He is able to assign tasks at a team level, down to an individual level...giving him the flexibility and visibility that is necessary from a leadership position. James is also able to track the effectiveness of his leadership by following up on assigned tasks and initiatives from within the system.&nbsp;<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Use Cases:</strong></span><br />\n- Use Case 1: I want to analyze account performance over last two weeks<br />\n- Use Case 2: I want to view the number of prospects by districts with the percentage chance to win those prospects as well as the number of those prospects that are<br />\ncurrently being worked by a Territory Manager<br />\n- Use Case 3: I want to view the net accounts for 1 month. I want to view how many new accounts we need to close in order to meet our sales numbers<br />\n- Use Case 4: I want to view the key prospects of all of my Territory Managers and see what stage that prospect is in.<br />\n- Use Case 5: I want to view the accounts that need help and create tasks and coaching tips to help my team.<br />\n- Use Case 6: I want to view my team&rsquo;s performance by viewing all of the Manager&#39;s &quot;work with&quot; reports with their Territory managers, view their notes, and track their effectiveness<br />\n<br />\n<span style=\"color:#B22222\"><strong>Screen Requirements:</strong></span><br />\n<strong>01 Homepage Screen:</strong><br />\nThe goal of this page is to give a quick overview to the new reporting tool for the leadership group. The page should provide high level benefits, screen shots, and demo&rsquo;s or gettings started guides to showcase the benefit and use of the new reporting tool.<br />\n<br />\nBe sure to emphasize:<br />\n- Create<br />\n- Build<br />\n- Collaborate<br />\n- Analyze<br />\n- Share<br />\n- Manage<br />\n- Track<br />\n<br />\nConsider what a new user experience is like for a first time visitor to this appplication. This initial landing page should serve as a one page overview/ onboarding experience that familiarizes the user with what the Reporting tool can do as well as how the user can start creating projects and assigning team members to start working with The Reporting Tool.&nbsp;<br />\nFor a good example of a intro page, please view this <a href=\"http://www.shegy.nazwa.pl/materialupmarket/mdlp/index_light.html\">reference design.</a>&nbsp;<br />\n<br />\n<strong>02 Leader Dashboard - New User:<br />\n-&nbsp;</strong>After a user logs into the application, they will be taken to their default dashboard. At a glance the dashboard should contain some default data visualizations around key business metrics, tasks/ notifications, calendar events, current reportign projects, archived reporting projects, project activity stream, and quick access to team members who the leader works with.<br />\n-&nbsp;Consider what this dashboard would look like for a first time user who DOES NOT have any projects running with The Reporting Tool. In addition to the default elements listed above, show a clear UI element with a tile, button, or other call to action that would get the new user to start a new project and add it to their dashboard. Perhaps this element is in the current projects section of their dashboard.<br />\n-&nbsp;Clicking on this element will launch the user thru a guided experi- ence of creating a new report project. The user will be walked through selecting their data sources, if necessary...uploading data sources, inviting other team members to the reporting project, and creating tasks around completing the reporting project.&nbsp;</p>\n\n<p><strong>03 Leader Dashboard - Return User:<br />\n-&nbsp;</strong>For this version of the dashboard, we want to explore how this page should be appear for user that has a number of reporting projects underway with The Reporting Tool and their dashboard should focus mainly on access to these reporting projects. It should be similar to the new user dashboard with the exception that they have already created, and or archived reporting projects.<br />\n<br />\nOther items to consider for reporting projects section of the dashboard:<br />\n- Ability to add a new project.<br />\n- Activity stream about current collaboration on reports - Team Comments<br />\n- A Project list with high level details about each project<br />\n-- A project has metadata: The name of the project and other attri- butes.<br />\n-- Team members on the project<br />\n-- Data Sets/ associated artifacts<br />\n-- Should display Created Date and Last Modified Date of project.&nbsp;</p>\n\n<p><strong>03 Create New Project Screen</strong><br />\n- From the project section on the dashboard a user has the ability to create a new project. This will launch a flow where a user will fill out a form with the following information for creating a project within The Reporting Tool.<br />\n- Here are the necessary fields for add a new project:<br />\n<br />\n<em>Project Report</em><br />\n-- Name<br />\n-- Description<br />\n-- Project owner<br />\n- Upon new project creation, user will be asked to choose a data set up upload to the project<br />\n<br />\n<strong>04 Project Details Screen:</strong><br />\n- User should&nbsp;view detailed information about that reporting project, project status, tasks, task status, team communication, as well as data visualizations for multiple reports and artifacts housed within the reporting project.&nbsp;<br />\n- In a &ldquo;tabbed&rdquo; interface, James is able to toggle between reports as well as use intuitive filter UI to start to disect, view, and gain insight from the reports. He is able to note, comment, and collaborate with team members on these reports.<br />\n<br />\nElements to consider including:<br />\n-&nbsp;Created Date, Last Modified Date, Team Members, Reports tab(s)<br />\n-&nbsp;Report 1, Report 2, ect Add a report, Filter UI for the report data visualizations that allow leaders to drill down for more detail on each report.<br />\n<br />\nFor example....the default view might be for the entire region. Include filter UI that allows a user to filter from Region &gt; Market &gt; District &gt; Manager &gt; TMs &gt; Account - Other filter options should include year by year comparison, performance over a specific date range<br />\n- Data visualizations should show target numbers and performance to target<br />\n- Team comments<br />\n- Share/save/ export options options&nbsp;<br />\n<br />\n<strong>05 Add a Report / Commenting:</strong><br />\n- From Report Project details page, should have the ability to add a report and import new data source<br />\n- Should be able to comment on a data which triggers a push notification to other team members<br />\n<br />\n<strong>06 Report View Two:</strong><br />\n- There can be several reports and assets associated within a report project.<br />\n-&nbsp;From a simple tabbed interface, user is quickly able to jump into another report view from with the reporting project detail screen where he can gain meaningful insights from the data visualization.<br />\n-&nbsp;For this screen we would like to see an alternate view to the report- ing detail screen showing a different tab selected that also shows a different data visualization. Consider showing a different style of data visualization, bar chart, pie chart, graph, ect than you are showing in your first vesion of the screen. Be sure to also include the filter UI elements for this view as well.<br />\n-&nbsp;Consider showing an activity/ comment stream in the right hand column of the screen that tracks the communication and progress on this reporting view.&nbsp;</p>\n\n<p><strong>07 Report View Three - Share:</strong><br />\n-&nbsp;Show how the user would share/ save/ or export button and show the options for how he can save/ export the report. (PPT, Excel, PDF).<br />\n-&nbsp;Also consider showing how the user can invite other collaborators to the report project.&nbsp;<br />\n<br />\n<strong>08 Create Tasks / Actions Flow:</strong><br />\n- Show the flow from a report project details screen in which a user is able to create/ and assign tasks to individuals or groups.<br />\n- This should be a dynamic builder allowing for leaders to build in step by step action plans with associated task lists associated to each step<br />\n- Tasks should include due dates, collaboration notes, as well as objectives, and next steps providing a clear path for employees to follow leadership direction<br />\n- Tasks should be associated with the Report project for easy organizing and follow up.<br />\n<br />\n<strong>09 Action Plan / Management:</strong><br />\n<strong>-&nbsp;</strong>The action plan created by James and the leadership team shows up as a work flow for the designated team members who are responsible for action items within the plan.<br />\n-&nbsp;Need to have a Trello-like user experience, the step by step segments of the action plan are laid out in a collaborative work flow for team members to interacte, work on, and complete.&nbsp;</p>\n\n<p><strong><span style=\"color:#FF0000\">Important:</span></strong><br />\n- Keep things consistent. This means all graphic styles should work together.<br />\n- All of the graphics should have a similar feel and general aesthetic appearance<br />\n- Focus on the user experience! Focus on the navigation experience. Keeping consistent visual elements.<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Stock Artwork:</strong></span><br />\nWe are allowing stock photos and stock icons for this challenge<br />\n- Stock Artwork policies: <a href=\"https://help.topcoder.com/hc/en-us/articles/217481408-Policy-for-Stock-Artwork-in-Design-Submissions\">https://help.topcoder.com/hc/en-us/articles/217481408-Policy-for-Stock-Artwork-in-Design-Submissions</a>&nbsp; &nbsp;<br />\n- Latest Design Policies: <a href=\"http://help.topcoder.com/hc/en-us/categories/202610437-DESIGN\">http://help.topcoder.com/hc/en-us/categories/202610437-DESIGN</a><br />\n<br />\n<span style=\"color:#0000FF\"><strong>Target Audience:</strong></span><br />\n- Territory Manager, Sales Coordinator, Food Specialist, DSM<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Judging Criteria</strong></span><br />\nYour submission will be judged on the following criteria:<br />\n- Cleanliness of screen design and user flow<br />\n- Overall design and user experience<br />\n- Simplicity of design/strong, clear design concept<br />\n- How well your design align with the objectives of the challenge<br />\n<br />\n<span style=\"color:#0000FF\"><strong>Submission &amp; Source Files</strong></span><br />\n<strong>Preview Image</strong><br />\nPlease create your preview image as one (1) 1024x1024px JPG or PNG file in RGB color mode at 72dpi and place a screenshot of your submission within it.<br />\n<br />\n<strong>Submission File</strong><br />\nSubmit JPG/PNG for your submission files.<br />\n<br />\n<strong>Source Files</strong><br />\nAll original source files of the submitted design. Files should be created in Adobe Photoshop and saved as layered PSD file, or Adobe Illustrator as a layered AI file or as Sketch!<br />\n<br />\n<strong>Final Fixes</strong><br />\nAs part of the final fixes phase, you may be asked to modify your graphics (sizes or colors) or modify overall colors. We may ask you to update your design or graphics based on checkpoint feedback.</p>\n",
    "screeningScorecardId": "30001363",
    "reviewScorecardId": "30001031",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 5,
    "topCheckPointPrize": 100,
    "postingDate": "2016-10-27T22:36:00.000-04:00",
    "registrationEndDate": "2016-11-02T23:16:00.000-04:00",
    "checkpointSubmissionEndDate": "2016-10-30T23:21:00.000-04:00",
    "submissionEndDate": "2016-11-02T23:21:00.000-04:00",
    "submissionsViewable": "false",
    "reviewType": "INTERNAL",
    "type": "design",
    "allowStockArt": "true",
    "filetypes": [
        "Layered PSD files created in Adobe Photoshop or similar",
        "AI files created in Adobe Illustrator or similar",
        "Sketch"
    ],
    "forumLink": "http://apps.topcoder.com/forums/?module=ThreadList&forumID=607678",
    "appealsEndDate": "2016-11-09T02:21:00.000-05:00",
    "submissionLimit": "5",
    "currentStatus": "Deleted",
    "digitalRunPoints": null,
    "challengeCommunity": "design",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055569",
    "prize": [
        1500,
        750,
        300
    ],
    "winners": [],
    "currentPhaseName": "",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 122,
        "currentTime": 1588211045993
    },
    "requesterInformation": {
        "id": "dfe1b023f5f3cb93053d29e675b4dbcdbff12226-beomYhiONZZ3ndhW",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055569",
            "action": "getChallenge"
        }
    }
},
{
    "challengeType": "Bug Hunt",
    "challengeName": "Hercules TV Web Apps - TVNews and QTBrowser bug hunt",
    "challengeId": 30055570,
    "projectId": 9599,
    "forumId": "34373",
    "detailedRequirements": "<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">The TV Web Apps project is a web application built for display on a TV screen. &nbsp;The web app scrapes and aggregates videos content from a variety of sources. &nbsp;This bug hunt will focus on a specific UI (version 1) and specific content (News). &nbsp;</span><br />\n<br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">You should be able to browse categories and load videos according to what&#39;s in the UI.</span><br />\n<br />\n<strong>Test browser</strong><br />\n<br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">In the forum, you will find a QTBrowser application for both OS X and Windows. &nbsp;You must test using this browser. &nbsp;Instructions on how to load the site will be found in the forum with the executables. &nbsp;This browser simulates the embedded device environment. &nbsp;Ideally, you should set your screen resolution to 1280x720 to simulate the embedded device as well, since the QTBrowser doesn&#39;t support resizing very well.</span><br />\n<br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">Bugs submitted for other browser will&nbsp;</span><strong>not</strong><span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">&nbsp;be accepted - we are&nbsp;</span><strong>only</strong><span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">&nbsp;targeting the QTBrowser</span><br />\n<br />\n<strong>Keyboard navigation</strong><br />\n<br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">The embedded device where this runs in production does not have mouse support. &nbsp;That means that we should expect to be able to navigate the UI with these keyboard:</span><br />\n<br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">* Up</span><br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">* Down</span><br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">* Left</span><br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">* Right</span><br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">* Enter</span><br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">* Esc (to go back)</span><br />\n<br />\n<span style=\"color:rgb(102, 102, 102); font-family:source sans pro,arial,helvetica,sans-serif; font-size:12px\">Please test using your keyboard.<br />\n<br />\nYou can select an option from the main menu, and during playback of a video, if you press &quot;Left&quot; on the keyboard, you&#39;ll get a navigable side menu that allows you to select other videos. &nbsp;During playback, pressing &quot;Up&quot; on the keyboard will show an info panel with a progress bar.</span>\n<p><strong>Content</strong><br />\n<br />\nNote that the individual videos shown in the app may change. &nbsp;We refresh the data on a regular basis, so don&#39;t expect the exact same videos to show at all times for all the different menu options.<br />\n<br />\n<strong>Format</strong><br />\n<br />\nFor each report of a limitation or bug, we need the following information:</p>\n\n<p>1) Steps to reproduce, including any needed information<br />\n2) Screenshots (if applicable)<br />\n3) Expected results after the bug is fixed<br />\n4) Current results, before the bug is fixed<br />\n<br />\nOnly actual bugs will be counted. Tickets logged for enhancements or issues that aren&#39;t bugs won&#39;t be counted.</p>\n\n<p>When in doubt,&nbsp;<strong>always</strong>&nbsp;provide a screenshot. Screenshots are very helpful due to the graphical nature of the application and help clarify bugs. If you don&#39;t provide a screenshot, there&#39;s a good chance your bug will be rejected.</p>\n\n<div><img alt=\"\" src=\"http://apps.topcoder.com/wiki/images/icons/emoticons/warning.gif\" style=\"border:none; height:16px; margin:0px; max-width:100%; outline:0px; padding:0px; vertical-align:middle; width:16px\" />If you log a crash or Javascript error and don&#39;t provide Javascript console output the bug will be rejected<br />\n&nbsp;</div>\n\n<div><img alt=\"\" src=\"http://apps.topcoder.com/wiki/images/icons/emoticons/warning.gif\" style=\"border:none; height:16px; margin:0px; max-width:100%; outline:0px; padding:0px; vertical-align:middle; width:16px\" />If you do&nbsp;<strong>not</strong>&nbsp;properly document your bug reports, they will likely be rejected due to lack of information or documentation. Also, make sure your bug reports are reasonably general. If you submit the same bug that is seen in multiple screens, for instance, you will likely only get credit for the original bug report. The others will all be closed as duplicates.\n\n<p>You will log your tickets here:&nbsp;<a href=\"https://apps.topcoder.com/bugs/browse/HPBU\" rel=\"nofollow\" style=\"padding: 0px; margin: 0px; color: rgb(51, 0, 204); line-height: 1.6; text-decoration: none; outline: 0px; cursor: pointer; transition: all 0.2s ease-in-out; -webkit-tap-highlight-color: transparent; word-wrap: break-word; background: 0px 0px;\">https://apps.topcoder.com/bugs/browse/HPBU<sup><img alt=\"\" class=\"rendericon\" src=\"http://apps.topcoder.com/wiki/images/icons/linkext7.gif\" style=\"border:none; height:7px; margin:0px; max-width:100%; outline:0px; padding:0px; vertical-align:middle; width:7px\" /></sup></a>&nbsp;You&nbsp;<strong>must</strong>&nbsp;select the &quot;TV Web Apps&quot;&nbsp;component for each logged issue or it may not get counted during review.</p>\n</div>\n\n<div><img alt=\"\" src=\"http://apps.topcoder.com/wiki/images/icons/emoticons/warning.gif\" style=\"border:none; height:16px; margin:0px; max-width:100%; outline:0px; padding:0px; vertical-align:middle; width:16px\" />For scoring, the submitter with the most points will win. For submitters who submit but don&#39;t win, if they submit bugs that aren&#39;t covered in the first submission, they will receive $5 for each unique bug reported&nbsp;<strong>up to a maximum of the 1st place prize</strong>\n\n<p>If two submitters submit the same bug report, the submitter who submitted the report first into JIRA will get credit for the bug. The second submitter will not.</p>\n\n<div>&nbsp;</div>\n\n<div>&nbsp;</div>\n</div>\n",
    "finalSubmissionGuidelines": "Please see above",
    "screeningScorecardId": null,
    "reviewScorecardId": "30001220",
    "cmcTaskId": "",
    "numberOfCheckpointsPrizes": 0,
    "topCheckPointPrize": "",
    "postingDate": "2016-10-25T22:54:00.000-04:00",
    "registrationEndDate": "2016-10-27T22:54:00.000-04:00",
    "checkpointSubmissionEndDate": "",
    "submissionEndDate": "2016-10-27T22:56:00.000-04:00",
    "reviewType": "COMMUNITY",
    "type": "develop",
    "forumLink": "http://apps.topcoder.com/forums/?module=Category&categoryID=34373",
    "appealsEndDate": "2016-10-30T23:11:00.000-04:00",
    "currentStatus": "Completed",
    "digitalRunPoints": null,
    "reliabilityBonus": 80,
    "challengeCommunity": "develop",
    "directUrl": "https://www.topcoder.com/direct/contest/detail.action?projectId=30055570",
    "technology": [
        "Node.js"
    ],
    "prize": [
        400
    ],
    "currentPhaseName": "Stalled",
    "currentPhaseRemainingTime": 0,
    "currentPhaseEndDate": "",
    "platforms": [
        "Heroku"
    ],
    "serverInformation": {
        "serverName": "TopCoder API",
        "apiVersion": "0.0.1",
        "requestDuration": 111,
        "currentTime": 1588211046840
    },
    "requesterInformation": {
        "id": "1e0c3c0b779d37dd3b4f3e9091ce7309667d17bc-TediZPE5W8jmaaHO",
        "remoteIP": "36.4.107.60",
        "receivedParams": {
            "apiVersion": "v2",
            "challengeId": "30055570",
            "action": "getChallenge"
        }
    }
}
]
}